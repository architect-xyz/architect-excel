!function(e,n){"object"==typeof exports&&"object"==typeof module?module.exports=n():"function"==typeof define&&define.amd?define([],n):"object"==typeof exports?exports.functions=n():e.functions=n()}(this,(()=>(()=>{"use strict";var e={d:(n,t)=>{for(var r in t)e.o(t,r)&&!e.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:t[r]})},o:(e,n)=>Object.prototype.hasOwnProperty.call(e,n),r:e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}},n={};function t(e){const{credentials:n="same-origin",referrer:t,referrerPolicy:i,shouldRetry:a=()=>!1}=e,o=e.fetchFn||fetch,d=e.abortControllerImpl||AbortController,s=(()=>{let e=!1;const n=[];return{get disposed(){return e},onDispose:t=>e?(setTimeout((()=>t()),0),()=>{}):(n.push(t),()=>{n.splice(n.indexOf(t),1)}),dispose(){if(!e){e=!0;for(const e of[...n])e()}}}})();return{subscribe(u,c){if(s.disposed)throw new Error("Client has been disposed");const l=new d,m=s.onDispose((()=>{m(),l.abort()}));return(async()=>{var d;let s=null,m=0;for(;;){if(s){const e=await a(s,m);if(l.signal.aborted)return;if(!e)throw s;m++}try{const a="function"==typeof e.url?await e.url(u):e.url;if(l.signal.aborted)return;const s="function"==typeof e.headers?await e.headers():null!==(d=e.headers)&&void 0!==d?d:{};if(l.signal.aborted)return;let m;try{m=await o(a,{signal:l.signal,method:"POST",headers:Object.assign(Object.assign({},s),{"content-type":"application/json; charset=utf-8",accept:"application/graphql-response+json, application/json"}),credentials:n,referrer:t,referrerPolicy:i,body:JSON.stringify(u)})}catch(e){throw new r(e)}if(!m.ok)throw new r(m);if(!m.body)throw new Error("Missing response body");const p=m.headers.get("content-type");if(!p)throw new Error("Missing response content-type");if(!p.includes("application/graphql-response+json")&&!p.includes("application/json"))throw new Error(`Unsupported response content-type ${p}`);const y=await m.json();return c.next(y),l.abort()}catch(e){if(l.signal.aborted)return;if(!(e instanceof r))throw e;s=e}}})().then((()=>c.complete())).catch((e=>c.error(e))),()=>l.abort()},dispose(){s.dispose()}}}e.r(n),e.d(n,{getMarketMid:()=>_e,initializeClient:()=>Oe,testClient:()=>ke,testFunction:()=>Te,validateAPIKey:()=>Se});class r extends Error{constructor(e){let n,t;var r;!function(e){return"object"==typeof e&&null!==e}(r=e)||"boolean"!=typeof r.ok||"number"!=typeof r.status||"string"!=typeof r.statusText?n=e instanceof Error?e.message:String(e):(t=e,n="Server responded with "+e.status+": "+e.statusText),super(n),this.name=this.constructor.name,this.response=t}}var i,a,o="Document",d="FragmentDefinition";class s extends Error{constructor(e,n,t,r,i,a,o){super(e),this.name="GraphQLError",this.message=e,i&&(this.path=i),n&&(this.nodes=Array.isArray(n)?n:[n]),t&&(this.source=t),r&&(this.positions=r),a&&(this.originalError=a);var d=o;if(!d&&a){var s=a.extensions;s&&"object"==typeof s&&(d=s)}this.extensions=d||{}}toJSON(){return{...this,message:this.message}}toString(){return this.message}get[Symbol.toStringTag](){return"GraphQLError"}}function u(e){return new s(`Syntax Error: Unexpected token at ${a} in ${e}`)}function c(e){if(e.lastIndex=a,e.test(i))return i.slice(a,a=e.lastIndex)}var l=/ +(?=[^\s])/y;function m(e){for(var n=e.split("\n"),t="",r=0,i=0,a=n.length-1,o=0;o<n.length;o++)l.lastIndex=0,l.test(n[o])&&(o&&(!r||l.lastIndex<r)&&(r=l.lastIndex),i=i||o,a=o);for(var d=i;d<=a;d++)d!==i&&(t+="\n"),t+=n[d].slice(r).replace(/\\"""/g,'"""');return t}function p(){for(var e=0|i.charCodeAt(a++);9===e||10===e||13===e||32===e||35===e||44===e||65279===e;e=0|i.charCodeAt(a++))if(35===e)for(;10!==(e=i.charCodeAt(a++))&&13!==e;);a--}var y,f=/[_A-Za-z]\w*/y,I=new RegExp("(?:(null|true|false)|\\$("+f.source+')|(-?\\d+)((?:\\.\\d+)?[eE][+-]?\\d+|\\.\\d+)?|("""(?:"""|(?:[\\s\\S]*?[^\\\\])"""))|("(?:"|[^\\r\\n]*?[^\\\\]"))|('+f.source+"))","y"),h=((y=h||{})[y.Const=1]="Const",y[y.Var=2]="Var",y[y.Int=3]="Int",y[y.Float=4]="Float",y[y.BlockString=5]="BlockString",y[y.String=6]="String",y[y.Enum=7]="Enum",y),v=/\\/;function g(e){var n,t;if(I.lastIndex=a,91===i.charCodeAt(a)){a++,p();for(var r=[];93!==i.charCodeAt(a);)r.push(g(e));return a++,p(),{kind:"ListValue",values:r}}if(123===i.charCodeAt(a)){a++,p();for(var o=[];125!==i.charCodeAt(a);){if(null==(n=c(f)))throw u("ObjectField");if(p(),58!==i.charCodeAt(a++))throw u("ObjectField");p(),o.push({kind:"ObjectField",name:{kind:"Name",value:n},value:g(e)})}return a++,p(),{kind:"ObjectValue",fields:o}}if(null!=(t=I.exec(i))){if(a=I.lastIndex,p(),null!=(n=t[h.Const]))return"null"===n?{kind:"NullValue"}:{kind:"BooleanValue",value:"true"===n};if(null!=(n=t[h.Var])){if(e)throw u("Variable");return{kind:"Variable",name:{kind:"Name",value:n}}}var d;if(null!=(n=t[h.Int]))return null!=(d=t[h.Float])?{kind:"FloatValue",value:n+d}:{kind:"IntValue",value:n};if(null!=(n=t[h.BlockString]))return{kind:"StringValue",value:m(n.slice(3,-3)),block:!0};if(null!=(n=t[h.String]))return{kind:"StringValue",value:v.test(n)?JSON.parse(n):n.slice(1,-1),block:!1};if(null!=(n=t[h.Enum]))return{kind:"EnumValue",value:n}}throw u("Value")}function O(e){if(40===i.charCodeAt(a)){var n,t=[];a++,p();do{if(null==(n=c(f)))throw u("Argument");if(p(),58!==i.charCodeAt(a++))throw u("Argument");p(),t.push({kind:"Argument",name:{kind:"Name",value:n},value:g(e)})}while(41!==i.charCodeAt(a));return a++,p(),t}}function _(e){if(64===i.charCodeAt(a)){var n,t=[];do{if(a++,null==(n=c(f)))throw u("Directive");p(),t.push({kind:"Directive",name:{kind:"Name",value:n},arguments:O(e)})}while(64===i.charCodeAt(a));return t}}function T(){for(var e,n=0;91===i.charCodeAt(a);)n++,a++,p();if(null==(e=c(f)))throw u("NamedType");p();var t={kind:"NamedType",name:{kind:"Name",value:e}};do{if(33===i.charCodeAt(a)&&(a++,p(),t={kind:"NonNullType",type:t}),n){if(93!==i.charCodeAt(a++))throw u("NamedType");p(),t={kind:"ListType",type:t}}}while(n--);return t}var S=new RegExp("(?:(\\.{3})|("+f.source+"))","y"),k=function(e){return e[e.Spread=1]="Spread",e[e.Name=2]="Name",e}(k||{});function A(){var e,n,t=[];do{if(S.lastIndex=a,null==(n=S.exec(i)))throw u("SelectionSet");if(a=S.lastIndex,null!=n[k.Spread]){p();var r=c(f);if(null!=r&&"on"!==r)p(),t.push({kind:"FragmentSpread",name:{kind:"Name",value:r},directives:_(!1)});else{if(p(),"on"===r){if(null==(r=c(f)))throw u("NamedType");p()}var o=_(!1);if(123!==i.charCodeAt(a++))throw u("InlineFragment");p(),t.push({kind:"InlineFragment",typeCondition:r?{kind:"NamedType",name:{kind:"Name",value:r}}:void 0,directives:o,selectionSet:A()})}}else if(null!=(e=n[k.Name])){var d=void 0;if(p(),58===i.charCodeAt(a)){if(a++,p(),d=e,null==(e=c(f)))throw u("Field");p()}var s=O(!1);p();var l=_(!1),m=void 0;123===i.charCodeAt(a)&&(a++,p(),m=A()),t.push({kind:"Field",alias:d?{kind:"Name",value:d}:void 0,name:{kind:"Name",value:e},arguments:s,directives:l,selectionSet:m})}}while(125!==i.charCodeAt(a));return a++,p(),{kind:"SelectionSet",selections:t}}function E(){var e,n;if(null==(e=c(f)))throw u("FragmentDefinition");if(p(),"on"!==c(f))throw u("FragmentDefinition");if(p(),null==(n=c(f)))throw u("FragmentDefinition");p();var t=_(!1);if(123!==i.charCodeAt(a++))throw u("FragmentDefinition");return p(),{kind:"FragmentDefinition",name:{kind:"Name",value:e},typeCondition:{kind:"NamedType",name:{kind:"Name",value:n}},directives:t,selectionSet:A()}}var $=/(?:query|mutation|subscription|fragment)/y;function N(e){var n,t,r;if(e&&(p(),n=c(f),t=function(){if(p(),40===i.charCodeAt(a)){var e,n=[];a++,p();do{if(36!==i.charCodeAt(a++))throw u("Variable");if(null==(e=c(f)))throw u("Variable");if(p(),58!==i.charCodeAt(a++))throw u("VariableDefinition");p();var t=T(),r=void 0;61===i.charCodeAt(a)&&(a++,p(),r=g(!0)),p(),n.push({kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:e}},type:t,defaultValue:r,directives:_(!0)})}while(41!==i.charCodeAt(a));return a++,p(),n}}(),r=_(!1)),123===i.charCodeAt(a))return a++,p(),{kind:"OperationDefinition",operation:e||"query",name:n?{kind:"Name",value:n}:void 0,variableDefinitions:t,directives:r,selectionSet:A()}}function P(e,n){return a=0,function(e,n){var t,r;p();var i,o=[];do{if("fragment"===(t=c($)))p(),o.push(E());else{if(null==(r=N(t)))throw u("Document");o.push(r)}}while(a<e.length);return n?{kind:"Document",definitions:o}:{kind:"Document",definitions:o,set loc(e){i=e},get loc(){return i||(i={start:0,end:e.length,startToken:void 0,endToken:void 0,source:{body:e,name:"graphql.web",locationOffset:{line:1,column:1}}}),i}}}(i="string"==typeof e.body?e.body:e,n&&n.noLocation)}var x=0,C=new Set;function b(){function e(e,n){var t,r,i=P(e).definitions,a=new Set;for(var s of n||[])for(var u of s.definitions)u.kind!==d||a.has(u)||(i.push(u),a.add(u));return(t=i[0].kind===d)&&i[0].directives&&(i[0].directives=i[0].directives.filter((e=>"_unmask"!==e.name.value))),{kind:o,definitions:i,get loc(){if(!r&&t){var i=e+function(e){try{x++;var n="";for(var t of e)if(!C.has(t)){C.add(t);var{loc:r}=t;r&&(n+=r.source.body)}return n}finally{0==--x&&C.clear()}}(n||[]);return{start:0,end:i.length,source:{body:i,name:"GraphQLTada",locationOffset:{line:1,column:1}}}}return r},set loc(e){r=e}}}return e.scalar=function(e,n){return n},e.persisted=function(e,n){return{kind:o,definitions:n?n.definitions:[],documentId:e}},e}function D(e){return 9===e||32===e}b();const F=/[\x00-\x1f\x22\x5c\x7f-\x9f]/g;function M(e){return w[e.charCodeAt(0)]}const w=["\\u0000","\\u0001","\\u0002","\\u0003","\\u0004","\\u0005","\\u0006","\\u0007","\\b","\\t","\\n","\\u000B","\\f","\\r","\\u000E","\\u000F","\\u0010","\\u0011","\\u0012","\\u0013","\\u0014","\\u0015","\\u0016","\\u0017","\\u0018","\\u0019","\\u001A","\\u001B","\\u001C","\\u001D","\\u001E","\\u001F","","",'\\"',"","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","\\\\","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","\\u007F","\\u0080","\\u0081","\\u0082","\\u0083","\\u0084","\\u0085","\\u0086","\\u0087","\\u0088","\\u0089","\\u008A","\\u008B","\\u008C","\\u008D","\\u008E","\\u008F","\\u0090","\\u0091","\\u0092","\\u0093","\\u0094","\\u0095","\\u0096","\\u0097","\\u0098","\\u0099","\\u009A","\\u009B","\\u009C","\\u009D","\\u009E","\\u009F"];function j(e,n){if(!Boolean(e))throw new Error(n)}function R(e){return q(e,[])}function q(e,n){switch(typeof e){case"string":return JSON.stringify(e);case"function":return e.name?`[function ${e.name}]`:"[function]";case"object":return function(e,n){if(null===e)return"null";if(n.includes(e))return"[Circular]";const t=[...n,e];if(function(e){return"function"==typeof e.toJSON}(e)){const n=e.toJSON();if(n!==e)return"string"==typeof n?n:q(n,t)}else if(Array.isArray(e))return function(e,n){if(0===e.length)return"[]";if(n.length>2)return"[Array]";const t=Math.min(10,e.length),r=e.length-t,i=[];for(let r=0;r<t;++r)i.push(q(e[r],n));return 1===r?i.push("... 1 more item"):r>1&&i.push(`... ${r} more items`),"["+i.join(", ")+"]"}(e,t);return function(e,n){const t=Object.entries(e);if(0===t.length)return"{}";if(n.length>2)return"["+function(e){const n=Object.prototype.toString.call(e).replace(/^\[object /,"").replace(/]$/,"");if("Object"===n&&"function"==typeof e.constructor){const n=e.constructor.name;if("string"==typeof n&&""!==n)return n}return n}(e)+"]";const r=t.map((([e,t])=>e+": "+q(t,n)));return"{ "+r.join(", ")+" }"}(e,t)}(e,n);default:return String(e)}}Symbol.toStringTag,Symbol.toStringTag;const L={Name:[],Document:["definitions"],OperationDefinition:["name","variableDefinitions","directives","selectionSet"],VariableDefinition:["variable","type","defaultValue","directives"],Variable:["name"],SelectionSet:["selections"],Field:["alias","name","arguments","directives","selectionSet"],Argument:["name","value"],FragmentSpread:["name","directives"],InlineFragment:["typeCondition","directives","selectionSet"],FragmentDefinition:["name","variableDefinitions","typeCondition","directives","selectionSet"],IntValue:[],FloatValue:[],StringValue:[],BooleanValue:[],NullValue:[],EnumValue:[],ListValue:["values"],ObjectValue:["fields"],ObjectField:["name","value"],Directive:["name","arguments"],NamedType:["name"],ListType:["type"],NonNullType:["type"],SchemaDefinition:["description","directives","operationTypes"],OperationTypeDefinition:["type"],ScalarTypeDefinition:["description","name","directives"],ObjectTypeDefinition:["description","name","interfaces","directives","fields"],FieldDefinition:["description","name","arguments","type","directives"],InputValueDefinition:["description","name","type","defaultValue","directives"],InterfaceTypeDefinition:["description","name","interfaces","directives","fields"],UnionTypeDefinition:["description","name","directives","types"],EnumTypeDefinition:["description","name","directives","values"],EnumValueDefinition:["description","name","directives"],InputObjectTypeDefinition:["description","name","directives","fields"],DirectiveDefinition:["description","name","arguments","locations"],SchemaExtension:["directives","operationTypes"],ScalarTypeExtension:["name","directives"],ObjectTypeExtension:["name","interfaces","directives","fields"],InterfaceTypeExtension:["name","interfaces","directives","fields"],UnionTypeExtension:["name","directives","types"],EnumTypeExtension:["name","directives","values"],InputObjectTypeExtension:["name","directives","fields"]},V=new Set(Object.keys(L));function U(e){const n=null==e?void 0:e.kind;return"string"==typeof n&&V.has(n)}var B,K,G;!function(e){e.QUERY="query",e.MUTATION="mutation",e.SUBSCRIPTION="subscription"}(B||(B={})),(G=K||(K={})).NAME="Name",G.DOCUMENT="Document",G.OPERATION_DEFINITION="OperationDefinition",G.VARIABLE_DEFINITION="VariableDefinition",G.SELECTION_SET="SelectionSet",G.FIELD="Field",G.ARGUMENT="Argument",G.FRAGMENT_SPREAD="FragmentSpread",G.INLINE_FRAGMENT="InlineFragment",G.FRAGMENT_DEFINITION="FragmentDefinition",G.VARIABLE="Variable",G.INT="IntValue",G.FLOAT="FloatValue",G.STRING="StringValue",G.BOOLEAN="BooleanValue",G.NULL="NullValue",G.ENUM="EnumValue",G.LIST="ListValue",G.OBJECT="ObjectValue",G.OBJECT_FIELD="ObjectField",G.DIRECTIVE="Directive",G.NAMED_TYPE="NamedType",G.LIST_TYPE="ListType",G.NON_NULL_TYPE="NonNullType",G.SCHEMA_DEFINITION="SchemaDefinition",G.OPERATION_TYPE_DEFINITION="OperationTypeDefinition",G.SCALAR_TYPE_DEFINITION="ScalarTypeDefinition",G.OBJECT_TYPE_DEFINITION="ObjectTypeDefinition",G.FIELD_DEFINITION="FieldDefinition",G.INPUT_VALUE_DEFINITION="InputValueDefinition",G.INTERFACE_TYPE_DEFINITION="InterfaceTypeDefinition",G.UNION_TYPE_DEFINITION="UnionTypeDefinition",G.ENUM_TYPE_DEFINITION="EnumTypeDefinition",G.ENUM_VALUE_DEFINITION="EnumValueDefinition",G.INPUT_OBJECT_TYPE_DEFINITION="InputObjectTypeDefinition",G.DIRECTIVE_DEFINITION="DirectiveDefinition",G.SCHEMA_EXTENSION="SchemaExtension",G.SCALAR_TYPE_EXTENSION="ScalarTypeExtension",G.OBJECT_TYPE_EXTENSION="ObjectTypeExtension",G.INTERFACE_TYPE_EXTENSION="InterfaceTypeExtension",G.UNION_TYPE_EXTENSION="UnionTypeExtension",G.ENUM_TYPE_EXTENSION="EnumTypeExtension",G.INPUT_OBJECT_TYPE_EXTENSION="InputObjectTypeExtension";const Q=Object.freeze({});function z(e,n){const t=e[n];return"object"==typeof t?t:"function"==typeof t?{enter:t,leave:void 0}:{enter:e.enter,leave:e.leave}}const Y={Name:{leave:e=>e.value},Variable:{leave:e=>"$"+e.name},Document:{leave:e=>H(e.definitions,"\n\n")},OperationDefinition:{leave(e){const n=J("(",H(e.variableDefinitions,", "),")"),t=H([e.operation,H([e.name,n]),H(e.directives," ")]," ");return("query"===t?"":t+" ")+e.selectionSet}},VariableDefinition:{leave:({variable:e,type:n,defaultValue:t,directives:r})=>e+": "+n+J(" = ",t)+J(" ",H(r," "))},SelectionSet:{leave:({selections:e})=>W(e)},Field:{leave({alias:e,name:n,arguments:t,directives:r,selectionSet:i}){const a=J("",e,": ")+n;let o=a+J("(",H(t,", "),")");return o.length>80&&(o=a+J("(\n",X(H(t,"\n")),"\n)")),H([o,H(r," "),i]," ")}},Argument:{leave:({name:e,value:n})=>e+": "+n},FragmentSpread:{leave:({name:e,directives:n})=>"..."+e+J(" ",H(n," "))},InlineFragment:{leave:({typeCondition:e,directives:n,selectionSet:t})=>H(["...",J("on ",e),H(n," "),t]," ")},FragmentDefinition:{leave:({name:e,typeCondition:n,variableDefinitions:t,directives:r,selectionSet:i})=>`fragment ${e}${J("(",H(t,", "),")")} on ${n} ${J("",H(r," ")," ")}`+i},IntValue:{leave:({value:e})=>e},FloatValue:{leave:({value:e})=>e},StringValue:{leave:({value:e,block:n})=>n?function(e){const n=e.replace(/"""/g,'\\"""'),t=n.split(/\r\n|[\n\r]/g),r=1===t.length,i=t.length>1&&t.slice(1).every((e=>0===e.length||D(e.charCodeAt(0)))),a=n.endsWith('\\"""'),o=e.endsWith('"')&&!a,d=e.endsWith("\\"),s=o||d,u=!r||e.length>70||s||i||a;let c="";const l=r&&D(e.charCodeAt(0));return(u&&!l||i)&&(c+="\n"),c+=n,(u||s)&&(c+="\n"),'"""'+c+'"""'}(e):`"${e.replace(F,M)}"`},BooleanValue:{leave:({value:e})=>e?"true":"false"},NullValue:{leave:()=>"null"},EnumValue:{leave:({value:e})=>e},ListValue:{leave:({values:e})=>"["+H(e,", ")+"]"},ObjectValue:{leave:({fields:e})=>"{"+H(e,", ")+"}"},ObjectField:{leave:({name:e,value:n})=>e+": "+n},Directive:{leave:({name:e,arguments:n})=>"@"+e+J("(",H(n,", "),")")},NamedType:{leave:({name:e})=>e},ListType:{leave:({type:e})=>"["+e+"]"},NonNullType:{leave:({type:e})=>e+"!"},SchemaDefinition:{leave:({description:e,directives:n,operationTypes:t})=>J("",e,"\n")+H(["schema",H(n," "),W(t)]," ")},OperationTypeDefinition:{leave:({operation:e,type:n})=>e+": "+n},ScalarTypeDefinition:{leave:({description:e,name:n,directives:t})=>J("",e,"\n")+H(["scalar",n,H(t," ")]," ")},ObjectTypeDefinition:{leave:({description:e,name:n,interfaces:t,directives:r,fields:i})=>J("",e,"\n")+H(["type",n,J("implements ",H(t," & ")),H(r," "),W(i)]," ")},FieldDefinition:{leave:({description:e,name:n,arguments:t,type:r,directives:i})=>J("",e,"\n")+n+(Z(t)?J("(\n",X(H(t,"\n")),"\n)"):J("(",H(t,", "),")"))+": "+r+J(" ",H(i," "))},InputValueDefinition:{leave:({description:e,name:n,type:t,defaultValue:r,directives:i})=>J("",e,"\n")+H([n+": "+t,J("= ",r),H(i," ")]," ")},InterfaceTypeDefinition:{leave:({description:e,name:n,interfaces:t,directives:r,fields:i})=>J("",e,"\n")+H(["interface",n,J("implements ",H(t," & ")),H(r," "),W(i)]," ")},UnionTypeDefinition:{leave:({description:e,name:n,directives:t,types:r})=>J("",e,"\n")+H(["union",n,H(t," "),J("= ",H(r," | "))]," ")},EnumTypeDefinition:{leave:({description:e,name:n,directives:t,values:r})=>J("",e,"\n")+H(["enum",n,H(t," "),W(r)]," ")},EnumValueDefinition:{leave:({description:e,name:n,directives:t})=>J("",e,"\n")+H([n,H(t," ")]," ")},InputObjectTypeDefinition:{leave:({description:e,name:n,directives:t,fields:r})=>J("",e,"\n")+H(["input",n,H(t," "),W(r)]," ")},DirectiveDefinition:{leave:({description:e,name:n,arguments:t,repeatable:r,locations:i})=>J("",e,"\n")+"directive @"+n+(Z(t)?J("(\n",X(H(t,"\n")),"\n)"):J("(",H(t,", "),")"))+(r?" repeatable":"")+" on "+H(i," | ")},SchemaExtension:{leave:({directives:e,operationTypes:n})=>H(["extend schema",H(e," "),W(n)]," ")},ScalarTypeExtension:{leave:({name:e,directives:n})=>H(["extend scalar",e,H(n," ")]," ")},ObjectTypeExtension:{leave:({name:e,interfaces:n,directives:t,fields:r})=>H(["extend type",e,J("implements ",H(n," & ")),H(t," "),W(r)]," ")},InterfaceTypeExtension:{leave:({name:e,interfaces:n,directives:t,fields:r})=>H(["extend interface",e,J("implements ",H(n," & ")),H(t," "),W(r)]," ")},UnionTypeExtension:{leave:({name:e,directives:n,types:t})=>H(["extend union",e,H(n," "),J("= ",H(t," | "))]," ")},EnumTypeExtension:{leave:({name:e,directives:n,values:t})=>H(["extend enum",e,H(n," "),W(t)]," ")},InputObjectTypeExtension:{leave:({name:e,directives:n,fields:t})=>H(["extend input",e,H(n," "),W(t)]," ")}};function H(e,n=""){var t;return null!==(t=null==e?void 0:e.filter((e=>e)).join(n))&&void 0!==t?t:""}function W(e){return J("{\n",X(H(e,"\n")),"\n}")}function J(e,n,t=""){return null!=n&&""!==n?e+n+t:""}function X(e){return J("  ",e.replace(/\n/g,"\n  "))}function Z(e){var n;return null!==(n=null==e?void 0:e.some((e=>e.includes("\n"))))&&void 0!==n&&n}const ee=b();class ne{client;constructor(e,n){const t="live"===e.tradingMode?"4567":"6789",r=e.host.includes(t)?e.host:e.host.replace(/\/$/,`:${t}/`),i={Authorization:`Basic ${e.apiKey} ${e.apiSecret}`};"paper"===e.tradingMode&&(i["x-architect-account-mode"]="paper"),this.client=n({url:`${r}graphql`,headers:i})}parse(e){return ee(e)}async execute(e,n){return new Promise(((t,r)=>{let i;var a;this.client.subscribe({query:(a=e,function(e,n,t=L){const r=new Map;for(const e of Object.values(K))r.set(e,z(n,e));let i,a,o,d=Array.isArray(e),s=[e],u=-1,c=[],l=e;const m=[],p=[];do{u++;const e=u===s.length,h=e&&0!==c.length;if(e){if(a=0===p.length?void 0:m[m.length-1],l=o,o=p.pop(),h)if(d){l=l.slice();let e=0;for(const[n,t]of c){const r=n-e;null===t?(l.splice(r,1),e++):l[r]=t}}else{l=Object.defineProperties({},Object.getOwnPropertyDescriptors(l));for(const[e,n]of c)l[e]=n}u=i.index,s=i.keys,c=i.edits,d=i.inArray,i=i.prev}else if(o){if(a=d?u:s[u],l=o[a],null==l)continue;m.push(a)}let v;if(!Array.isArray(l)){var y,f;U(l)||j(!1,`Invalid AST Node: ${R(l)}.`);const t=e?null===(y=r.get(l.kind))||void 0===y?void 0:y.leave:null===(f=r.get(l.kind))||void 0===f?void 0:f.enter;if(v=null==t?void 0:t.call(n,l,a,o,m,p),v===Q)break;if(!1===v){if(!e){m.pop();continue}}else if(void 0!==v&&(c.push([a,v]),!e)){if(!U(v)){m.pop();continue}l=v}}var I;void 0===v&&h&&c.push([a,l]),e?m.pop():(i={inArray:d,index:u,keys:s,edits:c,prev:i},d=Array.isArray(l),s=d?l:null!==(I=t[l.kind])&&void 0!==I?I:[],u=-1,c=[],o&&p.push(o),o=l)}while(void 0!==i);return 0!==c.length?c[c.length-1][1]:e}(a,Y)),variables:n},{next:e=>{i=e.data},error:e=>r(e),complete:()=>t(i)})}))}async accountSummaries(e){return this.execute(ee(`query AccountSummaries {\n        accountSummaries {\n          __typename\n          snapshotTs\n          byAccount {\n            account {\n              id\n              name\n            }\n            balances {\n              product {\n                __typename\n                id\n                name\n                kind\n                markUsd\n              }\n              account {\n                id\n                name\n              }\n              venue {\n                id\n                name\n              }\n              amount\n              totalMargin\n              positionMargin\n              purchasingPower\n              cashExcess\n              yesterdayBalance\n            }\n            positions {\n              account {\n                id\n                name\n              }\n              venue {\n                id\n                name\n              }\n              market {\n                __typename\n                venue {\n                  id\n                  name\n                }\n                exchangeSymbol\n                id\n                cmeProductGroupInfo {\n                  productName\n                  securityType\n                  category\n                  subCategory\n                  mainFraction\n                }\n                kind {\n                  ... on ExchangeMarketKind {\n                    __typename\n                    base {\n                      __typename\n                      id\n                      name\n                      kind\n                      markUsd\n                    }\n                    quote {\n                      __typename\n                      id\n                      name\n                      kind\n                      markUsd\n                    }\n                  }\n                  ... on PoolMarketKind {\n                    __typename\n                    products {\n                      __typename\n                      id\n                      name\n                      kind\n                      markUsd\n                    }\n                  }\n                }\n                name\n                tickSize\n                stepSize\n                minOrderQuantity\n                minOrderQuantityUnit\n                route {\n                  id\n                  name\n                }\n                isFavorite\n              }\n              dir\n              quantity\n              averagePrice\n              tradeDate\n              tradeTime\n            }\n          }\n          ${e.join(" ")}\n        }\n      }`)).then((e=>e.accountSummaries))}async accountSummariesForCpty(e,n,t){return this.execute(ee(`query AccountSummariesForCpty($venue: VenueId!, $route: RouteId!) {\n        accountSummariesForCpty(venue: $venue, route: $route) {\n          __typename\n          snapshotTs\n          byAccount {\n            account {\n              id\n              name\n            }\n            balances {\n              product {\n                __typename\n                id\n                name\n                kind\n                markUsd\n              }\n              account {\n                id\n                name\n              }\n              venue {\n                id\n                name\n              }\n              amount\n              totalMargin\n              positionMargin\n              purchasingPower\n              cashExcess\n              yesterdayBalance\n            }\n            positions {\n              account {\n                id\n                name\n              }\n              venue {\n                id\n                name\n              }\n              market {\n                __typename\n                venue {\n                  id\n                  name\n                }\n                exchangeSymbol\n                id\n                cmeProductGroupInfo {\n                  productName\n                  securityType\n                  category\n                  subCategory\n                  mainFraction\n                }\n                kind {\n                  ... on ExchangeMarketKind {\n                    __typename\n                    base {\n                      __typename\n                      id\n                      name\n                      kind\n                      markUsd\n                    }\n                    quote {\n                      __typename\n                      id\n                      name\n                      kind\n                      markUsd\n                    }\n                  }\n                  ... on PoolMarketKind {\n                    __typename\n                    products {\n                      __typename\n                      id\n                      name\n                      kind\n                      markUsd\n                    }\n                  }\n                }\n                name\n                tickSize\n                stepSize\n                minOrderQuantity\n                minOrderQuantityUnit\n                route {\n                  id\n                  name\n                }\n                isFavorite\n              }\n              dir\n              quantity\n              averagePrice\n              tradeDate\n              tradeTime\n            }\n          }\n          ${e.join(" ")}\n        }\n      }`),{venue:n,route:t}).then((e=>e.accountSummariesForCpty))}async accounts(e){return this.execute(ee(`query Accounts {\n        accounts {\n          __typename\n          id\n          name\n          ${e.join(" ")}\n        }\n      }`)).then((e=>e.accounts))}async algoLog(e,n){return this.execute(ee(`query AlgoLog($orderId: OrderId!) {\n        algoLog(orderId: $orderId) { __typename ${e.join(" ")} }\n      }`),{orderId:n}).then((e=>e.algoLog))}async algoOrder(e,n){return this.execute(ee(`query AlgoOrder($orderId: OrderId!) {\n        algoOrder(orderId: $orderId) {\n          __typename\n          orderId\n          trader\n          account\n          algo\n          parentOrderId\n          markets\n          ${e.join(" ")}\n        }\n      }`),{orderId:n}).then((e=>e.algoOrder))}async algoStatus(e,n){return this.execute(ee(`query AlgoStatus($orderId: OrderId) {\n        algoStatus(orderId: $orderId) {\n          __typename\n          orderId\n          order {\n            orderId\n            trader\n            account\n            algo\n            parentOrderId\n            markets\n          }\n          creationTime\n          status\n          lastStatusChange\n          fractionComplete\n          ${e.join(" ")}\n        }\n      }`),{orderId:n}).then((e=>e.algoStatus))}async bookSnapshot(e,n,t,r,i,a){return this.execute(ee(`query BookSnapshot($numLevels: Int!, $market: MarketId!, $delayed: Boolean, $precision: Decimal, $retainSubscriptionForNSeconds: Int) {\n        bookSnapshot(numLevels: $numLevels, market: $market, delayed: $delayed, precision: $precision, retainSubscriptionForNSeconds: $retainSubscriptionForNSeconds) {\n          __typename\n          timestamp\n          bids {\n            price\n            amount\n            total\n          }\n          asks {\n            price\n            amount\n            total\n          }\n          ${e.join(" ")}\n        }\n      }`),{numLevels:n,market:t,delayed:r,precision:i,retainSubscriptionForNSeconds:a}).then((e=>e.bookSnapshot))}async cmeProductGroupInfos(e){return this.execute(ee(`query CmeProductGroupInfos {\n        cmeProductGroupInfos { __typename ${e.join(" ")} }\n      }`)).then((e=>e.cmeProductGroupInfos))}async coinInfo(e,n){return this.execute(ee(`query CoinInfo($product: ProductId!) {\n        coinInfo(product: $product) { __typename ${e.join(" ")} }\n      }`),{product:n}).then((e=>e.coinInfo))}async coinInfos(e){return this.execute(ee(`query CoinInfos {\n        coinInfos { __typename ${e.join(" ")} }\n      }`)).then((e=>e.coinInfos))}async cptys(e){return this.execute(ee(`query Cptys {\n        cptys { __typename ${e.join(" ")} }\n      }`)).then((e=>e.cptys))}async fills(e,n,t,r,i){return this.execute(ee(`query Fills($base: ProductId, $quote: ProductId, $route: RouteId, $venue: VenueId) {\n        fills(base: $base, quote: $quote, route: $route, venue: $venue) {\n          __typename\n          normal {\n            kind\n            fillId\n            orderId\n            market {\n              __typename\n              venue {\n                id\n                name\n              }\n              exchangeSymbol\n              id\n              cmeProductGroupInfo {\n                productName\n                securityType\n                category\n                subCategory\n                mainFraction\n              }\n              kind {\n                ... on ExchangeMarketKind {\n                  __typename\n                  base {\n                    __typename\n                    id\n                    name\n                    kind\n                    markUsd\n                  }\n                  quote {\n                    __typename\n                    id\n                    name\n                    kind\n                    markUsd\n                  }\n                }\n                ... on PoolMarketKind {\n                  __typename\n                  products {\n                    __typename\n                    id\n                    name\n                    kind\n                    markUsd\n                  }\n                }\n              }\n              name\n              tickSize\n              stepSize\n              minOrderQuantity\n              minOrderQuantityUnit\n              route {\n                id\n                name\n              }\n              isFavorite\n            }\n            dir\n            price\n            quantity\n            recvTime\n            tradeTime\n          }\n          ${e.join(" ")}\n        }\n      }`),{base:n,quote:t,route:r,venue:i}).then((e=>e.fills))}async filterMarkets(e,n){return this.execute(ee(`query FilterMarkets($filter: MarketFilter!) {\n        filterMarkets(filter: $filter) {\n          __typename\n          __typename\n          venue {\n            id\n            name\n          }\n          exchangeSymbol\n          id\n          cmeProductGroupInfo {\n            productName\n            securityType\n            category\n            subCategory\n            mainFraction\n          }\n          kind {\n            ... on ExchangeMarketKind {\n              __typename\n              base {\n                __typename\n                id\n                name\n                kind\n                markUsd\n              }\n              quote {\n                __typename\n                id\n                name\n                kind\n                markUsd\n              }\n            }\n            ... on PoolMarketKind {\n              __typename\n              products {\n                __typename\n                id\n                name\n                kind\n                markUsd\n              }\n            }\n          }\n          name\n          tickSize\n          stepSize\n          minOrderQuantity\n          minOrderQuantityUnit\n          route {\n            id\n            name\n          }\n          isFavorite\n          ${e.join(" ")}\n        }\n      }`),{filter:n}).then((e=>e.filterMarkets))}async historicalCandles(e,n,t,r,i){return this.execute(ee(`query HistoricalCandles($width: CandleWidth!, $start: DateTime!, $id: MarketId!, $end: DateTime!) {\n        historicalCandles(width: $width, start: $start, id: $id, end: $end) { __typename ${e.join(" ")} }\n      }`),{width:n,start:t,id:r,end:i}).then((e=>e.historicalCandles))}async listApiKeys(e){return this.execute(ee(`query ListApiKeys {\n        listApiKeys { __typename ${e.join(" ")} }\n      }`)).then((e=>e.listApiKeys))}async market(e,n){return this.execute(ee(`query Market($id: MarketId!) {\n        market(id: $id) {\n          __typename\n          __typename\n          venue {\n            id\n            name\n          }\n          exchangeSymbol\n          id\n          cmeProductGroupInfo {\n            productName\n            securityType\n            category\n            subCategory\n            mainFraction\n          }\n          kind {\n            ... on ExchangeMarketKind {\n              __typename\n              base {\n                __typename\n                id\n                name\n                kind\n                markUsd\n              }\n              quote {\n                __typename\n                id\n                name\n                kind\n                markUsd\n              }\n            }\n            ... on PoolMarketKind {\n              __typename\n              products {\n                __typename\n                id\n                name\n                kind\n                markUsd\n              }\n            }\n          }\n          name\n          tickSize\n          stepSize\n          minOrderQuantity\n          minOrderQuantityUnit\n          route {\n            id\n            name\n          }\n          isFavorite\n          ${e.join(" ")}\n        }\n      }`),{id:n}).then((e=>e.market))}async marketSnapshot(e,n,t){return this.execute(ee(`query MarketSnapshot($market: MarketId!, $latestAtOrBefore: DateTime) {\n        marketSnapshot(market: $market, latestAtOrBefore: $latestAtOrBefore) {\n          __typename\n          __typename\n          marketId\n          market {\n            name\n          }\n          high24h\n          lastPrice\n          low24h\n          volume24h\n          open24h\n          bidPrice\n          askPrice\n          ${e.join(" ")}\n        }\n      }`),{market:n,latestAtOrBefore:t}).then((e=>e.marketSnapshot))}async markets(e,n){return this.execute(ee(`query Markets($id: [MarketId!]!) {\n        markets(id: $id) {\n          __typename\n          __typename\n          venue {\n            id\n            name\n          }\n          exchangeSymbol\n          id\n          cmeProductGroupInfo {\n            productName\n            securityType\n            category\n            subCategory\n            mainFraction\n          }\n          kind {\n            ... on ExchangeMarketKind {\n              __typename\n              base {\n                __typename\n                id\n                name\n                kind\n                markUsd\n              }\n              quote {\n                __typename\n                id\n                name\n                kind\n                markUsd\n              }\n            }\n            ... on PoolMarketKind {\n              __typename\n              products {\n                __typename\n                id\n                name\n                kind\n                markUsd\n              }\n            }\n          }\n          name\n          tickSize\n          stepSize\n          minOrderQuantity\n          minOrderQuantityUnit\n          route {\n            id\n            name\n          }\n          isFavorite\n          ${e.join(" ")}\n        }\n      }`),{id:n}).then((e=>e.markets))}async marketsSnapshots(e,n){return this.execute(ee(`query MarketsSnapshots($latestAtOrBefore: DateTime) {\n        marketsSnapshots(latestAtOrBefore: $latestAtOrBefore) {\n          __typename\n          __typename\n          marketId\n          market {\n            name\n          }\n          high24h\n          lastPrice\n          low24h\n          volume24h\n          open24h\n          bidPrice\n          askPrice\n          ${e.join(" ")}\n        }\n      }`),{latestAtOrBefore:n}).then((e=>e.marketsSnapshots))}async me(e){return this.execute(ee(`query Me {\n        me { __typename ${e.join(" ")} }\n      }`)).then((e=>e.me))}async mmAlgoOrder(e,n){return this.execute(ee(`query MmAlgoOrder($orderId: OrderId!) {\n        mmAlgoOrder(orderId: $orderId) {\n          __typename\n          name\n          orderId\n          marketId\n          quantityBuy\n          quantitySell\n          minPosition\n          maxPosition\n          maxImproveBbo\n          positionTilt\n          referencePrice\n          refDistFrac\n          toleranceFrac\n          account\n          ${e.join(" ")}\n        }\n      }`),{orderId:n}).then((e=>e.mmAlgoOrder))}async mmAlgoStatus(e,n){return this.execute(ee(`query MmAlgoStatus($orderId: OrderId) {\n        mmAlgoStatus(orderId: $orderId) {\n          __typename\n          orderId\n          order {\n            name\n            orderId\n            marketId\n            quantityBuy\n            quantitySell\n            minPosition\n            maxPosition\n            maxImproveBbo\n            positionTilt\n            referencePrice\n            refDistFrac\n            toleranceFrac\n            account\n          }\n          creationTime\n          status\n          position\n          hedgePosition\n          missRatio\n          effectiveSpread\n          buyStatus {\n            lastOrderTime\n            lastFillTime\n            lastRejectTime\n            openOrder {\n              orderId\n              price\n              quantity\n              cancelPending\n            }\n            referencePrice\n          }\n          sellStatus {\n            lastOrderTime\n            lastFillTime\n            lastRejectTime\n            openOrder {\n              orderId\n              price\n              quantity\n              cancelPending\n            }\n            referencePrice\n          }\n          kind\n          ${e.join(" ")}\n        }\n      }`),{orderId:n}).then((e=>e.mmAlgoStatus))}async openOrders(e){return this.execute(ee(`query OpenOrders {\n        openOrders {\n          __typename\n          __typename\n          timestamp\n          order {\n            id\n            market {\n              __typename\n              venue {\n                id\n                name\n              }\n              exchangeSymbol\n              id\n              cmeProductGroupInfo {\n                productName\n                securityType\n                category\n                subCategory\n                mainFraction\n              }\n              kind {\n                ... on ExchangeMarketKind {\n                  __typename\n                  base {\n                    __typename\n                    id\n                    name\n                    kind\n                    markUsd\n                  }\n                  quote {\n                    __typename\n                    id\n                    name\n                    kind\n                    markUsd\n                  }\n                }\n                ... on PoolMarketKind {\n                  __typename\n                  products {\n                    __typename\n                    id\n                    name\n                    kind\n                    markUsd\n                  }\n                }\n              }\n              name\n              tickSize\n              stepSize\n              minOrderQuantity\n              minOrderQuantityUnit\n              route {\n                id\n                name\n              }\n              isFavorite\n            }\n            dir\n            quantity\n            orderType {\n              __typename\n              ... on LimitOrderType {\n                limitPrice\n              }\n              ... on StopLossLimitOrderType {\n                limitPrice\n                triggerPrice\n              }\n              ... on TakeProfitLimitOrderType {\n                limitPrice\n                triggerPrice\n              }\n            }\n            timeInForce {\n              instruction\n              goodTilDate\n            }\n          }\n          orderState\n          filledQty\n          avgFillPrice\n          rejectReason\n          ${e.join(" ")}\n        }\n      }`)).then((e=>e.openOrders))}async optionsMarketSnapshots(e,n,t){return this.execute(ee(`query OptionsMarketSnapshots($underlying: ProductId!, $latestAtOrBefore: DateTime) {\n        optionsMarketSnapshots(underlying: $underlying, latestAtOrBefore: $latestAtOrBefore) { __typename ${e.join(" ")} }\n      }`),{underlying:n,latestAtOrBefore:t}).then((e=>e.optionsMarketSnapshots))}async order(e,n){return this.execute(ee(`query Order($orderId: OrderId!) {\n        order(orderId: $orderId) {\n          __typename\n          __typename\n          timestamp\n          order {\n            id\n            market {\n              __typename\n              venue {\n                id\n                name\n              }\n              exchangeSymbol\n              id\n              cmeProductGroupInfo {\n                productName\n                securityType\n                category\n                subCategory\n                mainFraction\n              }\n              kind {\n                ... on ExchangeMarketKind {\n                  __typename\n                  base {\n                    __typename\n                    id\n                    name\n                    kind\n                    markUsd\n                  }\n                  quote {\n                    __typename\n                    id\n                    name\n                    kind\n                    markUsd\n                  }\n                }\n                ... on PoolMarketKind {\n                  __typename\n                  products {\n                    __typename\n                    id\n                    name\n                    kind\n                    markUsd\n                  }\n                }\n              }\n              name\n              tickSize\n              stepSize\n              minOrderQuantity\n              minOrderQuantityUnit\n              route {\n                id\n                name\n              }\n              isFavorite\n            }\n            dir\n            quantity\n            orderType {\n              __typename\n              ... on LimitOrderType {\n                limitPrice\n              }\n              ... on StopLossLimitOrderType {\n                limitPrice\n                triggerPrice\n              }\n              ... on TakeProfitLimitOrderType {\n                limitPrice\n                triggerPrice\n              }\n            }\n            timeInForce {\n              instruction\n              goodTilDate\n            }\n          }\n          orderState\n          filledQty\n          avgFillPrice\n          rejectReason\n          ${e.join(" ")}\n        }\n      }`),{orderId:n}).then((e=>e.order))}async outedOrders(e,n,t){return this.execute(ee(`query OutedOrders($fromInclusive: DateTime, $toExclusive: DateTime) {\n        outedOrders(fromInclusive: $fromInclusive, toExclusive: $toExclusive) {\n          __typename\n          __typename\n          timestamp\n          order {\n            id\n            market {\n              __typename\n              venue {\n                id\n                name\n              }\n              exchangeSymbol\n              id\n              cmeProductGroupInfo {\n                productName\n                securityType\n                category\n                subCategory\n                mainFraction\n              }\n              kind {\n                ... on ExchangeMarketKind {\n                  __typename\n                  base {\n                    __typename\n                    id\n                    name\n                    kind\n                    markUsd\n                  }\n                  quote {\n                    __typename\n                    id\n                    name\n                    kind\n                    markUsd\n                  }\n                }\n                ... on PoolMarketKind {\n                  __typename\n                  products {\n                    __typename\n                    id\n                    name\n                    kind\n                    markUsd\n                  }\n                }\n              }\n              name\n              tickSize\n              stepSize\n              minOrderQuantity\n              minOrderQuantityUnit\n              route {\n                id\n                name\n              }\n              isFavorite\n            }\n            dir\n            quantity\n            orderType {\n              __typename\n              ... on LimitOrderType {\n                limitPrice\n              }\n              ... on StopLossLimitOrderType {\n                limitPrice\n                triggerPrice\n              }\n              ... on TakeProfitLimitOrderType {\n                limitPrice\n                triggerPrice\n              }\n            }\n            timeInForce {\n              instruction\n              goodTilDate\n            }\n          }\n          orderState\n          filledQty\n          avgFillPrice\n          rejectReason\n          ${e.join(" ")}\n        }\n      }`),{fromInclusive:n,toExclusive:t}).then((e=>e.outedOrders))}async povOrder(e,n){return this.execute(ee(`query PovOrder($orderId: OrderId!) {\n        povOrder(orderId: $orderId) {\n          __typename\n          name\n          orderId\n          marketId\n          dir\n          targetVolumeFrac\n          minOrderQuantity\n          maxQuantity\n          endTime\n          accountId\n          takeThroughFrac\n          ${e.join(" ")}\n        }\n      }`),{orderId:n}).then((e=>e.povOrder))}async povStatus(e,n){return this.execute(ee(`query PovStatus($orderId: OrderId) {\n        povStatus(orderId: $orderId) {\n          __typename\n          orderId\n          order {\n            name\n            orderId\n            marketId\n            dir\n            targetVolumeFrac\n            minOrderQuantity\n            maxQuantity\n            endTime\n            accountId\n            takeThroughFrac\n          }\n          creationTime\n          status\n          fractionComplete\n          realizedVolumeFrac\n          marketVolume\n          quantityFilled\n          ${e.join(" ")}\n        }\n      }`),{orderId:n}).then((e=>e.povStatus))}async product(e,n){return this.execute(ee(`query Product($id: ProductId!) {\n        product(id: $id) { __typename ${e.join(" ")} }\n      }`),{id:n}).then((e=>e.product))}async products(e,n){return this.execute(ee(`query Products($id: [ProductId!]!) {\n        products(id: $id) { __typename ${e.join(" ")} }\n      }`),{id:n}).then((e=>e.products))}async route(e,n){return this.execute(ee(`query Route($id: RouteId!) {\n        route(id: $id) { __typename ${e.join(" ")} }\n      }`),{id:n}).then((e=>e.route))}async routes(e){return this.execute(ee(`query Routes {\n        routes { __typename ${e.join(" ")} }\n      }`)).then((e=>e.routes))}async smartOrderRouterOrder(e,n){return this.execute(ee(`query SmartOrderRouterOrder($orderId: OrderId!) {\n        smartOrderRouterOrder(orderId: $orderId) {\n          __typename\n          orderId\n          markets {\n            id\n          }\n          dir\n          limitPrice\n          targetSize\n          executionTimeLimitMs\n          parentOrderId\n          ${e.join(" ")}\n        }\n      }`),{orderId:n}).then((e=>e.smartOrderRouterOrder))}async smartOrderRouterStatus(e,n){return this.execute(ee(`query SmartOrderRouterStatus($orderId: OrderId) {\n        smartOrderRouterStatus(orderId: $orderId) {\n          __typename\n          status {\n            orderId\n            order {\n              orderId\n              trader\n              account\n              algo\n              parentOrderId\n              markets\n            }\n            creationTime\n            status\n            lastStatusChange\n            fractionComplete\n          }\n          order {\n            orderId\n            markets {\n              id\n            }\n            dir\n            limitPrice\n            targetSize\n            executionTimeLimitMs\n            parentOrderId\n          }\n          ${e.join(" ")}\n        }\n      }`),{orderId:n}).then((e=>e.smartOrderRouterStatus))}async spreadAlgoOrder(e,n){return this.execute(ee(`query SpreadAlgoOrder($orderId: OrderId!) {\n        spreadAlgoOrder(orderId: $orderId) {\n          __typename\n          name\n          orderId\n          marketId\n          quantityBuy\n          quantitySell\n          minPosition\n          maxPosition\n          maxImproveBbo\n          positionTilt\n          referencePrice\n          refDistFrac\n          toleranceFrac\n          account\n          ${e.join(" ")}\n        }\n      }`),{orderId:n}).then((e=>e.spreadAlgoOrder))}async spreadAlgoStatus(e,n){return this.execute(ee(`query SpreadAlgoStatus($orderId: OrderId) {\n        spreadAlgoStatus(orderId: $orderId) {\n          __typename\n          orderId\n          order {\n            name\n            orderId\n            marketId\n            quantityBuy\n            quantitySell\n            minPosition\n            maxPosition\n            maxImproveBbo\n            positionTilt\n            referencePrice\n            refDistFrac\n            toleranceFrac\n            account\n          }\n          creationTime\n          status\n          position\n          hedgePosition\n          missRatio\n          effectiveSpread\n          buyStatus {\n            lastOrderTime\n            lastFillTime\n            lastRejectTime\n            openOrder {\n              orderId\n              price\n              quantity\n              cancelPending\n            }\n            referencePrice\n          }\n          sellStatus {\n            lastOrderTime\n            lastFillTime\n            lastRejectTime\n            openOrder {\n              orderId\n              price\n              quantity\n              cancelPending\n            }\n            referencePrice\n          }\n          kind\n          ${e.join(" ")}\n        }\n      }`),{orderId:n}).then((e=>e.spreadAlgoStatus))}async tcaBalancePnl(e,n,t,r){return this.execute(ee(`query TcaBalancePnl($accountId: AccountId!, $usePurchasingPower: Boolean, $venueId: VenueId) {\n        tcaBalancePnl(accountId: $accountId, usePurchasingPower: $usePurchasingPower, venueId: $venueId) { __typename ${e.join(" ")} }\n      }`),{accountId:n,usePurchasingPower:t,venueId:r}).then((e=>e.tcaBalancePnl))}async tcaBalancePnlTimeseries(e,n,t,r,i,a){return this.execute(ee(`query TcaBalancePnlTimeseries($venueId: VenueId!, $accountId: AccountId!, $fromInclusive: DateTime, $toExclusive: DateTime, $usePurchasingPower: Boolean) {\n        tcaBalancePnlTimeseries(venueId: $venueId, accountId: $accountId, fromInclusive: $fromInclusive, toExclusive: $toExclusive, usePurchasingPower: $usePurchasingPower) { __typename ${e.join(" ")} }\n      }`),{venueId:n,accountId:t,fromInclusive:r,toExclusive:i,usePurchasingPower:a}).then((e=>e.tcaBalancePnlTimeseries))}async tcaMarks(e,n,t,r){return this.execute(ee(`query TcaMarks($toExclusive: DateTime!, $fromInclusive: DateTime!, $id: MarketId) {\n        tcaMarks(toExclusive: $toExclusive, fromInclusive: $fromInclusive, id: $id) { __typename ${e.join(" ")} }\n      }`),{toExclusive:n,fromInclusive:t,id:r}).then((e=>e.tcaMarks))}async tcaSummary(e,n,t,r,i){return this.execute(ee(`query TcaSummary($toExclusive: DateTime!, $fromInclusive: DateTime!, $currency: String, $id: MarketId) {\n        tcaSummary(toExclusive: $toExclusive, fromInclusive: $fromInclusive, currency: $currency, id: $id) { __typename ${e.join(" ")} }\n      }`),{toExclusive:n,fromInclusive:t,currency:r,id:i}).then((e=>e.tcaSummary))}async twapOrder(e,n){return this.execute(ee(`query TwapOrder($orderId: OrderId!) {\n        twapOrder(orderId: $orderId) {\n          __typename\n          name\n          orderId\n          marketId\n          dir\n          quantity\n          endTime\n          accountId\n          intervalMs\n          rejectLockoutMs\n          takeThroughFrac\n          ${e.join(" ")}\n        }\n      }`),{orderId:n}).then((e=>e.twapOrder))}async twapStatus(e,n){return this.execute(ee(`query TwapStatus($orderId: OrderId) {\n        twapStatus(orderId: $orderId) {\n          __typename\n          orderId\n          order {\n            name\n            orderId\n            marketId\n            dir\n            quantity\n            endTime\n            accountId\n            intervalMs\n            rejectLockoutMs\n            takeThroughFrac\n          }\n          creationTime\n          status\n          fractionComplete\n          realizedTwap\n          quantityFilled\n          ${e.join(" ")}\n        }\n      }`),{orderId:n}).then((e=>e.twapStatus))}async venue(e,n){return this.execute(ee(`query Venue($id: VenueId!) {\n        venue(id: $id) { __typename ${e.join(" ")} }\n      }`),{id:n}).then((e=>e.venue))}async venues(e){return this.execute(ee(`query Venues {\n        venues { __typename ${e.join(" ")} }\n      }`)).then((e=>e.venues))}async version(){return this.execute(ee("query Version {\n        version\n      }")).then((e=>e.version))}async cancelAllOrders(e){return this.execute(ee("mutation CancelAllOrders($venueId: VenueId) {\n        cancelAllOrders(venueId: $venueId)\n      }"),{venueId:e}).then((e=>e.cancelAllOrders))}async cancelOrder(e){return this.execute(ee("mutation CancelOrder($orderId: OrderId!) {\n        cancelOrder(orderId: $orderId)\n      }"),{orderId:e}).then((e=>e.cancelOrder))}async cancelOrders(e){return this.execute(ee("mutation CancelOrders($orderIds: [OrderId!]!) {\n        cancelOrders(orderIds: $orderIds)\n      }"),{orderIds:e}).then((e=>e.cancelOrders))}async createApiKey(e){return this.execute(ee(`mutation CreateApiKey {\n        createApiKey { __typename ${e.join(" ")} }\n      }`)).then((e=>e.createApiKey))}async createMmAlgo(e){return this.execute(ee("mutation CreateMmAlgo($mmAlgo: CreateMMAlgo!) {\n        createMmAlgo(mmAlgo: $mmAlgo)\n      }"),{mmAlgo:e}).then((e=>e.createMmAlgo))}async createOrder(e){return this.execute(ee("mutation CreateOrder($order: CreateOrder!) {\n        createOrder(order: $order)\n      }"),{order:e}).then((e=>e.createOrder))}async createOrders(e){return this.execute(ee("mutation CreateOrders($orders: [CreateOrder!]!) {\n        createOrders(orders: $orders)\n      }"),{orders:e}).then((e=>e.createOrders))}async createPovAlgo(e){return this.execute(ee("mutation CreatePovAlgo($povAlgo: CreatePovAlgo!) {\n        createPovAlgo(povAlgo: $povAlgo)\n      }"),{povAlgo:e}).then((e=>e.createPovAlgo))}async createSmartOrderRouterAlgo(e){return this.execute(ee("mutation CreateSmartOrderRouterAlgo($algo: CreateSmartOrderRouterAlgo!) {\n        createSmartOrderRouterAlgo(algo: $algo)\n      }"),{algo:e}).then((e=>e.createSmartOrderRouterAlgo))}async createSpreadAlgo(e){return this.execute(ee("mutation CreateSpreadAlgo($spreadAlgo: CreateSpreadAlgo!) {\n        createSpreadAlgo(spreadAlgo: $spreadAlgo)\n      }"),{spreadAlgo:e}).then((e=>e.createSpreadAlgo))}async createTelegramApiKey(e,n){return this.execute(ee(`mutation CreateTelegramApiKey($telegramId: String!) {\n        createTelegramApiKey(telegramId: $telegramId) { __typename ${e.join(" ")} }\n      }`),{telegramId:n}).then((e=>e.createTelegramApiKey))}async createTwapAlgo(e){return this.execute(ee("mutation CreateTwapAlgo($twapAlgo: CreateTwapAlgo!) {\n        createTwapAlgo(twapAlgo: $twapAlgo)\n      }"),{twapAlgo:e}).then((e=>e.createTwapAlgo))}async previewSmartOrderRouterAlgo(e,n){return this.execute(ee(`mutation PreviewSmartOrderRouterAlgo($algo: CreateSmartOrderRouterAlgo!) {\n        previewSmartOrderRouterAlgo(algo: $algo) { __typename ${e.join(" ")} }\n      }`),{algo:n}).then((e=>e.previewSmartOrderRouterAlgo))}async removeApiKey(e){return this.execute(ee("mutation RemoveApiKey($apiKey: String!) {\n        removeApiKey(apiKey: $apiKey)\n      }"),{apiKey:e}).then((e=>e.removeApiKey))}async removeTelegramApiKeys(){return this.execute(ee("mutation RemoveTelegramApiKeys {\n        removeTelegramApiKeys\n      }")).then((e=>e.removeTelegramApiKeys))}async sendAlgoControlCommand(e,n){return this.execute(ee("mutation SendAlgoControlCommand($orderId: OrderId!, $command: AlgoControlCommand!) {\n        sendAlgoControlCommand(orderId: $orderId, command: $command)\n      }"),{orderId:e,command:n}).then((e=>e.sendAlgoControlCommand))}async setCredentials(e,n){return this.execute(ee("mutation SetCredentials($credentials: String!, $componentId: ComponentId!) {\n        setCredentials(credentials: $credentials, componentId: $componentId)\n      }"),{credentials:e,componentId:n}).then((e=>e.setCredentials))}async updateMarket(e,n){return this.execute(ee(`mutation UpdateMarket($payload: UpdateMarket!) {\n        updateMarket(payload: $payload) { __typename ${e.join(" ")} }\n      }`),{payload:n}).then((e=>e.updateMarket))}}var te,re,ie,ae,oe,de,se,ue,ce,le,me,pe,ye,fe,Ie,he;!function(e){e.Pause="PAUSE",e.Start="START",e.Stop="STOP"}(te||(te={})),function(e){e.Chaser="CHASER",e.MarketMaker="MARKET_MAKER",e.Pov="POV",e.SmartOrderRouter="SMART_ORDER_ROUTER",e.Spread="SPREAD",e.Twap="TWAP"}(re||(re={})),function(e){e.Done="DONE",e.Paused="PAUSED",e.Running="RUNNING"}(ie||(ie={})),function(e){e.FifteenMinute="FIFTEEN_MINUTE",e.FiveSecond="FIVE_SECOND",e.OneDay="ONE_DAY",e.OneHour="ONE_HOUR",e.OneMinute="ONE_MINUTE",e.OneSecond="ONE_SECOND"}(ae||(ae={})),function(e){e.Cash="CASH",e.Combo="COMBO",e.Fra="FRA",e.Fut="FUT",e.Fwd="FWD",e.Idx="IDX",e.Index="INDEX",e.Irs="IRS",e.Ooc="OOC",e.Oof="OOF"}(oe||(oe={})),function(e){e.Limit="LIMIT",e.StopLossLimit="STOP_LOSS_LIMIT",e.TakeProfitLimit="TAKE_PROFIT_LIMIT"}(de||(de={})),function(e){e.Gtc="GTC",e.Gtd="GTD",e.Ioc="IOC"}(se||(se={})),function(e){e.Brokerage="BROKERAGE",e.Platform="PLATFORM"}(ue||(ue={})),function(e){e.Correction="CORRECTION",e.Normal="NORMAL",e.Reversal="REVERSAL"}(ce||(ce={})),function(e){e.Basic="BASIC",e.Professional="PROFESSIONAL"}(le||(le={})),function(e){e.MM="MM",e.Spread="SPREAD"}(me||(me={})),function(e){e.Base="BASE",e.Quote="QUOTE"}(pe||(pe={})),function(e){e.Algo="ALGO",e.Api="API",e.Cli="CLI",e.External="EXTERNAL",e.Gui="GUI",e.Other="OTHER",e.Telegram="TELEGRAM"}(ye||(ye={})),function(e){e.Acked="ACKED",e.Canceled="CANCELED",e.Canceling="CANCELING",e.Filled="FILLED",e.Open="OPEN",e.Out="OUT",e.Rejected="REJECTED",e.Stale="STALE"}(fe||(fe={})),function(e){e.AlgoPaused="ALGO_PAUSED",e.AlgoStopped="ALGO_STOPPED",e.CancelPending="CANCEL_PENDING",e.MaxPosition="MAX_POSITION",e.MinPosition="MIN_POSITION",e.NoAsk="NO_ASK",e.NoBid="NO_BID",e.NoReferencePrice="NO_REFERENCE_PRICE",e.NoReferenceSize="NO_REFERENCE_SIZE",e.OpenOrderOutsideTolerance="OPEN_ORDER_OUTSIDE_TOLERANCE",e.OpenOrderWithinTolerance="OPEN_ORDER_WITHIN_TOLERANCE",e.WithinFillLockout="WITHIN_FILL_LOCKOUT",e.WithinOrderLockout="WITHIN_ORDER_LOCKOUT",e.WithinRejectLockout="WITHIN_REJECT_LOCKOUT"}(Ie||(Ie={})),function(e){e.BidAsk="BID_ASK",e.HedgeMarketBidAsk="HEDGE_MARKET_BID_ASK",e.Mid="MID"}(he||(he={}));let ve={host:"https://app.architect.co",apiKey:"",apiSecret:"",tradingMode:"live"},ge=new Proxy({},{get(e,n){throw new Error("Client is not initialized")},set(e,n,t){throw new Error("Client is not initialized")}});function Oe(){const e=localStorage.getItem("ArchitectApiKey"),n=localStorage.getItem("ArchitectApiSecret");if(!e||!n)throw new Error("API Key and Secret must be provided.");ve.apiKey=e,ve.apiSecret=n,ge=function(e){return new ne(e,t)}(ve)}async function _e(e){try{const n=await ge.marketSnapshot([],e);if(!n||!n.bidPrice||!n.askPrice)return console.error("Invalid or missing snapshot data"),NaN;const t=parseFloat(n.bidPrice),r=parseFloat(n.askPrice);return isNaN(t)||isNaN(r)?NaN:(t+r)/2}catch(e){return void console.error("Error fetching market snapshot:",e)}}function Te(){return"Hello World!"}function Se(){const e=localStorage.getItem("ArchitectApiKey"),n=localStorage.getItem("ArchitectApiSecret");return!(!e||!n)}async function ke(){return(await ge.filterMarkets([],{venue:"CME",base:"MES",quote:"",underlying:"",maxResults:1,resultsOffset:0,searchString:"",onlyFavorites:!1,sortByVolumeDesc:!0}))[0].exchangeSymbol}return n})()));