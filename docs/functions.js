!function(e,n){"object"==typeof exports&&"object"==typeof module?module.exports=n():"function"==typeof define&&define.amd?define([],n):"object"==typeof exports?exports.functions=n():e.functions=n()}(this,(()=>(()=>{"use strict";var e={985:(e,n,t)=>{t.d(n,{$E:()=>i,$W:()=>r});let r={host:"https://app.architect.co/",apiKey:"",apiSecret:"",tradingMode:"live"};async function i(e){if("undefined"!=typeof Office&&Office.context&&"undefined"!=typeof OfficeRuntime)return await OfficeRuntime.storage.getItem(e);if("undefined"!=typeof localStorage)return localStorage.getItem(e);throw new Error("No available storage method to get from.")}}},n={};function t(r){var i=n[r];if(void 0!==i)return i.exports;var a=n[r]={exports:{}};return e[r](a,a.exports,t),a.exports}t.d=(e,n)=>{for(var r in n)t.o(n,r)&&!t.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:n[r]})},t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),t.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var r={};function i(e){const{credentials:n="same-origin",referrer:t,referrerPolicy:r,shouldRetry:i=()=>!1}=e,o=e.fetchFn||fetch,s=e.abortControllerImpl||AbortController,d=(()=>{let e=!1;const n=[];return{get disposed(){return e},onDispose:t=>e?(setTimeout((()=>t()),0),()=>{}):(n.push(t),()=>{n.splice(n.indexOf(t),1)}),dispose(){if(!e){e=!0;for(const e of[...n])e()}}}})();return{subscribe(c,u){if(d.disposed)throw new Error("Client has been disposed");const l=new s,m=d.onDispose((()=>{m(),l.abort()}));return(async()=>{var s;let d=null,m=0;for(;;){if(d){const e=await i(d,m);if(l.signal.aborted)return;if(!e)throw d;m++}try{const i="function"==typeof e.url?await e.url(c):e.url;if(l.signal.aborted)return;const d="function"==typeof e.headers?await e.headers():null!==(s=e.headers)&&void 0!==s?s:{};if(l.signal.aborted)return;let m;try{m=await o(i,{signal:l.signal,method:"POST",headers:Object.assign(Object.assign({},d),{"content-type":"application/json; charset=utf-8",accept:"application/graphql-response+json, application/json"}),credentials:n,referrer:t,referrerPolicy:r,body:JSON.stringify(c)})}catch(e){throw new a(e)}if(!m.ok)throw new a(m);if(!m.body)throw new Error("Missing response body");const p=m.headers.get("content-type");if(!p)throw new Error("Missing response content-type");if(!p.includes("application/graphql-response+json")&&!p.includes("application/json"))throw new Error(`Unsupported response content-type ${p}`);const y=await m.json();return u.next(y),l.abort()}catch(e){if(l.signal.aborted)return;if(!(e instanceof a))throw e;d=e}}})().then((()=>u.complete())).catch((e=>u.error(e))),()=>l.abort()},dispose(){d.dispose()}}}t.r(r),t.d(r,{getMarketBBO:()=>oe,getMarketLast:()=>ae,getMarketMid:()=>se,initializeClient:()=>ie,testClient:()=>de});class a extends Error{constructor(e){let n,t;var r;!function(e){return"object"==typeof e&&null!==e}(r=e)||"boolean"!=typeof r.ok||"number"!=typeof r.status||"string"!=typeof r.statusText?n=e instanceof Error?e.message:String(e):(t=e,n="Server responded with "+e.status+": "+e.statusText),super(n),this.name=this.constructor.name,this.response=t}}var o,s,d="Document",c="FragmentDefinition";class u extends Error{constructor(e,n,t,r,i,a,o){super(e),this.name="GraphQLError",this.message=e,i&&(this.path=i),n&&(this.nodes=Array.isArray(n)?n:[n]),t&&(this.source=t),r&&(this.positions=r),a&&(this.originalError=a);var s=o;if(!s&&a){var d=a.extensions;d&&"object"==typeof d&&(s=d)}this.extensions=s||{}}toJSON(){return{...this,message:this.message}}toString(){return this.message}get[Symbol.toStringTag](){return"GraphQLError"}}function l(e){return new u(`Syntax Error: Unexpected token at ${s} in ${e}`)}function m(e){if(e.lastIndex=s,e.test(o))return o.slice(s,s=e.lastIndex)}var p=/ +(?=[^\s])/y;function y(e){for(var n=e.split("\n"),t="",r=0,i=0,a=n.length-1,o=0;o<n.length;o++)p.lastIndex=0,p.test(n[o])&&(o&&(!r||p.lastIndex<r)&&(r=p.lastIndex),i=i||o,a=o);for(var s=i;s<=a;s++)s!==i&&(t+="\n"),t+=n[s].slice(r).replace(/\\"""/g,'"""');return t}function h(){for(var e=0|o.charCodeAt(s++);9===e||10===e||13===e||32===e||35===e||44===e||65279===e;e=0|o.charCodeAt(s++))if(35===e)for(;10!==(e=o.charCodeAt(s++))&&13!==e;);s--}function f(){for(var e=s,n=0|o.charCodeAt(s++);n>=48&&n<=57||n>=65&&n<=90||95===n||n>=97&&n<=122;n=0|o.charCodeAt(s++));if(e===s-1)throw l("Name");var t=o.slice(e,--s);return h(),t}function v(){return{kind:"Name",value:f()}}var I=/(?:"""|(?:[\s\S]*?[^\\])""")/y,g=/(?:(?:\.\d+)?[eE][+-]?\d+|\.\d+)/y;function _(e){var n;switch(o.charCodeAt(s)){case 91:s++,h();for(var t=[];93!==o.charCodeAt(s);)t.push(_(e));return s++,h(),{kind:"ListValue",values:t};case 123:s++,h();for(var r=[];125!==o.charCodeAt(s);){var i=v();if(58!==o.charCodeAt(s++))throw l("ObjectField");h(),r.push({kind:"ObjectField",name:i,value:_(e)})}return s++,h(),{kind:"ObjectValue",fields:r};case 36:if(e)throw l("Variable");return s++,{kind:"Variable",name:v()};case 34:if(34===o.charCodeAt(s+1)&&34===o.charCodeAt(s+2)){if(s+=3,null==(n=m(I)))throw l("StringValue");return h(),{kind:"StringValue",value:y(n.slice(0,-3)),block:!0}}var a,d=s;s++;var c=!1;for(a=0|o.charCodeAt(s++);92===a&&(s++,c=!0)||10!==a&&13!==a&&34!==a&&a;a=0|o.charCodeAt(s++));if(34!==a)throw l("StringValue");return n=o.slice(d,s),h(),{kind:"StringValue",value:c?JSON.parse(n):n.slice(1,-1),block:!1};case 45:case 48:case 49:case 50:case 51:case 52:case 53:case 54:case 55:case 56:case 57:for(var u,p=s++;(u=0|o.charCodeAt(s++))>=48&&u<=57;);var k=o.slice(p,--s);if(46===(u=o.charCodeAt(s))||69===u||101===u){if(null==(n=m(g)))throw l("FloatValue");return h(),{kind:"FloatValue",value:k+n}}return h(),{kind:"IntValue",value:k};case 110:if(117===o.charCodeAt(s+1)&&108===o.charCodeAt(s+2)&&108===o.charCodeAt(s+3))return s+=4,h(),{kind:"NullValue"};break;case 116:if(114===o.charCodeAt(s+1)&&117===o.charCodeAt(s+2)&&101===o.charCodeAt(s+3))return s+=4,h(),{kind:"BooleanValue",value:!0};break;case 102:if(97===o.charCodeAt(s+1)&&108===o.charCodeAt(s+2)&&115===o.charCodeAt(s+3)&&101===o.charCodeAt(s+4))return s+=5,h(),{kind:"BooleanValue",value:!1}}return{kind:"EnumValue",value:f()}}function k(e){if(40===o.charCodeAt(s)){var n=[];s++,h();do{var t=v();if(58!==o.charCodeAt(s++))throw l("Argument");h(),n.push({kind:"Argument",name:t,value:_(e)})}while(41!==o.charCodeAt(s));return s++,h(),n}}function O(e){if(64===o.charCodeAt(s)){var n=[];do{s++,n.push({kind:"Directive",name:v(),arguments:k(e)})}while(64===o.charCodeAt(s));return n}}function S(){for(var e=0;91===o.charCodeAt(s);)e++,s++,h();var n={kind:"NamedType",name:v()};do{if(33===o.charCodeAt(s)&&(s++,h(),n={kind:"NonNullType",type:n}),e){if(93!==o.charCodeAt(s++))throw l("NamedType");h(),n={kind:"ListType",type:n}}}while(e--);return n}function T(){if(123!==o.charCodeAt(s++))throw l("SelectionSet");return h(),A()}function A(){var e=[];do{if(46===o.charCodeAt(s)){if(46!==o.charCodeAt(++s)||46!==o.charCodeAt(++s))throw l("SelectionSet");switch(s++,h(),o.charCodeAt(s)){case 64:e.push({kind:"InlineFragment",typeCondition:void 0,directives:O(!1),selectionSet:T()});break;case 111:110===o.charCodeAt(s+1)?(s+=2,h(),e.push({kind:"InlineFragment",typeCondition:{kind:"NamedType",name:v()},directives:O(!1),selectionSet:T()})):e.push({kind:"FragmentSpread",name:v(),directives:O(!1)});break;case 123:s++,h(),e.push({kind:"InlineFragment",typeCondition:void 0,directives:void 0,selectionSet:A()});break;default:e.push({kind:"FragmentSpread",name:v(),directives:O(!1)})}}else{var n=v(),t=void 0;58===o.charCodeAt(s)&&(s++,h(),t=n,n=v());var r=k(!1),i=O(!1),a=void 0;123===o.charCodeAt(s)&&(s++,h(),a=A()),e.push({kind:"Field",alias:t,name:n,arguments:r,directives:i,selectionSet:a})}}while(125!==o.charCodeAt(s));return s++,h(),{kind:"SelectionSet",selections:e}}function $(){if(h(),40===o.charCodeAt(s)){var e=[];s++,h();do{if(36!==o.charCodeAt(s++))throw l("Variable");var n=v();if(58!==o.charCodeAt(s++))throw l("VariableDefinition");h();var t=S(),r=void 0;61===o.charCodeAt(s)&&(s++,h(),r=_(!0)),h(),e.push({kind:"VariableDefinition",variable:{kind:"Variable",name:n},type:t,defaultValue:r,directives:O(!0)})}while(41!==o.charCodeAt(s));return s++,h(),e}}function E(){var e=v();if(111!==o.charCodeAt(s++)||110!==o.charCodeAt(s++))throw l("FragmentDefinition");return h(),{kind:"FragmentDefinition",name:e,typeCondition:{kind:"NamedType",name:v()},directives:O(!1),selectionSet:T()}}function C(){var e=[];do{if(123===o.charCodeAt(s))s++,h(),e.push({kind:"OperationDefinition",operation:"query",name:void 0,variableDefinitions:void 0,directives:void 0,selectionSet:A()});else{var n=f();switch(n){case"fragment":e.push(E());break;case"query":case"mutation":case"subscription":var t,r=void 0;40!==(t=o.charCodeAt(s))&&64!==t&&123!==t&&(r=v()),e.push({kind:"OperationDefinition",operation:n,name:r,variableDefinitions:$(),directives:O(!1),selectionSet:T()});break;default:throw l("Document")}}}while(s<o.length);return e}function b(e,n){return o=e.body?e.body:e,s=0,h(),n&&n.noLocation?{kind:"Document",definitions:C()}:{kind:"Document",definitions:C(),loc:{start:0,end:o.length,startToken:void 0,endToken:void 0,source:{body:o,name:"graphql.web",locationOffset:{line:1,column:1}}}}}var x=0,P=new Set;function F(){function e(e,n){var t,r,i=b(e).definitions,a=new Set;for(var o of n||[])for(var s of o.definitions)s.kind!==c||a.has(s)||(i.push(s),a.add(s));return(t=i[0].kind===c)&&i[0].directives&&(i[0].directives=i[0].directives.filter((e=>"_unmask"!==e.name.value))),{kind:d,definitions:i,get loc(){if(!r&&t){var i=e+function(e){try{x++;var n="";for(var t of e)if(!P.has(t)){P.add(t);var{loc:r}=t;r&&(n+=r.source.body)}return n}finally{0==--x&&P.clear()}}(n||[]);return{start:0,end:i.length,source:{body:i,name:"GraphQLTada",locationOffset:{line:1,column:1}}}}return r},set loc(e){r=e}}}return e.scalar=function(e,n){return n},e.persisted=function(e,n){return{kind:d,definitions:n?n.definitions:[],documentId:e}},e}function N(e){return 9===e||32===e}F();const w=/[\x00-\x1f\x22\x5c\x7f-\x9f]/g;function D(e){return j[e.charCodeAt(0)]}const j=["\\u0000","\\u0001","\\u0002","\\u0003","\\u0004","\\u0005","\\u0006","\\u0007","\\b","\\t","\\n","\\u000B","\\f","\\r","\\u000E","\\u000F","\\u0010","\\u0011","\\u0012","\\u0013","\\u0014","\\u0015","\\u0016","\\u0017","\\u0018","\\u0019","\\u001A","\\u001B","\\u001C","\\u001D","\\u001E","\\u001F","","",'\\"',"","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","\\\\","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","\\u007F","\\u0080","\\u0081","\\u0082","\\u0083","\\u0084","\\u0085","\\u0086","\\u0087","\\u0088","\\u0089","\\u008A","\\u008B","\\u008C","\\u008D","\\u008E","\\u008F","\\u0090","\\u0091","\\u0092","\\u0093","\\u0094","\\u0095","\\u0096","\\u0097","\\u0098","\\u0099","\\u009A","\\u009B","\\u009C","\\u009D","\\u009E","\\u009F"];function M(e,n){if(!Boolean(e))throw new Error(n)}function q(e){return V(e,[])}function V(e,n){switch(typeof e){case"string":return JSON.stringify(e);case"function":return e.name?`[function ${e.name}]`:"[function]";case"object":return function(e,n){if(null===e)return"null";if(n.includes(e))return"[Circular]";const t=[...n,e];if(function(e){return"function"==typeof e.toJSON}(e)){const n=e.toJSON();if(n!==e)return"string"==typeof n?n:V(n,t)}else if(Array.isArray(e))return function(e,n){if(0===e.length)return"[]";if(n.length>2)return"[Array]";const t=Math.min(10,e.length),r=e.length-t,i=[];for(let r=0;r<t;++r)i.push(V(e[r],n));return 1===r?i.push("... 1 more item"):r>1&&i.push(`... ${r} more items`),"["+i.join(", ")+"]"}(e,t);return function(e,n){const t=Object.entries(e);if(0===t.length)return"{}";if(n.length>2)return"["+function(e){const n=Object.prototype.toString.call(e).replace(/^\[object /,"").replace(/]$/,"");if("Object"===n&&"function"==typeof e.constructor){const n=e.constructor.name;if("string"==typeof n&&""!==n)return n}return n}(e)+"]";const r=t.map((([e,t])=>e+": "+V(t,n)));return"{ "+r.join(", ")+" }"}(e,t)}(e,n);default:return String(e)}}Symbol.toStringTag,Symbol.toStringTag;const U={Name:[],Document:["definitions"],OperationDefinition:["name","variableDefinitions","directives","selectionSet"],VariableDefinition:["variable","type","defaultValue","directives"],Variable:["name"],SelectionSet:["selections"],Field:["alias","name","arguments","directives","selectionSet"],Argument:["name","value"],FragmentSpread:["name","directives"],InlineFragment:["typeCondition","directives","selectionSet"],FragmentDefinition:["name","variableDefinitions","typeCondition","directives","selectionSet"],IntValue:[],FloatValue:[],StringValue:[],BooleanValue:[],NullValue:[],EnumValue:[],ListValue:["values"],ObjectValue:["fields"],ObjectField:["name","value"],Directive:["name","arguments"],NamedType:["name"],ListType:["type"],NonNullType:["type"],SchemaDefinition:["description","directives","operationTypes"],OperationTypeDefinition:["type"],ScalarTypeDefinition:["description","name","directives"],ObjectTypeDefinition:["description","name","interfaces","directives","fields"],FieldDefinition:["description","name","arguments","type","directives"],InputValueDefinition:["description","name","type","defaultValue","directives"],InterfaceTypeDefinition:["description","name","interfaces","directives","fields"],UnionTypeDefinition:["description","name","directives","types"],EnumTypeDefinition:["description","name","directives","values"],EnumValueDefinition:["description","name","directives"],InputObjectTypeDefinition:["description","name","directives","fields"],DirectiveDefinition:["description","name","arguments","locations"],SchemaExtension:["directives","operationTypes"],ScalarTypeExtension:["name","directives"],ObjectTypeExtension:["name","interfaces","directives","fields"],InterfaceTypeExtension:["name","interfaces","directives","fields"],UnionTypeExtension:["name","directives","types"],EnumTypeExtension:["name","directives","values"],InputObjectTypeExtension:["name","directives","fields"]},R=new Set(Object.keys(U));function B(e){const n=null==e?void 0:e.kind;return"string"==typeof n&&R.has(n)}var L,K,z;!function(e){e.QUERY="query",e.MUTATION="mutation",e.SUBSCRIPTION="subscription"}(L||(L={})),(z=K||(K={})).NAME="Name",z.DOCUMENT="Document",z.OPERATION_DEFINITION="OperationDefinition",z.VARIABLE_DEFINITION="VariableDefinition",z.SELECTION_SET="SelectionSet",z.FIELD="Field",z.ARGUMENT="Argument",z.FRAGMENT_SPREAD="FragmentSpread",z.INLINE_FRAGMENT="InlineFragment",z.FRAGMENT_DEFINITION="FragmentDefinition",z.VARIABLE="Variable",z.INT="IntValue",z.FLOAT="FloatValue",z.STRING="StringValue",z.BOOLEAN="BooleanValue",z.NULL="NullValue",z.ENUM="EnumValue",z.LIST="ListValue",z.OBJECT="ObjectValue",z.OBJECT_FIELD="ObjectField",z.DIRECTIVE="Directive",z.NAMED_TYPE="NamedType",z.LIST_TYPE="ListType",z.NON_NULL_TYPE="NonNullType",z.SCHEMA_DEFINITION="SchemaDefinition",z.OPERATION_TYPE_DEFINITION="OperationTypeDefinition",z.SCALAR_TYPE_DEFINITION="ScalarTypeDefinition",z.OBJECT_TYPE_DEFINITION="ObjectTypeDefinition",z.FIELD_DEFINITION="FieldDefinition",z.INPUT_VALUE_DEFINITION="InputValueDefinition",z.INTERFACE_TYPE_DEFINITION="InterfaceTypeDefinition",z.UNION_TYPE_DEFINITION="UnionTypeDefinition",z.ENUM_TYPE_DEFINITION="EnumTypeDefinition",z.ENUM_VALUE_DEFINITION="EnumValueDefinition",z.INPUT_OBJECT_TYPE_DEFINITION="InputObjectTypeDefinition",z.DIRECTIVE_DEFINITION="DirectiveDefinition",z.SCHEMA_EXTENSION="SchemaExtension",z.SCALAR_TYPE_EXTENSION="ScalarTypeExtension",z.OBJECT_TYPE_EXTENSION="ObjectTypeExtension",z.INTERFACE_TYPE_EXTENSION="InterfaceTypeExtension",z.UNION_TYPE_EXTENSION="UnionTypeExtension",z.ENUM_TYPE_EXTENSION="EnumTypeExtension",z.INPUT_OBJECT_TYPE_EXTENSION="InputObjectTypeExtension";const Q=Object.freeze({});function G(e,n){const t=e[n];return"object"==typeof t?t:"function"==typeof t?{enter:t,leave:void 0}:{enter:e.enter,leave:e.leave}}const Y={Name:{leave:e=>e.value},Variable:{leave:e=>"$"+e.name},Document:{leave:e=>J(e.definitions,"\n\n")},OperationDefinition:{leave(e){const n=W("(",J(e.variableDefinitions,", "),")"),t=J([e.operation,J([e.name,n]),J(e.directives," ")]," ");return("query"===t?"":t+" ")+e.selectionSet}},VariableDefinition:{leave:({variable:e,type:n,defaultValue:t,directives:r})=>e+": "+n+W(" = ",t)+W(" ",J(r," "))},SelectionSet:{leave:({selections:e})=>H(e)},Field:{leave({alias:e,name:n,arguments:t,directives:r,selectionSet:i}){const a=W("",e,": ")+n;let o=a+W("(",J(t,", "),")");return o.length>80&&(o=a+W("(\n",X(J(t,"\n")),"\n)")),J([o,J(r," "),i]," ")}},Argument:{leave:({name:e,value:n})=>e+": "+n},FragmentSpread:{leave:({name:e,directives:n})=>"..."+e+W(" ",J(n," "))},InlineFragment:{leave:({typeCondition:e,directives:n,selectionSet:t})=>J(["...",W("on ",e),J(n," "),t]," ")},FragmentDefinition:{leave:({name:e,typeCondition:n,variableDefinitions:t,directives:r,selectionSet:i})=>`fragment ${e}${W("(",J(t,", "),")")} on ${n} ${W("",J(r," ")," ")}`+i},IntValue:{leave:({value:e})=>e},FloatValue:{leave:({value:e})=>e},StringValue:{leave:({value:e,block:n})=>n?function(e){const n=e.replace(/"""/g,'\\"""'),t=n.split(/\r\n|[\n\r]/g),r=1===t.length,i=t.length>1&&t.slice(1).every((e=>0===e.length||N(e.charCodeAt(0)))),a=n.endsWith('\\"""'),o=e.endsWith('"')&&!a,s=e.endsWith("\\"),d=o||s,c=!r||e.length>70||d||i||a;let u="";const l=r&&N(e.charCodeAt(0));return(c&&!l||i)&&(u+="\n"),u+=n,(c||d)&&(u+="\n"),'"""'+u+'"""'}(e):`"${e.replace(w,D)}"`},BooleanValue:{leave:({value:e})=>e?"true":"false"},NullValue:{leave:()=>"null"},EnumValue:{leave:({value:e})=>e},ListValue:{leave:({values:e})=>"["+J(e,", ")+"]"},ObjectValue:{leave:({fields:e})=>"{"+J(e,", ")+"}"},ObjectField:{leave:({name:e,value:n})=>e+": "+n},Directive:{leave:({name:e,arguments:n})=>"@"+e+W("(",J(n,", "),")")},NamedType:{leave:({name:e})=>e},ListType:{leave:({type:e})=>"["+e+"]"},NonNullType:{leave:({type:e})=>e+"!"},SchemaDefinition:{leave:({description:e,directives:n,operationTypes:t})=>W("",e,"\n")+J(["schema",J(n," "),H(t)]," ")},OperationTypeDefinition:{leave:({operation:e,type:n})=>e+": "+n},ScalarTypeDefinition:{leave:({description:e,name:n,directives:t})=>W("",e,"\n")+J(["scalar",n,J(t," ")]," ")},ObjectTypeDefinition:{leave:({description:e,name:n,interfaces:t,directives:r,fields:i})=>W("",e,"\n")+J(["type",n,W("implements ",J(t," & ")),J(r," "),H(i)]," ")},FieldDefinition:{leave:({description:e,name:n,arguments:t,type:r,directives:i})=>W("",e,"\n")+n+(Z(t)?W("(\n",X(J(t,"\n")),"\n)"):W("(",J(t,", "),")"))+": "+r+W(" ",J(i," "))},InputValueDefinition:{leave:({description:e,name:n,type:t,defaultValue:r,directives:i})=>W("",e,"\n")+J([n+": "+t,W("= ",r),J(i," ")]," ")},InterfaceTypeDefinition:{leave:({description:e,name:n,interfaces:t,directives:r,fields:i})=>W("",e,"\n")+J(["interface",n,W("implements ",J(t," & ")),J(r," "),H(i)]," ")},UnionTypeDefinition:{leave:({description:e,name:n,directives:t,types:r})=>W("",e,"\n")+J(["union",n,J(t," "),W("= ",J(r," | "))]," ")},EnumTypeDefinition:{leave:({description:e,name:n,directives:t,values:r})=>W("",e,"\n")+J(["enum",n,J(t," "),H(r)]," ")},EnumValueDefinition:{leave:({description:e,name:n,directives:t})=>W("",e,"\n")+J([n,J(t," ")]," ")},InputObjectTypeDefinition:{leave:({description:e,name:n,directives:t,fields:r})=>W("",e,"\n")+J(["input",n,J(t," "),H(r)]," ")},DirectiveDefinition:{leave:({description:e,name:n,arguments:t,repeatable:r,locations:i})=>W("",e,"\n")+"directive @"+n+(Z(t)?W("(\n",X(J(t,"\n")),"\n)"):W("(",J(t,", "),")"))+(r?" repeatable":"")+" on "+J(i," | ")},SchemaExtension:{leave:({directives:e,operationTypes:n})=>J(["extend schema",J(e," "),H(n)]," ")},ScalarTypeExtension:{leave:({name:e,directives:n})=>J(["extend scalar",e,J(n," ")]," ")},ObjectTypeExtension:{leave:({name:e,interfaces:n,directives:t,fields:r})=>J(["extend type",e,W("implements ",J(n," & ")),J(t," "),H(r)]," ")},InterfaceTypeExtension:{leave:({name:e,interfaces:n,directives:t,fields:r})=>J(["extend interface",e,W("implements ",J(n," & ")),J(t," "),H(r)]," ")},UnionTypeExtension:{leave:({name:e,directives:n,types:t})=>J(["extend union",e,J(n," "),W("= ",J(t," | "))]," ")},EnumTypeExtension:{leave:({name:e,directives:n,values:t})=>J(["extend enum",e,J(n," "),H(t)]," ")},InputObjectTypeExtension:{leave:({name:e,directives:n,fields:t})=>J(["extend input",e,J(n," "),H(t)]," ")}};function J(e,n=""){var t;return null!==(t=null==e?void 0:e.filter((e=>e)).join(n))&&void 0!==t?t:""}function H(e){return W("{\n",X(J(e,"\n")),"\n}")}function W(e,n,t=""){return null!=n&&""!==n?e+n+t:""}function X(e){return W("  ",e.replace(/\n/g,"\n  "))}function Z(e){var n;return null!==(n=null==e?void 0:e.some((e=>e.includes("\n"))))&&void 0!==n&&n}const ee=F();class ne{client;constructor(e,n){const t="live"===e.tradingMode?"4567":"6789",r=e.host.includes(t)?e.host:e.host.replace(/\/$/,`:${t}/`),i={Authorization:`Basic ${e.apiKey} ${e.apiSecret}`};"paper"===e.tradingMode&&(i["x-architect-account-mode"]="paper"),this.client=n({url:`${r}graphql`,headers:i})}parse(e){return ee(e)}async execute(e,n){return new Promise(((t,r)=>{let i;var a;this.client.subscribe({query:(a=e,function(e,n,t=U){const r=new Map;for(const e of Object.values(K))r.set(e,G(n,e));let i,a,o,s=Array.isArray(e),d=[e],c=-1,u=[],l=e;const m=[],p=[];do{c++;const e=c===d.length,v=e&&0!==u.length;if(e){if(a=0===p.length?void 0:m[m.length-1],l=o,o=p.pop(),v)if(s){l=l.slice();let e=0;for(const[n,t]of u){const r=n-e;null===t?(l.splice(r,1),e++):l[r]=t}}else{l=Object.defineProperties({},Object.getOwnPropertyDescriptors(l));for(const[e,n]of u)l[e]=n}c=i.index,d=i.keys,u=i.edits,s=i.inArray,i=i.prev}else if(o){if(a=s?c:d[c],l=o[a],null==l)continue;m.push(a)}let I;if(!Array.isArray(l)){var y,h;B(l)||M(!1,`Invalid AST Node: ${q(l)}.`);const t=e?null===(y=r.get(l.kind))||void 0===y?void 0:y.leave:null===(h=r.get(l.kind))||void 0===h?void 0:h.enter;if(I=null==t?void 0:t.call(n,l,a,o,m,p),I===Q)break;if(!1===I){if(!e){m.pop();continue}}else if(void 0!==I&&(u.push([a,I]),!e)){if(!B(I)){m.pop();continue}l=I}}var f;void 0===I&&v&&u.push([a,l]),e?m.pop():(i={inArray:s,index:c,keys:d,edits:u,prev:i},s=Array.isArray(l),d=s?l:null!==(f=t[l.kind])&&void 0!==f?f:[],c=-1,u=[],o&&p.push(o),o=l)}while(void 0!==i);return 0!==u.length?u[u.length-1][1]:e}(a,Y)),variables:n},{next:e=>{i=e.data},error:e=>r(e),complete:()=>t(i)})}))}async accountSnapshot(e,n,t,r){return this.execute(ee(`query AccountSnapshot($accountId: AccountId!, $usePurchasingPower: Boolean, $venueId: VenueId) {\n        accountSnapshot(accountId: $accountId, usePurchasingPower: $usePurchasingPower, venueId: $venueId) { __typename ${e.join(" ")} }\n      }`),{accountId:n,usePurchasingPower:t,venueId:r}).then((e=>e.accountSnapshot))}async accountSnapshotHistory(e,n,t,r,i,a){return this.execute(ee(`query AccountSnapshotHistory($accountIds: [AccountId!], $fromInclusive: DateTime, $toExclusive: DateTime, $usePurchasingPower: Boolean, $venueId: VenueId) {\n        accountSnapshotHistory(accountIds: $accountIds, fromInclusive: $fromInclusive, toExclusive: $toExclusive, usePurchasingPower: $usePurchasingPower, venueId: $venueId) { __typename ${e.join(" ")} }\n      }`),{accountIds:n,fromInclusive:t,toExclusive:r,usePurchasingPower:i,venueId:a}).then((e=>e.accountSnapshotHistory))}async accountSummaries(e){return this.execute(ee(`query AccountSummaries {\n        accountSummaries {\n          __typename\n          snapshotTs\n          byAccount {\n            account {\n              id\n              name\n            }\n            balances {\n              product {\n                __typename\n                id\n                name\n                kind\n                markUsd\n              }\n              account {\n                id\n                name\n              }\n              venue {\n                id\n                name\n              }\n              amount\n              totalMargin\n              positionMargin\n              purchasingPower\n              cashExcess\n              yesterdayBalance\n            }\n            positions {\n              account {\n                id\n                name\n              }\n              venue {\n                id\n                name\n              }\n              market {\n                __typename\n                venue {\n                  id\n                  name\n                }\n                exchangeSymbol\n                id\n                cmeProductGroupInfo {\n                  productName\n                  securityType\n                  category\n                  subCategory\n                  mainFraction\n                  priceBand\n                }\n                kind {\n                  ... on ExchangeMarketKind {\n                    __typename\n                    base {\n                      __typename\n                      id\n                      name\n                      kind\n                      markUsd\n                    }\n                    quote {\n                      __typename\n                      id\n                      name\n                      kind\n                      markUsd\n                    }\n                  }\n                  ... on PoolMarketKind {\n                    __typename\n                    products {\n                      __typename\n                      id\n                      name\n                      kind\n                      markUsd\n                    }\n                  }\n                }\n                name\n                tickSize\n                stepSize\n                minOrderQuantity\n                minOrderQuantityUnit\n                route {\n                  id\n                  name\n                }\n                isFavorite\n              }\n              dir\n              quantity\n              averagePrice\n              tradeDate\n              tradeTime\n            }\n          }\n          ${e.join(" ")}\n        }\n      }`)).then((e=>e.accountSummaries))}async accountSummariesForCpty(e,n,t){return this.execute(ee(`query AccountSummariesForCpty($venue: VenueId!, $route: RouteId!) {\n        accountSummariesForCpty(venue: $venue, route: $route) {\n          __typename\n          snapshotTs\n          byAccount {\n            account {\n              id\n              name\n            }\n            balances {\n              product {\n                __typename\n                id\n                name\n                kind\n                markUsd\n              }\n              account {\n                id\n                name\n              }\n              venue {\n                id\n                name\n              }\n              amount\n              totalMargin\n              positionMargin\n              purchasingPower\n              cashExcess\n              yesterdayBalance\n            }\n            positions {\n              account {\n                id\n                name\n              }\n              venue {\n                id\n                name\n              }\n              market {\n                __typename\n                venue {\n                  id\n                  name\n                }\n                exchangeSymbol\n                id\n                cmeProductGroupInfo {\n                  productName\n                  securityType\n                  category\n                  subCategory\n                  mainFraction\n                  priceBand\n                }\n                kind {\n                  ... on ExchangeMarketKind {\n                    __typename\n                    base {\n                      __typename\n                      id\n                      name\n                      kind\n                      markUsd\n                    }\n                    quote {\n                      __typename\n                      id\n                      name\n                      kind\n                      markUsd\n                    }\n                  }\n                  ... on PoolMarketKind {\n                    __typename\n                    products {\n                      __typename\n                      id\n                      name\n                      kind\n                      markUsd\n                    }\n                  }\n                }\n                name\n                tickSize\n                stepSize\n                minOrderQuantity\n                minOrderQuantityUnit\n                route {\n                  id\n                  name\n                }\n                isFavorite\n              }\n              dir\n              quantity\n              averagePrice\n              tradeDate\n              tradeTime\n            }\n          }\n          ${e.join(" ")}\n        }\n      }`),{venue:n,route:t}).then((e=>e.accountSummariesForCpty))}async accounts(e){return this.execute(ee(`query Accounts {\n        accounts {\n          __typename\n          id\n          name\n          ${e.join(" ")}\n        }\n      }`)).then((e=>e.accounts))}async algoLog(e,n){return this.execute(ee(`query AlgoLog($orderId: OrderId!) {\n        algoLog(orderId: $orderId) { __typename ${e.join(" ")} }\n      }`),{orderId:n}).then((e=>e.algoLog))}async algoOrder(e,n){return this.execute(ee(`query AlgoOrder($orderId: OrderId!) {\n        algoOrder(orderId: $orderId) {\n          __typename\n          orderId\n          trader\n          account\n          algo\n          parentOrderId\n          markets\n          ${e.join(" ")}\n        }\n      }`),{orderId:n}).then((e=>e.algoOrder))}async algoStatus(e,n){return this.execute(ee(`query AlgoStatus($orderId: OrderId) {\n        algoStatus(orderId: $orderId) {\n          __typename\n          orderId\n          order {\n            orderId\n            trader\n            account\n            algo\n            parentOrderId\n            markets\n          }\n          creationTime\n          status\n          lastStatusChange\n          fractionComplete\n          ${e.join(" ")}\n        }\n      }`),{orderId:n}).then((e=>e.algoStatus))}async availableAlgos(){return this.execute(ee("query AvailableAlgos {\n        availableAlgos\n      }")).then((e=>e.availableAlgos))}async bookSnapshot(e,n,t,r,i,a){return this.execute(ee(`query BookSnapshot($numLevels: Int!, $market: MarketId!, $delayed: Boolean, $precision: Decimal, $retainSubscriptionForNSeconds: Int) {\n        bookSnapshot(numLevels: $numLevels, market: $market, delayed: $delayed, precision: $precision, retainSubscriptionForNSeconds: $retainSubscriptionForNSeconds) {\n          __typename\n          timestamp\n          bids {\n            price\n            amount\n            total\n          }\n          asks {\n            price\n            amount\n            total\n          }\n          ${e.join(" ")}\n        }\n      }`),{numLevels:n,market:t,delayed:r,precision:i,retainSubscriptionForNSeconds:a}).then((e=>e.bookSnapshot))}async cmeProductGroupInfos(e){return this.execute(ee(`query CmeProductGroupInfos {\n        cmeProductGroupInfos { __typename ${e.join(" ")} }\n      }`)).then((e=>e.cmeProductGroupInfos))}async coinInfo(e,n){return this.execute(ee(`query CoinInfo($product: ProductId!) {\n        coinInfo(product: $product) { __typename ${e.join(" ")} }\n      }`),{product:n}).then((e=>e.coinInfo))}async coinInfos(e){return this.execute(ee(`query CoinInfos {\n        coinInfos { __typename ${e.join(" ")} }\n      }`)).then((e=>e.coinInfos))}async cptys(e){return this.execute(ee(`query Cptys {\n        cptys { __typename ${e.join(" ")} }\n      }`)).then((e=>e.cptys))}async eventContractEvents(e,n){return this.execute(ee(`query EventContractEvents($venue: VenueId!) {\n        eventContractEvents(venue: $venue) { __typename ${e.join(" ")} }\n      }`),{venue:n}).then((e=>e.eventContractEvents))}async eventContractGreeks(e,n){return this.execute(ee(`query EventContractGreeks($event: ProductId!) {\n        eventContractGreeks(event: $event) { __typename ${e.join(" ")} }\n      }`),{event:n}).then((e=>e.eventContractGreeks))}async fills(e,n,t,r,i){return this.execute(ee(`query Fills($base: ProductId, $quote: ProductId, $route: RouteId, $venue: VenueId) {\n        fills(base: $base, quote: $quote, route: $route, venue: $venue) {\n          __typename\n          normal {\n            kind\n            fillId\n            orderId\n            market {\n              __typename\n              venue {\n                id\n                name\n              }\n              exchangeSymbol\n              id\n              cmeProductGroupInfo {\n                productName\n                securityType\n                category\n                subCategory\n                mainFraction\n                priceBand\n              }\n              kind {\n                ... on ExchangeMarketKind {\n                  __typename\n                  base {\n                    __typename\n                    id\n                    name\n                    kind\n                    markUsd\n                  }\n                  quote {\n                    __typename\n                    id\n                    name\n                    kind\n                    markUsd\n                  }\n                }\n                ... on PoolMarketKind {\n                  __typename\n                  products {\n                    __typename\n                    id\n                    name\n                    kind\n                    markUsd\n                  }\n                }\n              }\n              name\n              tickSize\n              stepSize\n              minOrderQuantity\n              minOrderQuantityUnit\n              route {\n                id\n                name\n              }\n              isFavorite\n            }\n            dir\n            price\n            quantity\n            recvTime\n            tradeTime\n          }\n          ${e.join(" ")}\n        }\n      }`),{base:n,quote:t,route:r,venue:i}).then((e=>e.fills))}async filterMarkets(e,n){return this.execute(ee(`query FilterMarkets($filter: MarketFilter!) {\n        filterMarkets(filter: $filter) {\n          __typename\n          __typename\n          venue {\n            id\n            name\n          }\n          exchangeSymbol\n          id\n          cmeProductGroupInfo {\n            productName\n            securityType\n            category\n            subCategory\n            mainFraction\n            priceBand\n          }\n          kind {\n            ... on ExchangeMarketKind {\n              __typename\n              base {\n                __typename\n                id\n                name\n                kind\n                markUsd\n              }\n              quote {\n                __typename\n                id\n                name\n                kind\n                markUsd\n              }\n            }\n            ... on PoolMarketKind {\n              __typename\n              products {\n                __typename\n                id\n                name\n                kind\n                markUsd\n              }\n            }\n          }\n          name\n          tickSize\n          stepSize\n          minOrderQuantity\n          minOrderQuantityUnit\n          route {\n            id\n            name\n          }\n          isFavorite\n          ${e.join(" ")}\n        }\n      }`),{filter:n}).then((e=>e.filterMarkets))}async historicalCandles(e,n,t,r,i){return this.execute(ee(`query HistoricalCandles($width: CandleWidth!, $start: DateTime!, $id: MarketId!, $end: DateTime!) {\n        historicalCandles(width: $width, start: $start, id: $id, end: $end) { __typename ${e.join(" ")} }\n      }`),{width:n,start:t,id:r,end:i}).then((e=>e.historicalCandles))}async listApiKeys(e){return this.execute(ee(`query ListApiKeys {\n        listApiKeys { __typename ${e.join(" ")} }\n      }`)).then((e=>e.listApiKeys))}async market(e,n){return this.execute(ee(`query Market($id: MarketId!) {\n        market(id: $id) {\n          __typename\n          __typename\n          venue {\n            id\n            name\n          }\n          exchangeSymbol\n          id\n          cmeProductGroupInfo {\n            productName\n            securityType\n            category\n            subCategory\n            mainFraction\n            priceBand\n          }\n          kind {\n            ... on ExchangeMarketKind {\n              __typename\n              base {\n                __typename\n                id\n                name\n                kind\n                markUsd\n              }\n              quote {\n                __typename\n                id\n                name\n                kind\n                markUsd\n              }\n            }\n            ... on PoolMarketKind {\n              __typename\n              products {\n                __typename\n                id\n                name\n                kind\n                markUsd\n              }\n            }\n          }\n          name\n          tickSize\n          stepSize\n          minOrderQuantity\n          minOrderQuantityUnit\n          route {\n            id\n            name\n          }\n          isFavorite\n          ${e.join(" ")}\n        }\n      }`),{id:n}).then((e=>e.market))}async marketSnapshot(e,n,t){return this.execute(ee(`query MarketSnapshot($market: MarketId!, $latestAtOrBefore: DateTime) {\n        marketSnapshot(market: $market, latestAtOrBefore: $latestAtOrBefore) {\n          __typename\n          __typename\n          marketId\n          market {\n            name\n          }\n          high24h\n          lastPrice\n          low24h\n          volume24h\n          open24h\n          bidPrice\n          askPrice\n          ${e.join(" ")}\n        }\n      }`),{market:n,latestAtOrBefore:t}).then((e=>e.marketSnapshot))}async markets(e,n){return this.execute(ee(`query Markets($id: [MarketId!]!) {\n        markets(id: $id) {\n          __typename\n          __typename\n          venue {\n            id\n            name\n          }\n          exchangeSymbol\n          id\n          cmeProductGroupInfo {\n            productName\n            securityType\n            category\n            subCategory\n            mainFraction\n            priceBand\n          }\n          kind {\n            ... on ExchangeMarketKind {\n              __typename\n              base {\n                __typename\n                id\n                name\n                kind\n                markUsd\n              }\n              quote {\n                __typename\n                id\n                name\n                kind\n                markUsd\n              }\n            }\n            ... on PoolMarketKind {\n              __typename\n              products {\n                __typename\n                id\n                name\n                kind\n                markUsd\n              }\n            }\n          }\n          name\n          tickSize\n          stepSize\n          minOrderQuantity\n          minOrderQuantityUnit\n          route {\n            id\n            name\n          }\n          isFavorite\n          ${e.join(" ")}\n        }\n      }`),{id:n}).then((e=>e.markets))}async marketsSnapshots(e,n){return this.execute(ee(`query MarketsSnapshots($latestAtOrBefore: DateTime) {\n        marketsSnapshots(latestAtOrBefore: $latestAtOrBefore) {\n          __typename\n          __typename\n          marketId\n          market {\n            name\n          }\n          high24h\n          lastPrice\n          low24h\n          volume24h\n          open24h\n          bidPrice\n          askPrice\n          ${e.join(" ")}\n        }\n      }`),{latestAtOrBefore:n}).then((e=>e.marketsSnapshots))}async me(e){return this.execute(ee(`query Me {\n        me { __typename ${e.join(" ")} }\n      }`)).then((e=>e.me))}async mmAlgoOrder(e,n){return this.execute(ee(`query MmAlgoOrder($orderId: OrderId!) {\n        mmAlgoOrder(orderId: $orderId) {\n          __typename\n          name\n          orderId\n          marketId\n          quantityBuy\n          quantitySell\n          minPosition\n          maxPosition\n          maxImproveBbo\n          positionTilt\n          referencePrice\n          refDistFrac\n          toleranceFrac\n          account\n          ${e.join(" ")}\n        }\n      }`),{orderId:n}).then((e=>e.mmAlgoOrder))}async mmAlgoStatus(e,n){return this.execute(ee(`query MmAlgoStatus($orderId: OrderId) {\n        mmAlgoStatus(orderId: $orderId) {\n          __typename\n          orderId\n          order {\n            name\n            orderId\n            marketId\n            quantityBuy\n            quantitySell\n            minPosition\n            maxPosition\n            maxImproveBbo\n            positionTilt\n            referencePrice\n            refDistFrac\n            toleranceFrac\n            account\n          }\n          creationTime\n          status\n          position\n          hedgePosition\n          missRatio\n          effectiveSpread\n          buyStatus {\n            lastOrderTime\n            lastFillTime\n            lastRejectTime\n            openOrder {\n              orderId\n              price\n              quantity\n              cancelPending\n            }\n            referencePrice\n          }\n          sellStatus {\n            lastOrderTime\n            lastFillTime\n            lastRejectTime\n            openOrder {\n              orderId\n              price\n              quantity\n              cancelPending\n            }\n            referencePrice\n          }\n          kind\n          ${e.join(" ")}\n        }\n      }`),{orderId:n}).then((e=>e.mmAlgoStatus))}async openOrders(e){return this.execute(ee(`query OpenOrders {\n        openOrders {\n          __typename\n          __typename\n          timestamp\n          order {\n            id\n            market {\n              __typename\n              venue {\n                id\n                name\n              }\n              exchangeSymbol\n              id\n              cmeProductGroupInfo {\n                productName\n                securityType\n                category\n                subCategory\n                mainFraction\n                priceBand\n              }\n              kind {\n                ... on ExchangeMarketKind {\n                  __typename\n                  base {\n                    __typename\n                    id\n                    name\n                    kind\n                    markUsd\n                  }\n                  quote {\n                    __typename\n                    id\n                    name\n                    kind\n                    markUsd\n                  }\n                }\n                ... on PoolMarketKind {\n                  __typename\n                  products {\n                    __typename\n                    id\n                    name\n                    kind\n                    markUsd\n                  }\n                }\n              }\n              name\n              tickSize\n              stepSize\n              minOrderQuantity\n              minOrderQuantityUnit\n              route {\n                id\n                name\n              }\n              isFavorite\n            }\n            dir\n            quantity\n            orderType {\n              __typename\n              ... on LimitOrderType {\n                limitPrice\n              }\n              ... on StopLossLimitOrderType {\n                limitPrice\n                triggerPrice\n              }\n              ... on TakeProfitLimitOrderType {\n                limitPrice\n                triggerPrice\n              }\n            }\n            timeInForce {\n              instruction\n              goodTilDate\n            }\n          }\n          orderState\n          filledQty\n          avgFillPrice\n          rejectReason\n          ${e.join(" ")}\n        }\n      }`)).then((e=>e.openOrders))}async optionsMarketSnapshots(e,n,t){return this.execute(ee(`query OptionsMarketSnapshots($underlying: ProductId!, $latestAtOrBefore: DateTime) {\n        optionsMarketSnapshots(underlying: $underlying, latestAtOrBefore: $latestAtOrBefore) { __typename ${e.join(" ")} }\n      }`),{underlying:n,latestAtOrBefore:t}).then((e=>e.optionsMarketSnapshots))}async order(e,n){return this.execute(ee(`query Order($orderId: OrderId!) {\n        order(orderId: $orderId) {\n          __typename\n          __typename\n          timestamp\n          order {\n            id\n            market {\n              __typename\n              venue {\n                id\n                name\n              }\n              exchangeSymbol\n              id\n              cmeProductGroupInfo {\n                productName\n                securityType\n                category\n                subCategory\n                mainFraction\n                priceBand\n              }\n              kind {\n                ... on ExchangeMarketKind {\n                  __typename\n                  base {\n                    __typename\n                    id\n                    name\n                    kind\n                    markUsd\n                  }\n                  quote {\n                    __typename\n                    id\n                    name\n                    kind\n                    markUsd\n                  }\n                }\n                ... on PoolMarketKind {\n                  __typename\n                  products {\n                    __typename\n                    id\n                    name\n                    kind\n                    markUsd\n                  }\n                }\n              }\n              name\n              tickSize\n              stepSize\n              minOrderQuantity\n              minOrderQuantityUnit\n              route {\n                id\n                name\n              }\n              isFavorite\n            }\n            dir\n            quantity\n            orderType {\n              __typename\n              ... on LimitOrderType {\n                limitPrice\n              }\n              ... on StopLossLimitOrderType {\n                limitPrice\n                triggerPrice\n              }\n              ... on TakeProfitLimitOrderType {\n                limitPrice\n                triggerPrice\n              }\n            }\n            timeInForce {\n              instruction\n              goodTilDate\n            }\n          }\n          orderState\n          filledQty\n          avgFillPrice\n          rejectReason\n          ${e.join(" ")}\n        }\n      }`),{orderId:n}).then((e=>e.order))}async outedOrders(e,n,t){return this.execute(ee(`query OutedOrders($fromInclusive: DateTime, $toExclusive: DateTime) {\n        outedOrders(fromInclusive: $fromInclusive, toExclusive: $toExclusive) {\n          __typename\n          __typename\n          timestamp\n          order {\n            id\n            market {\n              __typename\n              venue {\n                id\n                name\n              }\n              exchangeSymbol\n              id\n              cmeProductGroupInfo {\n                productName\n                securityType\n                category\n                subCategory\n                mainFraction\n                priceBand\n              }\n              kind {\n                ... on ExchangeMarketKind {\n                  __typename\n                  base {\n                    __typename\n                    id\n                    name\n                    kind\n                    markUsd\n                  }\n                  quote {\n                    __typename\n                    id\n                    name\n                    kind\n                    markUsd\n                  }\n                }\n                ... on PoolMarketKind {\n                  __typename\n                  products {\n                    __typename\n                    id\n                    name\n                    kind\n                    markUsd\n                  }\n                }\n              }\n              name\n              tickSize\n              stepSize\n              minOrderQuantity\n              minOrderQuantityUnit\n              route {\n                id\n                name\n              }\n              isFavorite\n            }\n            dir\n            quantity\n            orderType {\n              __typename\n              ... on LimitOrderType {\n                limitPrice\n              }\n              ... on StopLossLimitOrderType {\n                limitPrice\n                triggerPrice\n              }\n              ... on TakeProfitLimitOrderType {\n                limitPrice\n                triggerPrice\n              }\n            }\n            timeInForce {\n              instruction\n              goodTilDate\n            }\n          }\n          orderState\n          filledQty\n          avgFillPrice\n          rejectReason\n          ${e.join(" ")}\n        }\n      }`),{fromInclusive:n,toExclusive:t}).then((e=>e.outedOrders))}async povOrder(e,n){return this.execute(ee(`query PovOrder($orderId: OrderId!) {\n        povOrder(orderId: $orderId) {\n          __typename\n          name\n          orderId\n          marketId\n          dir\n          targetVolumeFrac\n          minOrderQuantity\n          maxQuantity\n          endTime\n          accountId\n          takeThroughFrac\n          ${e.join(" ")}\n        }\n      }`),{orderId:n}).then((e=>e.povOrder))}async povStatus(e,n){return this.execute(ee(`query PovStatus($orderId: OrderId) {\n        povStatus(orderId: $orderId) {\n          __typename\n          orderId\n          order {\n            name\n            orderId\n            marketId\n            dir\n            targetVolumeFrac\n            minOrderQuantity\n            maxQuantity\n            endTime\n            accountId\n            takeThroughFrac\n          }\n          creationTime\n          status\n          fractionComplete\n          realizedVolumeFrac\n          marketVolume\n          quantityFilled\n          ${e.join(" ")}\n        }\n      }`),{orderId:n}).then((e=>e.povStatus))}async product(e,n){return this.execute(ee(`query Product($id: ProductId!) {\n        product(id: $id) { __typename ${e.join(" ")} }\n      }`),{id:n}).then((e=>e.product))}async products(e,n){return this.execute(ee(`query Products($id: [ProductId!]) {\n        products(id: $id) { __typename ${e.join(" ")} }\n      }`),{id:n}).then((e=>e.products))}async route(e,n){return this.execute(ee(`query Route($id: RouteId!) {\n        route(id: $id) { __typename ${e.join(" ")} }\n      }`),{id:n}).then((e=>e.route))}async routes(e){return this.execute(ee(`query Routes {\n        routes { __typename ${e.join(" ")} }\n      }`)).then((e=>e.routes))}async smartOrderRouterOrder(e,n){return this.execute(ee(`query SmartOrderRouterOrder($orderId: OrderId!) {\n        smartOrderRouterOrder(orderId: $orderId) {\n          __typename\n          orderId\n          markets {\n            id\n          }\n          dir\n          limitPrice\n          targetSize\n          executionTimeLimitMs\n          parentOrderId\n          ${e.join(" ")}\n        }\n      }`),{orderId:n}).then((e=>e.smartOrderRouterOrder))}async smartOrderRouterStatus(e,n){return this.execute(ee(`query SmartOrderRouterStatus($orderId: OrderId) {\n        smartOrderRouterStatus(orderId: $orderId) {\n          __typename\n          status {\n            orderId\n            order {\n              orderId\n              trader\n              account\n              algo\n              parentOrderId\n              markets\n            }\n            creationTime\n            status\n            lastStatusChange\n            fractionComplete\n          }\n          order {\n            orderId\n            markets {\n              id\n            }\n            dir\n            limitPrice\n            targetSize\n            executionTimeLimitMs\n            parentOrderId\n          }\n          ${e.join(" ")}\n        }\n      }`),{orderId:n}).then((e=>e.smartOrderRouterStatus))}async spreadAlgoOrder(e,n){return this.execute(ee(`query SpreadAlgoOrder($orderId: OrderId!) {\n        spreadAlgoOrder(orderId: $orderId) {\n          __typename\n          name\n          orderId\n          marketId\n          quantityBuy\n          quantitySell\n          minPosition\n          maxPosition\n          maxImproveBbo\n          positionTilt\n          referencePrice\n          refDistFrac\n          toleranceFrac\n          account\n          ${e.join(" ")}\n        }\n      }`),{orderId:n}).then((e=>e.spreadAlgoOrder))}async spreadAlgoStatus(e,n){return this.execute(ee(`query SpreadAlgoStatus($orderId: OrderId) {\n        spreadAlgoStatus(orderId: $orderId) {\n          __typename\n          orderId\n          order {\n            name\n            orderId\n            marketId\n            quantityBuy\n            quantitySell\n            minPosition\n            maxPosition\n            maxImproveBbo\n            positionTilt\n            referencePrice\n            refDistFrac\n            toleranceFrac\n            account\n          }\n          creationTime\n          status\n          position\n          hedgePosition\n          missRatio\n          effectiveSpread\n          buyStatus {\n            lastOrderTime\n            lastFillTime\n            lastRejectTime\n            openOrder {\n              orderId\n              price\n              quantity\n              cancelPending\n            }\n            referencePrice\n          }\n          sellStatus {\n            lastOrderTime\n            lastFillTime\n            lastRejectTime\n            openOrder {\n              orderId\n              price\n              quantity\n              cancelPending\n            }\n            referencePrice\n          }\n          kind\n          ${e.join(" ")}\n        }\n      }`),{orderId:n}).then((e=>e.spreadAlgoStatus))}async tcaMarks(e,n,t,r){return this.execute(ee(`query TcaMarks($toExclusive: DateTime!, $fromInclusive: DateTime!, $id: MarketId) {\n        tcaMarks(toExclusive: $toExclusive, fromInclusive: $fromInclusive, id: $id) { __typename ${e.join(" ")} }\n      }`),{toExclusive:n,fromInclusive:t,id:r}).then((e=>e.tcaMarks))}async tcaSummary(e,n,t,r,i){return this.execute(ee(`query TcaSummary($toExclusive: DateTime!, $fromInclusive: DateTime!, $currency: String, $id: MarketId) {\n        tcaSummary(toExclusive: $toExclusive, fromInclusive: $fromInclusive, currency: $currency, id: $id) { __typename ${e.join(" ")} }\n      }`),{toExclusive:n,fromInclusive:t,currency:r,id:i}).then((e=>e.tcaSummary))}async twapOrder(e,n){return this.execute(ee(`query TwapOrder($orderId: OrderId!) {\n        twapOrder(orderId: $orderId) {\n          __typename\n          name\n          orderId\n          marketId\n          dir\n          quantity\n          endTime\n          accountId\n          intervalMs\n          rejectLockoutMs\n          takeThroughFrac\n          ${e.join(" ")}\n        }\n      }`),{orderId:n}).then((e=>e.twapOrder))}async twapStatus(e,n){return this.execute(ee(`query TwapStatus($orderId: OrderId) {\n        twapStatus(orderId: $orderId) {\n          __typename\n          orderId\n          order {\n            name\n            orderId\n            marketId\n            dir\n            quantity\n            endTime\n            accountId\n            intervalMs\n            rejectLockoutMs\n            takeThroughFrac\n          }\n          creationTime\n          status\n          fractionComplete\n          realizedTwap\n          quantityFilled\n          ${e.join(" ")}\n        }\n      }`),{orderId:n}).then((e=>e.twapStatus))}async venue(e,n){return this.execute(ee(`query Venue($id: VenueId!) {\n        venue(id: $id) { __typename ${e.join(" ")} }\n      }`),{id:n}).then((e=>e.venue))}async venues(e){return this.execute(ee(`query Venues {\n        venues { __typename ${e.join(" ")} }\n      }`)).then((e=>e.venues))}async version(){return this.execute(ee("query Version {\n        version\n      }")).then((e=>e.version))}async cancelAllOrders(e){return this.execute(ee("mutation CancelAllOrders($venueId: VenueId) {\n        cancelAllOrders(venueId: $venueId)\n      }"),{venueId:e}).then((e=>e.cancelAllOrders))}async cancelOrder(e){return this.execute(ee("mutation CancelOrder($orderId: OrderId!) {\n        cancelOrder(orderId: $orderId)\n      }"),{orderId:e}).then((e=>e.cancelOrder))}async cancelOrders(e){return this.execute(ee("mutation CancelOrders($orderIds: [OrderId!]!) {\n        cancelOrders(orderIds: $orderIds)\n      }"),{orderIds:e}).then((e=>e.cancelOrders))}async createApiKey(e){return this.execute(ee(`mutation CreateApiKey {\n        createApiKey { __typename ${e.join(" ")} }\n      }`)).then((e=>e.createApiKey))}async createJwt(){return this.execute(ee("mutation CreateJwt {\n        createJwt\n      }")).then((e=>e.createJwt))}async createMmAlgo(e){return this.execute(ee("mutation CreateMmAlgo($mmAlgo: CreateMMAlgo!) {\n        createMmAlgo(mmAlgo: $mmAlgo)\n      }"),{mmAlgo:e}).then((e=>e.createMmAlgo))}async createOrder(e){return this.execute(ee("mutation CreateOrder($order: CreateOrder!) {\n        createOrder(order: $order)\n      }"),{order:e}).then((e=>e.createOrder))}async createOrders(e){return this.execute(ee("mutation CreateOrders($orders: [CreateOrder!]!) {\n        createOrders(orders: $orders)\n      }"),{orders:e}).then((e=>e.createOrders))}async createPovAlgo(e){return this.execute(ee("mutation CreatePovAlgo($povAlgo: CreatePovAlgo!) {\n        createPovAlgo(povAlgo: $povAlgo)\n      }"),{povAlgo:e}).then((e=>e.createPovAlgo))}async createSmartOrderRouterAlgo(e){return this.execute(ee("mutation CreateSmartOrderRouterAlgo($algo: CreateSmartOrderRouterAlgo!) {\n        createSmartOrderRouterAlgo(algo: $algo)\n      }"),{algo:e}).then((e=>e.createSmartOrderRouterAlgo))}async createSpreadAlgo(e){return this.execute(ee("mutation CreateSpreadAlgo($spreadAlgo: CreateSpreadAlgo!) {\n        createSpreadAlgo(spreadAlgo: $spreadAlgo)\n      }"),{spreadAlgo:e}).then((e=>e.createSpreadAlgo))}async createTelegramApiKey(e,n){return this.execute(ee(`mutation CreateTelegramApiKey($telegramId: String!) {\n        createTelegramApiKey(telegramId: $telegramId) { __typename ${e.join(" ")} }\n      }`),{telegramId:n}).then((e=>e.createTelegramApiKey))}async createTwapAlgo(e){return this.execute(ee("mutation CreateTwapAlgo($twapAlgo: CreateTwapAlgo!) {\n        createTwapAlgo(twapAlgo: $twapAlgo)\n      }"),{twapAlgo:e}).then((e=>e.createTwapAlgo))}async previewSmartOrderRouterAlgo(e,n){return this.execute(ee(`mutation PreviewSmartOrderRouterAlgo($algo: CreateSmartOrderRouterAlgo!) {\n        previewSmartOrderRouterAlgo(algo: $algo) { __typename ${e.join(" ")} }\n      }`),{algo:n}).then((e=>e.previewSmartOrderRouterAlgo))}async removeApiKey(e){return this.execute(ee("mutation RemoveApiKey($apiKey: String!) {\n        removeApiKey(apiKey: $apiKey)\n      }"),{apiKey:e}).then((e=>e.removeApiKey))}async removeTelegramApiKeys(){return this.execute(ee("mutation RemoveTelegramApiKeys {\n        removeTelegramApiKeys\n      }")).then((e=>e.removeTelegramApiKeys))}async sendAlgoControlCommand(e,n){return this.execute(ee("mutation SendAlgoControlCommand($orderId: OrderId!, $command: AlgoControlCommand!) {\n        sendAlgoControlCommand(orderId: $orderId, command: $command)\n      }"),{orderId:e,command:n}).then((e=>e.sendAlgoControlCommand))}async setCredentials(e,n){return this.execute(ee("mutation SetCredentials($credentials: String!, $componentId: ComponentId!) {\n        setCredentials(credentials: $credentials, componentId: $componentId)\n      }"),{credentials:e,componentId:n}).then((e=>e.setCredentials))}async updateMarket(e,n){return this.execute(ee(`mutation UpdateMarket($payload: UpdateMarket!) {\n        updateMarket(payload: $payload) { __typename ${e.join(" ")} }\n      }`),{payload:n}).then((e=>e.updateMarket))}}var te=t(985);let re=new Proxy({},{get(e,n){throw new Error("Client is not initialized")},set(e,n,t){throw new Error("Client is not initialized")}});async function ie(){const e=await(0,te.$E)("ArchitectApiKey"),n=await(0,te.$E)("ArchitectApiSecret");if(!e)throw new CustomFunctions.Error(CustomFunctions.ErrorCode.invalidValue,"api_key has not been input");if(!n)throw new CustomFunctions.Error(CustomFunctions.ErrorCode.invalidValue,"api_secret has not been input");var t;return te.$W.apiKey=e,te.$W.apiSecret=n,t=te.$W,re=new ne(t,i),!0}async function ae(e){throw new CustomFunctions.Error(CustomFunctions.ErrorCode.notAvailable,"Not implemented")}async function oe(e){const n=await re.marketSnapshot([],e);if(!n||!n.bidPrice||!n.askPrice)throw new CustomFunctions.Error(CustomFunctions.ErrorCode.notAvailable,"Received bad data from the server, please try again.");try{return[[parseFloat(n.bidPrice),parseFloat(n.askPrice)]]}catch(e){throw new CustomFunctions.Error(CustomFunctions.ErrorCode.invalidValue,"Failed to parse bid/ask prices")}}async function se(e){let n;try{n=await re.marketSnapshot([],e)}catch(e){throw new CustomFunctions.Error(CustomFunctions.ErrorCode.invalidValue,"Error getting market snapshot")}if(!n||!n.bidPrice||!n.askPrice)throw new CustomFunctions.Error(CustomFunctions.ErrorCode.notAvailable,"Received bad data from the server, please try again.");const t=parseFloat(n.bidPrice),r=parseFloat(n.askPrice);return isNaN(t)||isNaN(r)?NaN:(t+r)/2}async function de(){return(await re.filterMarkets([],{venue:"CME",base:"MES",quote:"",underlying:"",maxResults:1,resultsOffset:0,searchString:"",onlyFavorites:!1,sortByVolumeDesc:!0}))[0].exchangeSymbol}return Office.onReady((async e=>{e.host===Office.HostType.Excel&&(await ie()?console.log("Client initialized using saved API key/secret"):console.log("Client not initialized because of missing API key or secret"))})),CustomFunctions.associate("INITIALIZECLIENT",ie),CustomFunctions.associate("GETMARKETLAST",ae),CustomFunctions.associate("GETMARKETBBO",oe),CustomFunctions.associate("GETMARKETMID",se),CustomFunctions.associate("TESTCLIENT",de),r})()));