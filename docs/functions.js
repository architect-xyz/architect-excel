!function(e,n){"object"==typeof exports&&"object"==typeof module?module.exports=n():"function"==typeof define&&define.amd?define([],n):"object"==typeof exports?exports.functions=n():e.functions=n()}(this,(()=>(()=>{"use strict";var e={d:(n,t)=>{for(var i in t)e.o(t,i)&&!e.o(n,i)&&Object.defineProperty(n,i,{enumerable:!0,get:t[i]})},o:(e,n)=>Object.prototype.hasOwnProperty.call(e,n),r:e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}},n={};function t(e){const{credentials:n="same-origin",referrer:t,referrerPolicy:r,shouldRetry:a=()=>!1}=e,o=e.fetchFn||fetch,s=e.abortControllerImpl||AbortController,c=(()=>{let e=!1;const n=[];return{get disposed(){return e},onDispose:t=>e?(setTimeout((()=>t()),0),()=>{}):(n.push(t),()=>{n.splice(n.indexOf(t),1)}),dispose(){if(!e){e=!0;for(const e of[...n])e()}}}})();return{subscribe(u,l){if(c.disposed)throw new Error("Client has been disposed");const d=new s,m=c.onDispose((()=>{m(),d.abort()}));return(async()=>{var s;let c=null,m=0;for(;;){if(c){const e=await a(c,m);if(d.signal.aborted)return;if(!e)throw c;m++}try{const a="function"==typeof e.url?await e.url(u):e.url;if(d.signal.aborted)return;const c="function"==typeof e.headers?await e.headers():null!==(s=e.headers)&&void 0!==s?s:{};if(d.signal.aborted)return;let m;try{m=await o(a,{signal:d.signal,method:"POST",headers:Object.assign(Object.assign({},c),{"content-type":"application/json; charset=utf-8",accept:"application/graphql-response+json, application/json"}),credentials:n,referrer:t,referrerPolicy:r,body:JSON.stringify(u)})}catch(e){throw new i(e)}if(!m.ok)throw new i(m);if(!m.body)throw new Error("Missing response body");const y=m.headers.get("content-type");if(!y)throw new Error("Missing response content-type");if(!y.includes("application/graphql-response+json")&&!y.includes("application/json"))throw new Error(`Unsupported response content-type ${y}`);const p=await m.json();return l.next(p),d.abort()}catch(e){if(d.signal.aborted)return;if(!(e instanceof i))throw e;c=e}}})().then((()=>l.complete())).catch((e=>l.error(e))),()=>d.abort()},dispose(){c.dispose()}}}e.r(n),e.d(n,{getAccountBalance:()=>le,getAccounts:()=>se,getMarketBBO:()=>re,getMarketMid:()=>ae,getPnL:()=>ue,getPositions:()=>ce,getTicker:()=>oe,initializeClient:()=>ie,searchSymbols:()=>de});class i extends Error{constructor(e){let n,t;var i;!function(e){return"object"==typeof e&&null!==e}(i=e)||"boolean"!=typeof i.ok||"number"!=typeof i.status||"string"!=typeof i.statusText?n=e instanceof Error?e.message:String(e):(t=e,n="Server responded with "+e.status+": "+e.statusText),super(n),this.name=this.constructor.name,this.response=t}}var r,a,o="Document",s="FragmentDefinition";class c extends Error{constructor(e,n,t,i,r,a,o){super(e),this.name="GraphQLError",this.message=e,r&&(this.path=r),n&&(this.nodes=Array.isArray(n)?n:[n]),t&&(this.source=t),i&&(this.positions=i),a&&(this.originalError=a);var s=o;if(!s&&a){var c=a.extensions;c&&"object"==typeof c&&(s=c)}this.extensions=s||{}}toJSON(){return{...this,message:this.message}}toString(){return this.message}get[Symbol.toStringTag](){return"GraphQLError"}}function u(e){return new c(`Syntax Error: Unexpected token at ${a} in ${e}`)}function l(e){if(e.lastIndex=a,e.test(r))return r.slice(a,a=e.lastIndex)}var d=/ +(?=[^\s])/y;function m(e){for(var n=e.split("\n"),t="",i=0,r=0,a=n.length-1,o=0;o<n.length;o++)d.lastIndex=0,d.test(n[o])&&(o&&(!i||d.lastIndex<i)&&(i=d.lastIndex),r=r||o,a=o);for(var s=r;s<=a;s++)s!==r&&(t+="\n"),t+=n[s].slice(i).replace(/\\"""/g,'"""');return t}function y(){for(var e=0|r.charCodeAt(a++);9===e||10===e||13===e||32===e||35===e||44===e||65279===e;e=0|r.charCodeAt(a++))if(35===e)for(;10!==(e=r.charCodeAt(a++))&&13!==e;);a--}function p(){for(var e=a,n=0|r.charCodeAt(a++);n>=48&&n<=57||n>=65&&n<=90||95===n||n>=97&&n<=122;n=0|r.charCodeAt(a++));if(e===a-1)throw u("Name");var t=r.slice(e,--a);return y(),t}function f(){return{kind:"Name",value:p()}}var h=/(?:"""|(?:[\s\S]*?[^\\])""")/y,v=/(?:(?:\.\d+)?[eE][+-]?\d+|\.\d+)/y;function g(e){var n;switch(r.charCodeAt(a)){case 91:a++,y();for(var t=[];93!==r.charCodeAt(a);)t.push(g(e));return a++,y(),{kind:"ListValue",values:t};case 123:a++,y();for(var i=[];125!==r.charCodeAt(a);){var o=f();if(58!==r.charCodeAt(a++))throw u("ObjectField");y(),i.push({kind:"ObjectField",name:o,value:g(e)})}return a++,y(),{kind:"ObjectValue",fields:i};case 36:if(e)throw u("Variable");return a++,{kind:"Variable",name:f()};case 34:if(34===r.charCodeAt(a+1)&&34===r.charCodeAt(a+2)){if(a+=3,null==(n=l(h)))throw u("StringValue");return y(),{kind:"StringValue",value:m(n.slice(0,-3)),block:!0}}var s,c=a;a++;var d=!1;for(s=0|r.charCodeAt(a++);92===s&&(a++,d=!0)||10!==s&&13!==s&&34!==s&&s;s=0|r.charCodeAt(a++));if(34!==s)throw u("StringValue");return n=r.slice(c,a),y(),{kind:"StringValue",value:d?JSON.parse(n):n.slice(1,-1),block:!1};case 45:case 48:case 49:case 50:case 51:case 52:case 53:case 54:case 55:case 56:case 57:for(var b,E=a++;(b=0|r.charCodeAt(a++))>=48&&b<=57;);var S=r.slice(E,--a);if(46===(b=r.charCodeAt(a))||69===b||101===b){if(null==(n=l(v)))throw u("FloatValue");return y(),{kind:"FloatValue",value:S+n}}return y(),{kind:"IntValue",value:S};case 110:if(117===r.charCodeAt(a+1)&&108===r.charCodeAt(a+2)&&108===r.charCodeAt(a+3))return a+=4,y(),{kind:"NullValue"};break;case 116:if(114===r.charCodeAt(a+1)&&117===r.charCodeAt(a+2)&&101===r.charCodeAt(a+3))return a+=4,y(),{kind:"BooleanValue",value:!0};break;case 102:if(97===r.charCodeAt(a+1)&&108===r.charCodeAt(a+2)&&115===r.charCodeAt(a+3)&&101===r.charCodeAt(a+4))return a+=5,y(),{kind:"BooleanValue",value:!1}}return{kind:"EnumValue",value:p()}}function b(e){if(40===r.charCodeAt(a)){var n=[];a++,y();do{var t=f();if(58!==r.charCodeAt(a++))throw u("Argument");y(),n.push({kind:"Argument",name:t,value:g(e)})}while(41!==r.charCodeAt(a));return a++,y(),n}}function E(e){if(64===r.charCodeAt(a)){var n=[];do{a++,n.push({kind:"Directive",name:f(),arguments:b(e)})}while(64===r.charCodeAt(a));return n}}function S(){for(var e=0;91===r.charCodeAt(a);)e++,a++,y();var n={kind:"NamedType",name:f()};do{if(33===r.charCodeAt(a)&&(a++,y(),n={kind:"NonNullType",type:n}),e){if(93!==r.charCodeAt(a++))throw u("NamedType");y(),n={kind:"ListType",type:n}}}while(e--);return n}function I(){if(123!==r.charCodeAt(a++))throw u("SelectionSet");return y(),$()}function $(){var e=[];do{if(46===r.charCodeAt(a)){if(46!==r.charCodeAt(++a)||46!==r.charCodeAt(++a))throw u("SelectionSet");switch(a++,y(),r.charCodeAt(a)){case 64:e.push({kind:"InlineFragment",typeCondition:void 0,directives:E(!1),selectionSet:I()});break;case 111:110===r.charCodeAt(a+1)?(a+=2,y(),e.push({kind:"InlineFragment",typeCondition:{kind:"NamedType",name:f()},directives:E(!1),selectionSet:I()})):e.push({kind:"FragmentSpread",name:f(),directives:E(!1)});break;case 123:a++,y(),e.push({kind:"InlineFragment",typeCondition:void 0,directives:void 0,selectionSet:$()});break;default:e.push({kind:"FragmentSpread",name:f(),directives:E(!1)})}}else{var n=f(),t=void 0;58===r.charCodeAt(a)&&(a++,y(),t=n,n=f());var i=b(!1),o=E(!1),s=void 0;123===r.charCodeAt(a)&&(a++,y(),s=$()),e.push({kind:"Field",alias:t,name:n,arguments:i,directives:o,selectionSet:s})}}while(125!==r.charCodeAt(a));return a++,y(),{kind:"SelectionSet",selections:e}}function T(){if(y(),40===r.charCodeAt(a)){var e=[];a++,y();do{if(36!==r.charCodeAt(a++))throw u("Variable");var n=f();if(58!==r.charCodeAt(a++))throw u("VariableDefinition");y();var t=S(),i=void 0;61===r.charCodeAt(a)&&(a++,y(),i=g(!0)),y(),e.push({kind:"VariableDefinition",variable:{kind:"Variable",name:n},type:t,defaultValue:i,directives:E(!0)})}while(41!==r.charCodeAt(a));return a++,y(),e}}function C(){var e=f();if(111!==r.charCodeAt(a++)||110!==r.charCodeAt(a++))throw u("FragmentDefinition");return y(),{kind:"FragmentDefinition",name:e,typeCondition:{kind:"NamedType",name:f()},directives:E(!1),selectionSet:I()}}function N(){var e=[];do{if(123===r.charCodeAt(a))a++,y(),e.push({kind:"OperationDefinition",operation:"query",name:void 0,variableDefinitions:void 0,directives:void 0,selectionSet:$()});else{var n=p();switch(n){case"fragment":e.push(C());break;case"query":case"mutation":case"subscription":var t,i=void 0;40!==(t=r.charCodeAt(a))&&64!==t&&123!==t&&(i=f()),e.push({kind:"OperationDefinition",operation:n,name:i,variableDefinitions:T(),directives:E(!1),selectionSet:I()});break;default:throw u("Document")}}}while(a<r.length);return e}function x(e,n){return r=e.body?e.body:e,a=0,y(),n&&n.noLocation?{kind:"Document",definitions:N()}:{kind:"Document",definitions:N(),loc:{start:0,end:r.length,startToken:void 0,endToken:void 0,source:{body:r,name:"graphql.web",locationOffset:{line:1,column:1}}}}}var A=0,O=new Set;function F(){function e(e,n){var t,i,r=x(e).definitions,a=new Set;for(var c of n||[])for(var u of c.definitions)u.kind!==s||a.has(u)||(r.push(u),a.add(u));return(t=r[0].kind===s)&&r[0].directives&&(r[0].directives=r[0].directives.filter((e=>"_unmask"!==e.name.value))),{kind:o,definitions:r,get loc(){if(!i&&t){var r=e+function(e){try{A++;var n="";for(var t of e)if(!O.has(t)){O.add(t);var{loc:i}=t;i&&(n+=i.source.body)}return n}finally{0==--A&&O.clear()}}(n||[]);return{start:0,end:r.length,source:{body:r,name:"GraphQLTada",locationOffset:{line:1,column:1}}}}return i},set loc(e){i=e}}}return e.scalar=function(e,n){return n},e.persisted=function(e,n){return{kind:o,definitions:n?n.definitions:[],documentId:e}},e}function D(e){return 9===e||32===e}F();const k=/[\x00-\x1f\x22\x5c\x7f-\x9f]/g;function w(e){return P[e.charCodeAt(0)]}const P=["\\u0000","\\u0001","\\u0002","\\u0003","\\u0004","\\u0005","\\u0006","\\u0007","\\b","\\t","\\n","\\u000B","\\f","\\r","\\u000E","\\u000F","\\u0010","\\u0011","\\u0012","\\u0013","\\u0014","\\u0015","\\u0016","\\u0017","\\u0018","\\u0019","\\u001A","\\u001B","\\u001C","\\u001D","\\u001E","\\u001F","","",'\\"',"","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","\\\\","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","\\u007F","\\u0080","\\u0081","\\u0082","\\u0083","\\u0084","\\u0085","\\u0086","\\u0087","\\u0088","\\u0089","\\u008A","\\u008B","\\u008C","\\u008D","\\u008E","\\u008F","\\u0090","\\u0091","\\u0092","\\u0093","\\u0094","\\u0095","\\u0096","\\u0097","\\u0098","\\u0099","\\u009A","\\u009B","\\u009C","\\u009D","\\u009E","\\u009F"];function V(e,n){if(!Boolean(e))throw new Error(n)}function _(e){return j(e,[])}function j(e,n){switch(typeof e){case"string":return JSON.stringify(e);case"function":return e.name?`[function ${e.name}]`:"[function]";case"object":return function(e,n){if(null===e)return"null";if(n.includes(e))return"[Circular]";const t=[...n,e];if(function(e){return"function"==typeof e.toJSON}(e)){const n=e.toJSON();if(n!==e)return"string"==typeof n?n:j(n,t)}else if(Array.isArray(e))return function(e,n){if(0===e.length)return"[]";if(n.length>2)return"[Array]";const t=Math.min(10,e.length),i=e.length-t,r=[];for(let i=0;i<t;++i)r.push(j(e[i],n));return 1===i?r.push("... 1 more item"):i>1&&r.push(`... ${i} more items`),"["+r.join(", ")+"]"}(e,t);return function(e,n){const t=Object.entries(e);if(0===t.length)return"{}";if(n.length>2)return"["+function(e){const n=Object.prototype.toString.call(e).replace(/^\[object /,"").replace(/]$/,"");if("Object"===n&&"function"==typeof e.constructor){const n=e.constructor.name;if("string"==typeof n&&""!==n)return n}return n}(e)+"]";const i=t.map((([e,t])=>e+": "+j(t,n)));return"{ "+i.join(", ")+" }"}(e,t)}(e,n);default:return String(e)}}Symbol.toStringTag,Symbol.toStringTag;const q={Name:[],Document:["definitions"],OperationDefinition:["name","variableDefinitions","directives","selectionSet"],VariableDefinition:["variable","type","defaultValue","directives"],Variable:["name"],SelectionSet:["selections"],Field:["alias","name","arguments","directives","selectionSet"],Argument:["name","value"],FragmentSpread:["name","directives"],InlineFragment:["typeCondition","directives","selectionSet"],FragmentDefinition:["name","variableDefinitions","typeCondition","directives","selectionSet"],IntValue:[],FloatValue:[],StringValue:[],BooleanValue:[],NullValue:[],EnumValue:[],ListValue:["values"],ObjectValue:["fields"],ObjectField:["name","value"],Directive:["name","arguments"],NamedType:["name"],ListType:["type"],NonNullType:["type"],SchemaDefinition:["description","directives","operationTypes"],OperationTypeDefinition:["type"],ScalarTypeDefinition:["description","name","directives"],ObjectTypeDefinition:["description","name","interfaces","directives","fields"],FieldDefinition:["description","name","arguments","type","directives"],InputValueDefinition:["description","name","type","defaultValue","directives"],InterfaceTypeDefinition:["description","name","interfaces","directives","fields"],UnionTypeDefinition:["description","name","directives","types"],EnumTypeDefinition:["description","name","directives","values"],EnumValueDefinition:["description","name","directives"],InputObjectTypeDefinition:["description","name","directives","fields"],DirectiveDefinition:["description","name","arguments","locations"],SchemaExtension:["directives","operationTypes"],ScalarTypeExtension:["name","directives"],ObjectTypeExtension:["name","interfaces","directives","fields"],InterfaceTypeExtension:["name","interfaces","directives","fields"],UnionTypeExtension:["name","directives","types"],EnumTypeExtension:["name","directives","values"],InputObjectTypeExtension:["name","directives","fields"]},M=new Set(Object.keys(q));function U(e){const n=null==e?void 0:e.kind;return"string"==typeof n&&M.has(n)}var L,B,R;!function(e){e.QUERY="query",e.MUTATION="mutation",e.SUBSCRIPTION="subscription"}(L||(L={})),(R=B||(B={})).NAME="Name",R.DOCUMENT="Document",R.OPERATION_DEFINITION="OperationDefinition",R.VARIABLE_DEFINITION="VariableDefinition",R.SELECTION_SET="SelectionSet",R.FIELD="Field",R.ARGUMENT="Argument",R.FRAGMENT_SPREAD="FragmentSpread",R.INLINE_FRAGMENT="InlineFragment",R.FRAGMENT_DEFINITION="FragmentDefinition",R.VARIABLE="Variable",R.INT="IntValue",R.FLOAT="FloatValue",R.STRING="StringValue",R.BOOLEAN="BooleanValue",R.NULL="NullValue",R.ENUM="EnumValue",R.LIST="ListValue",R.OBJECT="ObjectValue",R.OBJECT_FIELD="ObjectField",R.DIRECTIVE="Directive",R.NAMED_TYPE="NamedType",R.LIST_TYPE="ListType",R.NON_NULL_TYPE="NonNullType",R.SCHEMA_DEFINITION="SchemaDefinition",R.OPERATION_TYPE_DEFINITION="OperationTypeDefinition",R.SCALAR_TYPE_DEFINITION="ScalarTypeDefinition",R.OBJECT_TYPE_DEFINITION="ObjectTypeDefinition",R.FIELD_DEFINITION="FieldDefinition",R.INPUT_VALUE_DEFINITION="InputValueDefinition",R.INTERFACE_TYPE_DEFINITION="InterfaceTypeDefinition",R.UNION_TYPE_DEFINITION="UnionTypeDefinition",R.ENUM_TYPE_DEFINITION="EnumTypeDefinition",R.ENUM_VALUE_DEFINITION="EnumValueDefinition",R.INPUT_OBJECT_TYPE_DEFINITION="InputObjectTypeDefinition",R.DIRECTIVE_DEFINITION="DirectiveDefinition",R.SCHEMA_EXTENSION="SchemaExtension",R.SCALAR_TYPE_EXTENSION="ScalarTypeExtension",R.OBJECT_TYPE_EXTENSION="ObjectTypeExtension",R.INTERFACE_TYPE_EXTENSION="InterfaceTypeExtension",R.UNION_TYPE_EXTENSION="UnionTypeExtension",R.ENUM_TYPE_EXTENSION="EnumTypeExtension",R.INPUT_OBJECT_TYPE_EXTENSION="InputObjectTypeExtension";const z=Object.freeze({});function K(e,n){const t=e[n];return"object"==typeof t?t:"function"==typeof t?{enter:t,leave:void 0}:{enter:e.enter,leave:e.leave}}const G={Name:{leave:e=>e.value},Variable:{leave:e=>"$"+e.name},Document:{leave:e=>Y(e.definitions,"\n\n")},OperationDefinition:{leave(e){const n=Q("(",Y(e.variableDefinitions,", "),")"),t=Y([e.operation,Y([e.name,n]),Y(e.directives," ")]," ");return("query"===t?"":t+" ")+e.selectionSet}},VariableDefinition:{leave:({variable:e,type:n,defaultValue:t,directives:i})=>e+": "+n+Q(" = ",t)+Q(" ",Y(i," "))},SelectionSet:{leave:({selections:e})=>J(e)},Field:{leave({alias:e,name:n,arguments:t,directives:i,selectionSet:r}){const a=Q("",e,": ")+n;let o=a+Q("(",Y(t,", "),")");return o.length>80&&(o=a+Q("(\n",H(Y(t,"\n")),"\n)")),Y([o,Y(i," "),r]," ")}},Argument:{leave:({name:e,value:n})=>e+": "+n},FragmentSpread:{leave:({name:e,directives:n})=>"..."+e+Q(" ",Y(n," "))},InlineFragment:{leave:({typeCondition:e,directives:n,selectionSet:t})=>Y(["...",Q("on ",e),Y(n," "),t]," ")},FragmentDefinition:{leave:({name:e,typeCondition:n,variableDefinitions:t,directives:i,selectionSet:r})=>`fragment ${e}${Q("(",Y(t,", "),")")} on ${n} ${Q("",Y(i," ")," ")}`+r},IntValue:{leave:({value:e})=>e},FloatValue:{leave:({value:e})=>e},StringValue:{leave:({value:e,block:n})=>n?function(e){const n=e.replace(/"""/g,'\\"""'),t=n.split(/\r\n|[\n\r]/g),i=1===t.length,r=t.length>1&&t.slice(1).every((e=>0===e.length||D(e.charCodeAt(0)))),a=n.endsWith('\\"""'),o=e.endsWith('"')&&!a,s=e.endsWith("\\"),c=o||s,u=!i||e.length>70||c||r||a;let l="";const d=i&&D(e.charCodeAt(0));return(u&&!d||r)&&(l+="\n"),l+=n,(u||c)&&(l+="\n"),'"""'+l+'"""'}(e):`"${e.replace(k,w)}"`},BooleanValue:{leave:({value:e})=>e?"true":"false"},NullValue:{leave:()=>"null"},EnumValue:{leave:({value:e})=>e},ListValue:{leave:({values:e})=>"["+Y(e,", ")+"]"},ObjectValue:{leave:({fields:e})=>"{"+Y(e,", ")+"}"},ObjectField:{leave:({name:e,value:n})=>e+": "+n},Directive:{leave:({name:e,arguments:n})=>"@"+e+Q("(",Y(n,", "),")")},NamedType:{leave:({name:e})=>e},ListType:{leave:({type:e})=>"["+e+"]"},NonNullType:{leave:({type:e})=>e+"!"},SchemaDefinition:{leave:({description:e,directives:n,operationTypes:t})=>Q("",e,"\n")+Y(["schema",Y(n," "),J(t)]," ")},OperationTypeDefinition:{leave:({operation:e,type:n})=>e+": "+n},ScalarTypeDefinition:{leave:({description:e,name:n,directives:t})=>Q("",e,"\n")+Y(["scalar",n,Y(t," ")]," ")},ObjectTypeDefinition:{leave:({description:e,name:n,interfaces:t,directives:i,fields:r})=>Q("",e,"\n")+Y(["type",n,Q("implements ",Y(t," & ")),Y(i," "),J(r)]," ")},FieldDefinition:{leave:({description:e,name:n,arguments:t,type:i,directives:r})=>Q("",e,"\n")+n+(W(t)?Q("(\n",H(Y(t,"\n")),"\n)"):Q("(",Y(t,", "),")"))+": "+i+Q(" ",Y(r," "))},InputValueDefinition:{leave:({description:e,name:n,type:t,defaultValue:i,directives:r})=>Q("",e,"\n")+Y([n+": "+t,Q("= ",i),Y(r," ")]," ")},InterfaceTypeDefinition:{leave:({description:e,name:n,interfaces:t,directives:i,fields:r})=>Q("",e,"\n")+Y(["interface",n,Q("implements ",Y(t," & ")),Y(i," "),J(r)]," ")},UnionTypeDefinition:{leave:({description:e,name:n,directives:t,types:i})=>Q("",e,"\n")+Y(["union",n,Y(t," "),Q("= ",Y(i," | "))]," ")},EnumTypeDefinition:{leave:({description:e,name:n,directives:t,values:i})=>Q("",e,"\n")+Y(["enum",n,Y(t," "),J(i)]," ")},EnumValueDefinition:{leave:({description:e,name:n,directives:t})=>Q("",e,"\n")+Y([n,Y(t," ")]," ")},InputObjectTypeDefinition:{leave:({description:e,name:n,directives:t,fields:i})=>Q("",e,"\n")+Y(["input",n,Y(t," "),J(i)]," ")},DirectiveDefinition:{leave:({description:e,name:n,arguments:t,repeatable:i,locations:r})=>Q("",e,"\n")+"directive @"+n+(W(t)?Q("(\n",H(Y(t,"\n")),"\n)"):Q("(",Y(t,", "),")"))+(i?" repeatable":"")+" on "+Y(r," | ")},SchemaExtension:{leave:({directives:e,operationTypes:n})=>Y(["extend schema",Y(e," "),J(n)]," ")},ScalarTypeExtension:{leave:({name:e,directives:n})=>Y(["extend scalar",e,Y(n," ")]," ")},ObjectTypeExtension:{leave:({name:e,interfaces:n,directives:t,fields:i})=>Y(["extend type",e,Q("implements ",Y(n," & ")),Y(t," "),J(i)]," ")},InterfaceTypeExtension:{leave:({name:e,interfaces:n,directives:t,fields:i})=>Y(["extend interface",e,Q("implements ",Y(n," & ")),Y(t," "),J(i)]," ")},UnionTypeExtension:{leave:({name:e,directives:n,types:t})=>Y(["extend union",e,Y(n," "),Q("= ",Y(t," | "))]," ")},EnumTypeExtension:{leave:({name:e,directives:n,values:t})=>Y(["extend enum",e,Y(n," "),J(t)]," ")},InputObjectTypeExtension:{leave:({name:e,directives:n,fields:t})=>Y(["extend input",e,Y(n," "),J(t)]," ")}};function Y(e,n=""){var t;return null!==(t=null==e?void 0:e.filter((e=>e)).join(n))&&void 0!==t?t:""}function J(e){return Q("{\n",H(Y(e,"\n")),"\n}")}function Q(e,n,t=""){return null!=n&&""!==n?e+n+t:""}function H(e){return Q("  ",e.replace(/\n/g,"\n  "))}function W(e){var n;return null!==(n=null==e?void 0:e.some((e=>e.includes("\n"))))&&void 0!==n&&n}const X=F();class Z{client;constructor(e,n){const t="live"===e.tradingMode?"4567":"6789",i=e.host.includes(t)?e.host:e.host.replace(/\/$/,`:${t}/`),r={Authorization:`Basic ${e.apiKey} ${e.apiSecret}`};"paper"===e.tradingMode&&(r["x-architect-account-mode"]="paper"),this.client=n({url:`${i}graphql`,headers:r})}parse(e){return X(e)}async execute(e,n){return new Promise(((t,i)=>{let r;var a;this.client.subscribe({query:(a=e,function(e,n,t=q){const i=new Map;for(const e of Object.values(B))i.set(e,K(n,e));let r,a,o,s=Array.isArray(e),c=[e],u=-1,l=[],d=e;const m=[],y=[];do{u++;const e=u===c.length,v=e&&0!==l.length;if(e){if(a=0===y.length?void 0:m[m.length-1],d=o,o=y.pop(),v)if(s){d=d.slice();let e=0;for(const[n,t]of l){const i=n-e;null===t?(d.splice(i,1),e++):d[i]=t}}else{d=Object.defineProperties({},Object.getOwnPropertyDescriptors(d));for(const[e,n]of l)d[e]=n}u=r.index,c=r.keys,l=r.edits,s=r.inArray,r=r.prev}else if(o){if(a=s?u:c[u],d=o[a],null==d)continue;m.push(a)}let g;if(!Array.isArray(d)){var p,f;U(d)||V(!1,`Invalid AST Node: ${_(d)}.`);const t=e?null===(p=i.get(d.kind))||void 0===p?void 0:p.leave:null===(f=i.get(d.kind))||void 0===f?void 0:f.enter;if(g=null==t?void 0:t.call(n,d,a,o,m,y),g===z)break;if(!1===g){if(!e){m.pop();continue}}else if(void 0!==g&&(l.push([a,g]),!e)){if(!U(g)){m.pop();continue}d=g}}var h;void 0===g&&v&&l.push([a,d]),e?m.pop():(r={inArray:s,index:u,keys:c,edits:l,prev:r},s=Array.isArray(d),c=s?d:null!==(h=t[d.kind])&&void 0!==h?h:[],u=-1,l=[],o&&y.push(o),o=d)}while(void 0!==r);return 0!==l.length?l[l.length-1][1]:e}(a,G)),variables:n},{next:e=>{r=e.data},error:e=>i(e),complete:()=>t(r)})}))}async debugAsUser(e){return this.execute(X("mutation DebugAsUser($user: String!) {\n        admin {\n          debugAsUser(user: $user)\n        }\n      }"),{user:e}).then((e=>e.admin.debugAsUser))}async stopDebuggingAsUser(){return this.execute(X("mutation StopDebuggingAsUser {\n        admin {\n          stopDebuggingAsUser\n        }\n      }")).then((e=>e.admin.stopDebuggingAsUser))}async marketdataVenues(){return this.execute(X("query MarketdataVenues {\n        config {\n          marketdataVenues\n        }\n      }")).then((e=>e.config.marketdataVenues))}async cmeProductGroupInfo(e,n){return this.execute(X(`query CmeProductGroupInfo($seriesSymbol: String!) {\n        exchangeSymbology {\n          cmeProductGroupInfo(seriesSymbol: $seriesSymbol) {\n            __typename ${e.join(" ")}\n          }\n        }\n      }`),{seriesSymbol:n}).then((e=>e.exchangeSymbology.cmeProductGroupInfo))}async cmeProductGroupInfos(e,n){return this.execute(X(`query CmeProductGroupInfos($seriesSymbols: [String!]) {\n        exchangeSymbology {\n          cmeProductGroupInfos(seriesSymbols: $seriesSymbols) {\n            __typename ${e.join(" ")}\n          }\n        }\n      }`),{seriesSymbols:n}).then((e=>e.exchangeSymbology.cmeProductGroupInfos))}async accountHistory(e,n){return this.execute(X(`query AccountHistory($account: String!, $fromInclusive: DateTime, $toExclusive: DateTime) {\n        folio {\n          accountHistory(account: $account, fromInclusive: $fromInclusive, toExclusive: $toExclusive) {\n            __typename\n            account\n            timestamp\n            balances {\n              product\n              balance\n            }\n            positions {\n              symbol\n              quantity\n              tradeTime\n              costBasis\n              breakEvenPrice\n              liquidationPrice\n            }\n            unrealizedPnl\n            realizedPnl\n            equity\n            yesterdayEquity\n            cashExcess\n            purchasingPower\n            totalMargin\n            positionMargin\n            ${e.join(" ")}\n          }\n        }\n      }`),n).then((e=>e.folio.accountHistory))}async accountSummaries(e,n,t){return this.execute(X(`query AccountSummaries($accounts: [String!], $trader: String) {\n        folio {\n          accountSummaries(accounts: $accounts, trader: $trader) {\n            __typename\n            account\n            timestamp\n            balances {\n              product\n              balance\n            }\n            positions {\n              symbol\n              quantity\n              tradeTime\n              costBasis\n              breakEvenPrice\n              liquidationPrice\n            }\n            unrealizedPnl\n            realizedPnl\n            equity\n            yesterdayEquity\n            cashExcess\n            purchasingPower\n            totalMargin\n            positionMargin\n            ${e.join(" ")}\n          }\n        }\n      }`),{accounts:n,trader:t}).then((e=>e.folio.accountSummaries))}async accountSummary(e,n){return this.execute(X(`query AccountSummary($account: String!) {\n        folio {\n          accountSummary(account: $account) {\n            __typename\n            account\n            timestamp\n            balances {\n              product\n              balance\n            }\n            positions {\n              symbol\n              quantity\n              tradeTime\n              costBasis\n              breakEvenPrice\n              liquidationPrice\n            }\n            unrealizedPnl\n            realizedPnl\n            equity\n            yesterdayEquity\n            cashExcess\n            purchasingPower\n            totalMargin\n            positionMargin\n            ${e.join(" ")}\n          }\n        }\n      }`),{account:n}).then((e=>e.folio.accountSummary))}async historicalFills(e,n){return this.execute(X(`query HistoricalFills($account: String, $fromInclusive: DateTime, $limit: Int, $orderId: OrderId, $toExclusive: DateTime, $trader: String, $venue: ExecutionVenue) {\n        folio {\n          historicalFills(account: $account, fromInclusive: $fromInclusive, limit: $limit, orderId: $orderId, toExclusive: $toExclusive, trader: $trader, venue: $venue) {\n            __typename\n            fills {\n              fillId\n              fillKind\n              executionVenue\n              exchangeFillId\n              orderId\n              trader\n              account\n              symbol\n              dir\n              quantity\n              price\n              recvTime\n              tradeTime\n            } aberrantFills {\n              fillId\n              fillKind\n              executionVenue\n              exchangeFillId\n              orderId\n              trader\n              account\n              symbol\n              dir\n              quantity\n              price\n              recvTime\n              tradeTime\n            }\n            ${e.join(" ")}\n          }\n        }\n      }`),n).then((e=>e.folio.historicalFills))}async historicalOrders(e,n){return this.execute(X(`query HistoricalOrders($account: String, $fromInclusive: DateTime, $limit: Int, $orderIds: [OrderId!], $parentOrderId: OrderId, $toExclusive: DateTime, $trader: String, $venue: ExecutionVenue) {\n        folio {\n          historicalOrders(account: $account, fromInclusive: $fromInclusive, limit: $limit, orderIds: $orderIds, parentOrderId: $parentOrderId, toExclusive: $toExclusive, trader: $trader, venue: $venue) {\n            __typename\n            id\n            parentId\n            recvTime\n            status\n            rejectReason\n            rejectMessage\n            symbol\n            trader\n            account\n            dir\n            quantity\n            filledQuantity\n            averageFillPrice\n            orderType\n            limitPrice\n            postOnly\n            triggerPrice\n            timeInForce\n            goodTilDate\n            source\n            executionVenue\n            ${e.join(" ")}\n          }\n        }\n      }`),n).then((e=>e.folio.historicalOrders))}async historicalCandles(e,n){return this.execute(X(`query HistoricalCandles($venue: MarketdataVenue!, $symbol: String!, $start: DateTime!, $end: DateTime!, $candleWidth: CandleWidth!) {\n        marketdata {\n          historicalCandles(venue: $venue, symbol: $symbol, start: $start, end: $end, candleWidth: $candleWidth) {\n            __typename\n            timestamp\n            width\n            open\n            high\n            low\n            close\n            volume\n            ${e.join(" ")}\n          }\n        }\n      }`),n).then((e=>e.marketdata.historicalCandles))}async l2BookSnapshot(e,n,t){return this.execute(X(`query L2BookSnapshot($symbol: String!, $venue: MarketdataVenue) {\n        marketdata {\n          l2BookSnapshot(symbol: $symbol, venue: $venue) {\n            __typename\n            timestamp\n            bids {\n              price\n              size\n            }\n            asks {\n              price\n              size\n            }\n            ${e.join(" ")}\n          }\n        }\n      }`),{symbol:n,venue:t}).then((e=>e.marketdata.l2BookSnapshot))}async marketStatus(e,n,t){return this.execute(X(`query MarketStatus($symbol: String!, $venue: MarketdataVenue) {\n        marketdata {\n          marketStatus(symbol: $symbol, venue: $venue) {\n            __typename\n            symbol\n            isTrading\n            isQuoting\n            ${e.join(" ")}\n          }\n        }\n      }`),{symbol:n,venue:t}).then((e=>e.marketdata.marketStatus))}async ticker(e,n,t){return this.execute(X(`query Ticker($symbol: String!, $venue: MarketdataVenue) {\n        marketdata {\n          ticker(symbol: $symbol, venue: $venue) {\n            __typename\n            symbol\n            timestamp\n            bidPrice\n            bidSize\n            askPrice\n            askSize\n            lastPrice\n            lastSize\n            ${e.join(" ")}\n          }\n        }\n      }`),{symbol:n,venue:t}).then((e=>e.marketdata.ticker))}async tickers(e,n){return this.execute(X(`query Tickers($venue: MarketdataVenue!, $limit: Int, $offset: Int, $sortBy: SortTickersBy, $symbols: [String!]) {\n        marketdata {\n          tickers(venue: $venue, limit: $limit, offset: $offset, sortBy: $sortBy, symbols: $symbols) {\n            __typename\n            symbol\n            timestamp\n            bidPrice\n            bidSize\n            askPrice\n            askSize\n            lastPrice\n            lastSize\n            ${e.join(" ")}\n          }\n        }\n      }`),n).then((e=>e.marketdata.tickers))}async cancelAllOrders(e){return this.execute(X("mutation CancelAllOrders($account: String, $executionVenue: String, $trader: String) {\n        oms {\n          cancelAllOrders(account: $account, executionVenue: $executionVenue, trader: $trader)\n        }\n      }"),e).then((e=>e.oms.cancelAllOrders))}async cancelOrder(e,n){return this.execute(X(`mutation CancelOrder($orderId: OrderId!) {\n        oms {\n          cancelOrder(orderId: $orderId) {\n            __typename\n            cancelId\n            orderId\n            recvTime\n            status\n            rejectReason\n            ${e.join(" ")}\n          }\n        }\n      }`),{orderId:n}).then((e=>e.oms.cancelOrder))}async placeOrder(e,n){return this.execute(X(`mutation PlaceOrder($timeInForce: TimeInForce!, $symbol: String!, $quantity: Decimal!, $orderType: OrderType!, $dir: Dir!, $account: String, $executionVenue: ExecutionVenue, $goodTilDate: DateTime, $id: OrderId, $limitPrice: Decimal, $postOnly: Boolean, $trader: String, $triggerPrice: Decimal) {\n        oms {\n          placeOrder(timeInForce: $timeInForce, symbol: $symbol, quantity: $quantity, orderType: $orderType, dir: $dir, account: $account, executionVenue: $executionVenue, goodTilDate: $goodTilDate, id: $id, limitPrice: $limitPrice, postOnly: $postOnly, trader: $trader, triggerPrice: $triggerPrice) {\n            __typename\n            id\n            parentId\n            recvTime\n            status\n            rejectReason\n            rejectMessage\n            symbol\n            trader\n            account\n            dir\n            quantity\n            filledQuantity\n            averageFillPrice\n            orderType\n            limitPrice\n            postOnly\n            triggerPrice\n            timeInForce\n            goodTilDate\n            source\n            executionVenue\n            ${e.join(" ")}\n          }\n        }\n      }`),n).then((e=>e.oms.placeOrder))}async openOrders(e,n){return this.execute(X(`query OpenOrders($account: String, $orderIds: [OrderId!], $parentOrderId: OrderId, $symbol: String, $trader: String, $venue: ExecutionVenue) {\n        oms {\n          openOrders(account: $account, orderIds: $orderIds, parentOrderId: $parentOrderId, symbol: $symbol, trader: $trader, venue: $venue) {\n            __typename\n            id\n            parentId\n            recvTime\n            status\n            rejectReason\n            rejectMessage\n            symbol\n            trader\n            account\n            dir\n            quantity\n            filledQuantity\n            averageFillPrice\n            orderType\n            limitPrice\n            postOnly\n            triggerPrice\n            timeInForce\n            goodTilDate\n            source\n            executionVenue\n            ${e.join(" ")}\n          }\n        }\n      }`),n).then((e=>e.oms.openOrders))}async pendingCancels(e,n){return this.execute(X(`query PendingCancels($account: String, $cancelIds: [Uuid!], $symbol: String, $trader: String, $venue: ExecutionVenue) {\n        oms {\n          pendingCancels(account: $account, cancelIds: $cancelIds, symbol: $symbol, trader: $trader, venue: $venue) {\n            __typename ${e.join(" ")}\n          }\n        }\n      }`),n).then((e=>e.oms.pendingCancels))}async version(){return this.execute(X("query Version {\nversion\n      }")).then((e=>e.version))}async exchangeSymbology(e){return this.execute(X(`query ExchangeSymbology {\n        symbology {\n          exchangeSymbology {\n            __typename ${e.join(" ")}\n          }\n        }\n      }`)).then((e=>e.symbology.exchangeSymbology))}async executionInfo(e,n,t){return this.execute(X(`query ExecutionInfo($symbol: TradableProduct!, $executionVenue: ExecutionVenue!) {\n        symbology {\n          executionInfo(symbol: $symbol, executionVenue: $executionVenue) {\n            __typename\n            symbol\n            executionVenue\n            tickSize\n            stepSize\n            minOrderQuantity\n            minOrderQuantityUnit\n            isDelisted\n            initialMargin\n            maintenanceMargin\n            ${e.join(" ")}\n          }\n        }\n      }`),{symbol:n,executionVenue:t}).then((e=>e.symbology.executionInfo))}async executionInfos(e,n,t){return this.execute(X(`query ExecutionInfos($executionVenue: ExecutionVenue, $symbols: [TradableProduct!]) {\n        symbology {\n          executionInfos(executionVenue: $executionVenue, symbols: $symbols) {\n            __typename\n            symbol\n            executionVenue\n            tickSize\n            stepSize\n            minOrderQuantity\n            minOrderQuantityUnit\n            isDelisted\n            initialMargin\n            maintenanceMargin\n            ${e.join(" ")}\n          }\n        }\n      }`),{executionVenue:n,symbols:t}).then((e=>e.symbology.executionInfos))}async futuresSeries(e){return this.execute(X("query FuturesSeries($seriesSymbol: String!) {\n        symbology {\n          futuresSeries(seriesSymbol: $seriesSymbol)\n        }\n      }"),{seriesSymbol:e}).then((e=>e.symbology.futuresSeries))}async productInfo(e,n){return this.execute(X(`query ProductInfo($symbol: String!) {\n        symbology {\n          productInfo(symbol: $symbol) {\n            __typename\n            __typename\n            symbol\n            productType\n            underlying\n            multiplier\n            derivativeKind\n            firstNoticeDate\n            primaryVenue\n            priceDisplayFormat\n            spreadLegs {\n              product\n              quantity\n            }\n            ${e.join(" ")}\n          }\n        }\n      }`),{symbol:n}).then((e=>e.symbology.productInfo))}async productInfos(e,n){return this.execute(X(`query ProductInfos($symbols: [String!]) {\n        symbology {\n          productInfos(symbols: $symbols) {\n            __typename\n            __typename\n            symbol\n            productType\n            underlying\n            multiplier\n            derivativeKind\n            firstNoticeDate\n            primaryVenue\n            priceDisplayFormat\n            spreadLegs {\n              product\n              quantity\n            }\n            ${e.join(" ")}\n          }\n        }\n      }`),{symbols:n}).then((e=>e.symbology.productInfos))}async searchSymbols(e){return this.execute(X("query SearchSymbols($executionVenue: ExecutionVenue, $limit: Int, $offset: Int, $searchString: String) {\n        symbology {\n          searchSymbols(executionVenue: $executionVenue, limit: $limit, offset: $offset, searchString: $searchString)\n        }\n      }"),e).then((e=>e.symbology.searchSymbols))}async createApiKey(e){return this.execute(X(`mutation CreateApiKey {\n        user {\n          createApiKey {\n            __typename ${e.join(" ")}\n          }\n        }\n      }`)).then((e=>e.user.createApiKey))}async createJwt(){return this.execute(X("mutation CreateJwt {\n        user {\n          createJwt\n        }\n      }")).then((e=>e.user.createJwt))}async enablePaperTrading(){return this.execute(X("mutation EnablePaperTrading {\n        user {\n          enablePaperTrading\n        }\n      }")).then((e=>e.user.enablePaperTrading))}async removeApiKey(e){return this.execute(X("mutation RemoveApiKey($apiKey: String!) {\n        user {\n          removeApiKey(apiKey: $apiKey)\n        }\n      }"),{apiKey:e}).then((e=>e.user.removeApiKey))}async account(e,n,t){return this.execute(X(`query Account($id: Uuid, $name: AccountName) {\n        user {\n          account(id: $id, name: $name) {\n            __typename\n            account {\n              id\n              name\n            }\n            trader\n            permissions {\n              list\n              view\n              trade\n              reduceOrClose\n              setLimits\n            }\n            ${e.join(" ")}\n          }\n        }\n      }`),{id:n,name:t}).then((e=>e.user.account))}async accounts(e){return this.execute(X(`query Accounts {\n        user {\n          accounts {\n            __typename\n            account {\n              id\n              name\n            }\n            trader\n            permissions {\n              list\n              view\n              trade\n              reduceOrClose\n              setLimits\n            }\n            ${e.join(" ")}\n          }\n        }\n      }`)).then((e=>e.user.accounts))}async apiKeys(e){return this.execute(X(`query ApiKeys {\n        user {\n          apiKeys {\n            __typename ${e.join(" ")}\n          }\n        }\n      }`)).then((e=>e.user.apiKeys))}async canDebugAsUser(){return this.execute(X("query CanDebugAsUser {\n        user {\n          canDebugAsUser\n        }\n      }")).then((e=>e.user.canDebugAsUser))}async debuggingAsUser(){return this.execute(X("query DebuggingAsUser {\n        user {\n          debuggingAsUser\n        }\n      }")).then((e=>e.user.debuggingAsUser))}async userEmail(){return this.execute(X("query UserEmail {\n        user {\n          userEmail\n        }\n      }")).then((e=>e.user.userEmail))}async userId(){return this.execute(X("query UserId {\n        user {\n          userId\n        }\n      }")).then((e=>e.user.userId))}}let ee={host:"https://app.architect.co/",apiKey:"",apiSecret:"",tradingMode:"live"};async function ne(e){if("undefined"!=typeof Office&&Office.context&&"undefined"!=typeof OfficeRuntime&&OfficeRuntime.storage)return await OfficeRuntime.storage.getItem(e);if("undefined"==typeof localStorage)throw new Error("No available storage method to retrieve data.");try{const n=Office?.context?.partitionKey,t=n?`${n}${e}`:e;return localStorage.getItem(t)}catch(e){throw console.error("Failed to get item from localStorage:",e),e}}let te=new Proxy({},{get(e,n){throw new Error("Client is not initialized")},set(e,n,t){throw new Error("Client is not initialized")}});async function ie(){let e,n;try{e=await ne("ArchitectApiKey"),n=await ne("ArchitectApiSecret")}catch(t){console.log("Error accessing storage."),e=null,n=null}if(!e)throw new CustomFunctions.Error(CustomFunctions.ErrorCode.invalidValue,"api_key has not been input");if(!n)throw new CustomFunctions.Error(CustomFunctions.ErrorCode.invalidValue,"api_secret has not been input");ee.apiKey=e,ee.apiSecret=n,te=function(e){return new Z(e,t)}(ee);try{return await te.userEmail()}catch(e){return"Client failed to initialize. Please check your API key and secret."}}async function re(e,n){let t=await te.ticker([],e,n);if(!t)throw new CustomFunctions.Error(CustomFunctions.ErrorCode.notAvailable,"Received bad data from the server, please try again.");try{console.log(t),console.log(t.bidPrice,t.askPrice,t.lastPrice);const e=t.bidPrice?parseFloat(t.bidPrice):NaN;return[[e,t.askPrice?parseFloat(t.askPrice):NaN,t.lastPrice?parseFloat(t.lastPrice):NaN]]}catch(e){throw new CustomFunctions.Error(CustomFunctions.ErrorCode.invalidValue,"Failed to parse bid/ask prices")}}async function ae(e,n){let t=await re(e,n),i=t[0][1],r=t[0][0];return isNaN(r)||isNaN(i)?NaN:(r+i)/2}async function oe(e,n){let t=await te.ticker([],e,n);if(!t)throw new CustomFunctions.Error(CustomFunctions.ErrorCode.notAvailable,"Received bad data from the server, please try again.");try{const e=t.bidPrice?parseFloat(t.bidPrice):NaN,n=t.bidSize?parseFloat(t.bidSize):NaN,i=t.askPrice?parseFloat(t.askPrice):NaN,r=t.askSize?parseFloat(t.askSize):NaN;return[[e,n,i,r,t.lastPrice?parseFloat(t.lastPrice):NaN,t.lastSize?parseFloat(t.lastSize):NaN]]}catch(e){throw new CustomFunctions.Error(CustomFunctions.ErrorCode.invalidValue,"Failed to parse bid/ask prices")}}async function se(e){const n=await te.accounts([]);if(!n)throw new CustomFunctions.Error(CustomFunctions.ErrorCode.notAvailable,"Received bad data from the server, please try again.");const t=[];e&&t.push(["Account Name","Trader","Trade Permission","View Permission"]),n.forEach((e=>{t.push([e.account.name,e.trader,e.permissions.trade.toString(),e.permissions.view.toString()])}));try{return t}catch(e){throw new CustomFunctions.Error(CustomFunctions.ErrorCode.invalidValue,"Failed to parse account data")}}async function ce(e){let n=await te.accountSummary([],e);if(!n)throw new CustomFunctions.Error(CustomFunctions.ErrorCode.notAvailable,"Received bad data from the server, please try again.");let t=new Date(n.timestamp).toLocaleString(),i=[],r=[],a=[],o=[],s=[],c=[];n.positions.forEach((e=>{i.push(e.breakEvenPrice??"NaN"),r.push(e.costBasis??"NaN"),a.push(e.liquidationPrice??"NaN"),o.push(e.symbol),s.push(e.quantity),c.push(e.tradeTime?new Date(e.tradeTime).toLocaleString():"")}));try{return[[t],i,r,a,o,s,c]}catch(e){throw new CustomFunctions.Error(CustomFunctions.ErrorCode.invalidValue,"Failed to parse account summary snapshot")}}async function ue(e){let n=await te.accountSummary([],e);if(!n)throw new CustomFunctions.Error(CustomFunctions.ErrorCode.notAvailable,"Received bad data from the server, please try again.");let t=n.cashExcess?parseFloat(n.cashExcess):NaN,i=n.equity?parseFloat(n.equity):NaN,r=n.positionMargin?parseFloat(n.positionMargin):NaN,a=n.purchasingPower?parseFloat(n.purchasingPower):NaN,o=n.realizedPnl?parseFloat(n.realizedPnl):NaN,s=n.unrealizedPnl?parseFloat(n.unrealizedPnl):NaN,c=n.totalMargin?parseFloat(n.totalMargin):NaN,u=n.yesterdayEquity?parseFloat(n.yesterdayEquity):NaN;try{return[[t,i,r,a,o,s,c,u]]}catch(e){throw new CustomFunctions.Error(CustomFunctions.ErrorCode.invalidValue,"Failed to parse account summary snapshot")}}async function le(e){let n=await te.accountSummary([],e);if(!n)throw new CustomFunctions.Error(CustomFunctions.ErrorCode.notAvailable,"Received bad data from the server, please try again.");let t=[],i=[];n.balances.forEach((e=>{t.push(e.product),i.push(e.balance)}));try{return[t,i]}catch(e){throw new CustomFunctions.Error(CustomFunctions.ErrorCode.invalidValue,"Failed to parse account summary snapshot")}}async function de(e){return(await te.searchSymbols({searchString:e})).map((e=>[e]))}return Office.onReady((async e=>{if(e.host===Office.HostType.Excel)try{await ie(),console.log("Client initialized using saved API key/secret")}catch(e){console.log(e)}})),CustomFunctions.associate("INITIALIZECLIENT",ie),CustomFunctions.associate("GETMARKETBBO",re),CustomFunctions.associate("GETMARKETMID",ae),CustomFunctions.associate("GETTICKER",oe),CustomFunctions.associate("GETACCOUNTS",se),CustomFunctions.associate("GETPOSITIONS",ce),CustomFunctions.associate("GETPNL",ue),CustomFunctions.associate("GETACCOUNTBALANCE",le),CustomFunctions.associate("SEARCHSYMBOLS",de),n})()));