(()=>{"use strict";var e={854:(e,n,t)=>{t.d(n,{kV:()=>Z});var r,i,a=t(581),o="Document",d="FragmentDefinition";class s extends Error{constructor(e,n,t,r,i,a,o){super(e),this.name="GraphQLError",this.message=e,i&&(this.path=i),n&&(this.nodes=Array.isArray(n)?n:[n]),t&&(this.source=t),r&&(this.positions=r),a&&(this.originalError=a);var d=o;if(!d&&a){var s=a.extensions;s&&"object"==typeof s&&(d=s)}this.extensions=d||{}}toJSON(){return{...this,message:this.message}}toString(){return this.message}get[Symbol.toStringTag](){return"GraphQLError"}}function u(e){return new s(`Syntax Error: Unexpected token at ${i} in ${e}`)}function c(e){if(e.lastIndex=i,e.test(r))return r.slice(i,i=e.lastIndex)}var l=/ +(?=[^\s])/y;function m(e){for(var n=e.split("\n"),t="",r=0,i=0,a=n.length-1,o=0;o<n.length;o++)l.lastIndex=0,l.test(n[o])&&(o&&(!r||l.lastIndex<r)&&(r=l.lastIndex),i=i||o,a=o);for(var d=i;d<=a;d++)d!==i&&(t+="\n"),t+=n[d].slice(r).replace(/\\"""/g,'"""');return t}function p(){for(var e=0|r.charCodeAt(i++);9===e||10===e||13===e||32===e||35===e||44===e||65279===e;e=0|r.charCodeAt(i++))if(35===e)for(;10!==(e=r.charCodeAt(i++))&&13!==e;);i--}var y,f=/[_A-Za-z]\w*/y,v=new RegExp("(?:(null|true|false)|\\$("+f.source+')|(-?\\d+)((?:\\.\\d+)?[eE][+-]?\\d+|\\.\\d+)?|("""(?:"""|(?:[\\s\\S]*?[^\\\\])"""))|("(?:"|[^\\r\\n]*?[^\\\\]"))|('+f.source+"))","y"),h=((y=h||{})[y.Const=1]="Const",y[y.Var=2]="Var",y[y.Int=3]="Int",y[y.Float=4]="Float",y[y.BlockString=5]="BlockString",y[y.String=6]="String",y[y.Enum=7]="Enum",y),I=/\\/;function g(e){var n,t;if(v.lastIndex=i,91===r.charCodeAt(i)){i++,p();for(var a=[];93!==r.charCodeAt(i);)a.push(g(e));return i++,p(),{kind:"ListValue",values:a}}if(123===r.charCodeAt(i)){i++,p();for(var o=[];125!==r.charCodeAt(i);){if(null==(n=c(f)))throw u("ObjectField");if(p(),58!==r.charCodeAt(i++))throw u("ObjectField");p(),o.push({kind:"ObjectField",name:{kind:"Name",value:n},value:g(e)})}return i++,p(),{kind:"ObjectValue",fields:o}}if(null!=(t=v.exec(r))){if(i=v.lastIndex,p(),null!=(n=t[h.Const]))return"null"===n?{kind:"NullValue"}:{kind:"BooleanValue",value:"true"===n};if(null!=(n=t[h.Var])){if(e)throw u("Variable");return{kind:"Variable",name:{kind:"Name",value:n}}}var d;if(null!=(n=t[h.Int]))return null!=(d=t[h.Float])?{kind:"FloatValue",value:n+d}:{kind:"IntValue",value:n};if(null!=(n=t[h.BlockString]))return{kind:"StringValue",value:m(n.slice(3,-3)),block:!0};if(null!=(n=t[h.String]))return{kind:"StringValue",value:I.test(n)?JSON.parse(n):n.slice(1,-1),block:!1};if(null!=(n=t[h.Enum]))return{kind:"EnumValue",value:n}}throw u("Value")}function O(e){if(40===r.charCodeAt(i)){var n,t=[];i++,p();do{if(null==(n=c(f)))throw u("Argument");if(p(),58!==r.charCodeAt(i++))throw u("Argument");p(),t.push({kind:"Argument",name:{kind:"Name",value:n},value:g(e)})}while(41!==r.charCodeAt(i));return i++,p(),t}}function _(e){if(64===r.charCodeAt(i)){var n,t=[];do{if(i++,null==(n=c(f)))throw u("Directive");p(),t.push({kind:"Directive",name:{kind:"Name",value:n},arguments:O(e)})}while(64===r.charCodeAt(i));return t}}function T(){for(var e,n=0;91===r.charCodeAt(i);)n++,i++,p();if(null==(e=c(f)))throw u("NamedType");p();var t={kind:"NamedType",name:{kind:"Name",value:e}};do{if(33===r.charCodeAt(i)&&(i++,p(),t={kind:"NonNullType",type:t}),n){if(93!==r.charCodeAt(i++))throw u("NamedType");p(),t={kind:"ListType",type:t}}}while(n--);return t}var S=new RegExp("(?:(\\.{3})|("+f.source+"))","y"),k=function(e){return e[e.Spread=1]="Spread",e[e.Name=2]="Name",e}(k||{});function E(){var e,n,t=[];do{if(S.lastIndex=i,null==(n=S.exec(r)))throw u("SelectionSet");if(i=S.lastIndex,null!=n[k.Spread]){p();var a=c(f);if(null!=a&&"on"!==a)p(),t.push({kind:"FragmentSpread",name:{kind:"Name",value:a},directives:_(!1)});else{if(p(),"on"===a){if(null==(a=c(f)))throw u("NamedType");p()}var o=_(!1);if(123!==r.charCodeAt(i++))throw u("InlineFragment");p(),t.push({kind:"InlineFragment",typeCondition:a?{kind:"NamedType",name:{kind:"Name",value:a}}:void 0,directives:o,selectionSet:E()})}}else if(null!=(e=n[k.Name])){var d=void 0;if(p(),58===r.charCodeAt(i)){if(i++,p(),d=e,null==(e=c(f)))throw u("Field");p()}var s=O(!1);p();var l=_(!1),m=void 0;123===r.charCodeAt(i)&&(i++,p(),m=E()),t.push({kind:"Field",alias:d?{kind:"Name",value:d}:void 0,name:{kind:"Name",value:e},arguments:s,directives:l,selectionSet:m})}}while(125!==r.charCodeAt(i));return i++,p(),{kind:"SelectionSet",selections:t}}function A(){var e,n;if(null==(e=c(f)))throw u("FragmentDefinition");if(p(),"on"!==c(f))throw u("FragmentDefinition");if(p(),null==(n=c(f)))throw u("FragmentDefinition");p();var t=_(!1);if(123!==r.charCodeAt(i++))throw u("FragmentDefinition");return p(),{kind:"FragmentDefinition",name:{kind:"Name",value:e},typeCondition:{kind:"NamedType",name:{kind:"Name",value:n}},directives:t,selectionSet:E()}}var $=/(?:query|mutation|subscription|fragment)/y;function x(e){var n,t,a;if(e&&(p(),n=c(f),t=function(){if(p(),40===r.charCodeAt(i)){var e,n=[];i++,p();do{if(36!==r.charCodeAt(i++))throw u("Variable");if(null==(e=c(f)))throw u("Variable");if(p(),58!==r.charCodeAt(i++))throw u("VariableDefinition");p();var t=T(),a=void 0;61===r.charCodeAt(i)&&(i++,p(),a=g(!0)),p(),n.push({kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:e}},type:t,defaultValue:a,directives:_(!0)})}while(41!==r.charCodeAt(i));return i++,p(),n}}(),a=_(!1)),123===r.charCodeAt(i))return i++,p(),{kind:"OperationDefinition",operation:e||"query",name:n?{kind:"Name",value:n}:void 0,variableDefinitions:t,directives:a,selectionSet:E()}}function N(e,n){return i=0,function(e,n){var t,r;p();var a,o=[];do{if("fragment"===(t=c($)))p(),o.push(A());else{if(null==(r=x(t)))throw u("Document");o.push(r)}}while(i<e.length);return n?{kind:"Document",definitions:o}:{kind:"Document",definitions:o,set loc(e){a=e},get loc(){return a||(a={start:0,end:e.length,startToken:void 0,endToken:void 0,source:{body:e,name:"graphql.web",locationOffset:{line:1,column:1}}}),a}}}(r="string"==typeof e.body?e.body:e,n&&n.noLocation)}var P=0,b=new Set;function C(){function e(e,n){var t,r,i=N(e).definitions,a=new Set;for(var s of n||[])for(var u of s.definitions)u.kind!==d||a.has(u)||(i.push(u),a.add(u));return(t=i[0].kind===d)&&i[0].directives&&(i[0].directives=i[0].directives.filter((e=>"_unmask"!==e.name.value))),{kind:o,definitions:i,get loc(){if(!r&&t){var i=e+function(e){try{P++;var n="";for(var t of e)if(!b.has(t)){b.add(t);var{loc:r}=t;r&&(n+=r.source.body)}return n}finally{0==--P&&b.clear()}}(n||[]);return{start:0,end:i.length,source:{body:i,name:"GraphQLTada",locationOffset:{line:1,column:1}}}}return r},set loc(e){r=e}}}return e.scalar=function(e,n){return n},e.persisted=function(e,n){return{kind:o,definitions:n?n.definitions:[],documentId:e}},e}C();var D=t(770);const F=C();class w{client;constructor(e,n){const t="live"===e.tradingMode?"4567":"6789",r=e.host.includes(t)?e.host:e.host.replace(/\/$/,`:${t}/`),i={Authorization:`Basic ${e.apiKey} ${e.apiSecret}`};"paper"===e.tradingMode&&(i["x-architect-account-mode"]="paper"),this.client=n({url:`${r}graphql`,headers:i})}parse(e){return F(e)}async execute(e,n){return new Promise(((t,r)=>{let i;this.client.subscribe({query:(0,D.y)(e),variables:n},{next:e=>{i=e.data},error:e=>r(e),complete:()=>t(i)})}))}async accountSummaries(e){return this.execute(F(`query AccountSummaries {\n        accountSummaries {\n          __typename\n          snapshotTs\n          byAccount {\n            account {\n              id\n              name\n            }\n            balances {\n              product {\n                __typename\n                id\n                name\n                kind\n                markUsd\n              }\n              account {\n                id\n                name\n              }\n              venue {\n                id\n                name\n              }\n              amount\n              totalMargin\n              positionMargin\n              purchasingPower\n              cashExcess\n              yesterdayBalance\n            }\n            positions {\n              account {\n                id\n                name\n              }\n              venue {\n                id\n                name\n              }\n              market {\n                __typename\n                venue {\n                  id\n                  name\n                }\n                exchangeSymbol\n                id\n                cmeProductGroupInfo {\n                  productName\n                  securityType\n                  category\n                  subCategory\n                  mainFraction\n                }\n                kind {\n                  ... on ExchangeMarketKind {\n                    __typename\n                    base {\n                      __typename\n                      id\n                      name\n                      kind\n                      markUsd\n                    }\n                    quote {\n                      __typename\n                      id\n                      name\n                      kind\n                      markUsd\n                    }\n                  }\n                  ... on PoolMarketKind {\n                    __typename\n                    products {\n                      __typename\n                      id\n                      name\n                      kind\n                      markUsd\n                    }\n                  }\n                }\n                name\n                tickSize\n                stepSize\n                minOrderQuantity\n                minOrderQuantityUnit\n                route {\n                  id\n                  name\n                }\n                isFavorite\n              }\n              dir\n              quantity\n              averagePrice\n              tradeDate\n              tradeTime\n            }\n          }\n          ${e.join(" ")}\n        }\n      }`)).then((e=>e.accountSummaries))}async accountSummariesForCpty(e,n,t){return this.execute(F(`query AccountSummariesForCpty($venue: VenueId!, $route: RouteId!) {\n        accountSummariesForCpty(venue: $venue, route: $route) {\n          __typename\n          snapshotTs\n          byAccount {\n            account {\n              id\n              name\n            }\n            balances {\n              product {\n                __typename\n                id\n                name\n                kind\n                markUsd\n              }\n              account {\n                id\n                name\n              }\n              venue {\n                id\n                name\n              }\n              amount\n              totalMargin\n              positionMargin\n              purchasingPower\n              cashExcess\n              yesterdayBalance\n            }\n            positions {\n              account {\n                id\n                name\n              }\n              venue {\n                id\n                name\n              }\n              market {\n                __typename\n                venue {\n                  id\n                  name\n                }\n                exchangeSymbol\n                id\n                cmeProductGroupInfo {\n                  productName\n                  securityType\n                  category\n                  subCategory\n                  mainFraction\n                }\n                kind {\n                  ... on ExchangeMarketKind {\n                    __typename\n                    base {\n                      __typename\n                      id\n                      name\n                      kind\n                      markUsd\n                    }\n                    quote {\n                      __typename\n                      id\n                      name\n                      kind\n                      markUsd\n                    }\n                  }\n                  ... on PoolMarketKind {\n                    __typename\n                    products {\n                      __typename\n                      id\n                      name\n                      kind\n                      markUsd\n                    }\n                  }\n                }\n                name\n                tickSize\n                stepSize\n                minOrderQuantity\n                minOrderQuantityUnit\n                route {\n                  id\n                  name\n                }\n                isFavorite\n              }\n              dir\n              quantity\n              averagePrice\n              tradeDate\n              tradeTime\n            }\n          }\n          ${e.join(" ")}\n        }\n      }`),{venue:n,route:t}).then((e=>e.accountSummariesForCpty))}async accounts(e){return this.execute(F(`query Accounts {\n        accounts {\n          __typename\n          id\n          name\n          ${e.join(" ")}\n        }\n      }`)).then((e=>e.accounts))}async algoLog(e,n){return this.execute(F(`query AlgoLog($orderId: OrderId!) {\n        algoLog(orderId: $orderId) { __typename ${e.join(" ")} }\n      }`),{orderId:n}).then((e=>e.algoLog))}async algoOrder(e,n){return this.execute(F(`query AlgoOrder($orderId: OrderId!) {\n        algoOrder(orderId: $orderId) {\n          __typename\n          orderId\n          trader\n          account\n          algo\n          parentOrderId\n          markets\n          ${e.join(" ")}\n        }\n      }`),{orderId:n}).then((e=>e.algoOrder))}async algoStatus(e,n){return this.execute(F(`query AlgoStatus($orderId: OrderId) {\n        algoStatus(orderId: $orderId) {\n          __typename\n          orderId\n          order {\n            orderId\n            trader\n            account\n            algo\n            parentOrderId\n            markets\n          }\n          creationTime\n          status\n          lastStatusChange\n          fractionComplete\n          ${e.join(" ")}\n        }\n      }`),{orderId:n}).then((e=>e.algoStatus))}async bookSnapshot(e,n,t,r,i,a){return this.execute(F(`query BookSnapshot($numLevels: Int!, $market: MarketId!, $delayed: Boolean, $precision: Decimal, $retainSubscriptionForNSeconds: Int) {\n        bookSnapshot(numLevels: $numLevels, market: $market, delayed: $delayed, precision: $precision, retainSubscriptionForNSeconds: $retainSubscriptionForNSeconds) {\n          __typename\n          timestamp\n          bids {\n            price\n            amount\n            total\n          }\n          asks {\n            price\n            amount\n            total\n          }\n          ${e.join(" ")}\n        }\n      }`),{numLevels:n,market:t,delayed:r,precision:i,retainSubscriptionForNSeconds:a}).then((e=>e.bookSnapshot))}async cmeProductGroupInfos(e){return this.execute(F(`query CmeProductGroupInfos {\n        cmeProductGroupInfos { __typename ${e.join(" ")} }\n      }`)).then((e=>e.cmeProductGroupInfos))}async coinInfo(e,n){return this.execute(F(`query CoinInfo($product: ProductId!) {\n        coinInfo(product: $product) { __typename ${e.join(" ")} }\n      }`),{product:n}).then((e=>e.coinInfo))}async coinInfos(e){return this.execute(F(`query CoinInfos {\n        coinInfos { __typename ${e.join(" ")} }\n      }`)).then((e=>e.coinInfos))}async cptys(e){return this.execute(F(`query Cptys {\n        cptys { __typename ${e.join(" ")} }\n      }`)).then((e=>e.cptys))}async fills(e,n,t,r,i){return this.execute(F(`query Fills($base: ProductId, $quote: ProductId, $route: RouteId, $venue: VenueId) {\n        fills(base: $base, quote: $quote, route: $route, venue: $venue) {\n          __typename\n          normal {\n            kind\n            fillId\n            orderId\n            market {\n              __typename\n              venue {\n                id\n                name\n              }\n              exchangeSymbol\n              id\n              cmeProductGroupInfo {\n                productName\n                securityType\n                category\n                subCategory\n                mainFraction\n              }\n              kind {\n                ... on ExchangeMarketKind {\n                  __typename\n                  base {\n                    __typename\n                    id\n                    name\n                    kind\n                    markUsd\n                  }\n                  quote {\n                    __typename\n                    id\n                    name\n                    kind\n                    markUsd\n                  }\n                }\n                ... on PoolMarketKind {\n                  __typename\n                  products {\n                    __typename\n                    id\n                    name\n                    kind\n                    markUsd\n                  }\n                }\n              }\n              name\n              tickSize\n              stepSize\n              minOrderQuantity\n              minOrderQuantityUnit\n              route {\n                id\n                name\n              }\n              isFavorite\n            }\n            dir\n            price\n            quantity\n            recvTime\n            tradeTime\n          }\n          ${e.join(" ")}\n        }\n      }`),{base:n,quote:t,route:r,venue:i}).then((e=>e.fills))}async filterMarkets(e,n){return this.execute(F(`query FilterMarkets($filter: MarketFilter!) {\n        filterMarkets(filter: $filter) {\n          __typename\n          __typename\n          venue {\n            id\n            name\n          }\n          exchangeSymbol\n          id\n          cmeProductGroupInfo {\n            productName\n            securityType\n            category\n            subCategory\n            mainFraction\n          }\n          kind {\n            ... on ExchangeMarketKind {\n              __typename\n              base {\n                __typename\n                id\n                name\n                kind\n                markUsd\n              }\n              quote {\n                __typename\n                id\n                name\n                kind\n                markUsd\n              }\n            }\n            ... on PoolMarketKind {\n              __typename\n              products {\n                __typename\n                id\n                name\n                kind\n                markUsd\n              }\n            }\n          }\n          name\n          tickSize\n          stepSize\n          minOrderQuantity\n          minOrderQuantityUnit\n          route {\n            id\n            name\n          }\n          isFavorite\n          ${e.join(" ")}\n        }\n      }`),{filter:n}).then((e=>e.filterMarkets))}async historicalCandles(e,n,t,r,i){return this.execute(F(`query HistoricalCandles($width: CandleWidth!, $start: DateTime!, $id: MarketId!, $end: DateTime!) {\n        historicalCandles(width: $width, start: $start, id: $id, end: $end) { __typename ${e.join(" ")} }\n      }`),{width:n,start:t,id:r,end:i}).then((e=>e.historicalCandles))}async listApiKeys(e){return this.execute(F(`query ListApiKeys {\n        listApiKeys { __typename ${e.join(" ")} }\n      }`)).then((e=>e.listApiKeys))}async market(e,n){return this.execute(F(`query Market($id: MarketId!) {\n        market(id: $id) {\n          __typename\n          __typename\n          venue {\n            id\n            name\n          }\n          exchangeSymbol\n          id\n          cmeProductGroupInfo {\n            productName\n            securityType\n            category\n            subCategory\n            mainFraction\n          }\n          kind {\n            ... on ExchangeMarketKind {\n              __typename\n              base {\n                __typename\n                id\n                name\n                kind\n                markUsd\n              }\n              quote {\n                __typename\n                id\n                name\n                kind\n                markUsd\n              }\n            }\n            ... on PoolMarketKind {\n              __typename\n              products {\n                __typename\n                id\n                name\n                kind\n                markUsd\n              }\n            }\n          }\n          name\n          tickSize\n          stepSize\n          minOrderQuantity\n          minOrderQuantityUnit\n          route {\n            id\n            name\n          }\n          isFavorite\n          ${e.join(" ")}\n        }\n      }`),{id:n}).then((e=>e.market))}async marketSnapshot(e,n,t){return this.execute(F(`query MarketSnapshot($market: MarketId!, $latestAtOrBefore: DateTime) {\n        marketSnapshot(market: $market, latestAtOrBefore: $latestAtOrBefore) {\n          __typename\n          __typename\n          marketId\n          market {\n            name\n          }\n          high24h\n          lastPrice\n          low24h\n          volume24h\n          open24h\n          bidPrice\n          askPrice\n          ${e.join(" ")}\n        }\n      }`),{market:n,latestAtOrBefore:t}).then((e=>e.marketSnapshot))}async markets(e,n){return this.execute(F(`query Markets($id: [MarketId!]!) {\n        markets(id: $id) {\n          __typename\n          __typename\n          venue {\n            id\n            name\n          }\n          exchangeSymbol\n          id\n          cmeProductGroupInfo {\n            productName\n            securityType\n            category\n            subCategory\n            mainFraction\n          }\n          kind {\n            ... on ExchangeMarketKind {\n              __typename\n              base {\n                __typename\n                id\n                name\n                kind\n                markUsd\n              }\n              quote {\n                __typename\n                id\n                name\n                kind\n                markUsd\n              }\n            }\n            ... on PoolMarketKind {\n              __typename\n              products {\n                __typename\n                id\n                name\n                kind\n                markUsd\n              }\n            }\n          }\n          name\n          tickSize\n          stepSize\n          minOrderQuantity\n          minOrderQuantityUnit\n          route {\n            id\n            name\n          }\n          isFavorite\n          ${e.join(" ")}\n        }\n      }`),{id:n}).then((e=>e.markets))}async marketsSnapshots(e,n){return this.execute(F(`query MarketsSnapshots($latestAtOrBefore: DateTime) {\n        marketsSnapshots(latestAtOrBefore: $latestAtOrBefore) {\n          __typename\n          __typename\n          marketId\n          market {\n            name\n          }\n          high24h\n          lastPrice\n          low24h\n          volume24h\n          open24h\n          bidPrice\n          askPrice\n          ${e.join(" ")}\n        }\n      }`),{latestAtOrBefore:n}).then((e=>e.marketsSnapshots))}async me(e){return this.execute(F(`query Me {\n        me { __typename ${e.join(" ")} }\n      }`)).then((e=>e.me))}async mmAlgoOrder(e,n){return this.execute(F(`query MmAlgoOrder($orderId: OrderId!) {\n        mmAlgoOrder(orderId: $orderId) {\n          __typename\n          name\n          orderId\n          marketId\n          quantityBuy\n          quantitySell\n          minPosition\n          maxPosition\n          maxImproveBbo\n          positionTilt\n          referencePrice\n          refDistFrac\n          toleranceFrac\n          account\n          ${e.join(" ")}\n        }\n      }`),{orderId:n}).then((e=>e.mmAlgoOrder))}async mmAlgoStatus(e,n){return this.execute(F(`query MmAlgoStatus($orderId: OrderId) {\n        mmAlgoStatus(orderId: $orderId) {\n          __typename\n          orderId\n          order {\n            name\n            orderId\n            marketId\n            quantityBuy\n            quantitySell\n            minPosition\n            maxPosition\n            maxImproveBbo\n            positionTilt\n            referencePrice\n            refDistFrac\n            toleranceFrac\n            account\n          }\n          creationTime\n          status\n          position\n          hedgePosition\n          missRatio\n          effectiveSpread\n          buyStatus {\n            lastOrderTime\n            lastFillTime\n            lastRejectTime\n            openOrder {\n              orderId\n              price\n              quantity\n              cancelPending\n            }\n            referencePrice\n          }\n          sellStatus {\n            lastOrderTime\n            lastFillTime\n            lastRejectTime\n            openOrder {\n              orderId\n              price\n              quantity\n              cancelPending\n            }\n            referencePrice\n          }\n          kind\n          ${e.join(" ")}\n        }\n      }`),{orderId:n}).then((e=>e.mmAlgoStatus))}async openOrders(e){return this.execute(F(`query OpenOrders {\n        openOrders {\n          __typename\n          __typename\n          timestamp\n          order {\n            id\n            market {\n              __typename\n              venue {\n                id\n                name\n              }\n              exchangeSymbol\n              id\n              cmeProductGroupInfo {\n                productName\n                securityType\n                category\n                subCategory\n                mainFraction\n              }\n              kind {\n                ... on ExchangeMarketKind {\n                  __typename\n                  base {\n                    __typename\n                    id\n                    name\n                    kind\n                    markUsd\n                  }\n                  quote {\n                    __typename\n                    id\n                    name\n                    kind\n                    markUsd\n                  }\n                }\n                ... on PoolMarketKind {\n                  __typename\n                  products {\n                    __typename\n                    id\n                    name\n                    kind\n                    markUsd\n                  }\n                }\n              }\n              name\n              tickSize\n              stepSize\n              minOrderQuantity\n              minOrderQuantityUnit\n              route {\n                id\n                name\n              }\n              isFavorite\n            }\n            dir\n            quantity\n            orderType {\n              __typename\n              ... on LimitOrderType {\n                limitPrice\n              }\n              ... on StopLossLimitOrderType {\n                limitPrice\n                triggerPrice\n              }\n              ... on TakeProfitLimitOrderType {\n                limitPrice\n                triggerPrice\n              }\n            }\n            timeInForce {\n              instruction\n              goodTilDate\n            }\n          }\n          orderState\n          filledQty\n          avgFillPrice\n          rejectReason\n          ${e.join(" ")}\n        }\n      }`)).then((e=>e.openOrders))}async optionsMarketSnapshots(e,n,t){return this.execute(F(`query OptionsMarketSnapshots($underlying: ProductId!, $latestAtOrBefore: DateTime) {\n        optionsMarketSnapshots(underlying: $underlying, latestAtOrBefore: $latestAtOrBefore) { __typename ${e.join(" ")} }\n      }`),{underlying:n,latestAtOrBefore:t}).then((e=>e.optionsMarketSnapshots))}async order(e,n){return this.execute(F(`query Order($orderId: OrderId!) {\n        order(orderId: $orderId) {\n          __typename\n          __typename\n          timestamp\n          order {\n            id\n            market {\n              __typename\n              venue {\n                id\n                name\n              }\n              exchangeSymbol\n              id\n              cmeProductGroupInfo {\n                productName\n                securityType\n                category\n                subCategory\n                mainFraction\n              }\n              kind {\n                ... on ExchangeMarketKind {\n                  __typename\n                  base {\n                    __typename\n                    id\n                    name\n                    kind\n                    markUsd\n                  }\n                  quote {\n                    __typename\n                    id\n                    name\n                    kind\n                    markUsd\n                  }\n                }\n                ... on PoolMarketKind {\n                  __typename\n                  products {\n                    __typename\n                    id\n                    name\n                    kind\n                    markUsd\n                  }\n                }\n              }\n              name\n              tickSize\n              stepSize\n              minOrderQuantity\n              minOrderQuantityUnit\n              route {\n                id\n                name\n              }\n              isFavorite\n            }\n            dir\n            quantity\n            orderType {\n              __typename\n              ... on LimitOrderType {\n                limitPrice\n              }\n              ... on StopLossLimitOrderType {\n                limitPrice\n                triggerPrice\n              }\n              ... on TakeProfitLimitOrderType {\n                limitPrice\n                triggerPrice\n              }\n            }\n            timeInForce {\n              instruction\n              goodTilDate\n            }\n          }\n          orderState\n          filledQty\n          avgFillPrice\n          rejectReason\n          ${e.join(" ")}\n        }\n      }`),{orderId:n}).then((e=>e.order))}async outedOrders(e,n,t){return this.execute(F(`query OutedOrders($fromInclusive: DateTime, $toExclusive: DateTime) {\n        outedOrders(fromInclusive: $fromInclusive, toExclusive: $toExclusive) {\n          __typename\n          __typename\n          timestamp\n          order {\n            id\n            market {\n              __typename\n              venue {\n                id\n                name\n              }\n              exchangeSymbol\n              id\n              cmeProductGroupInfo {\n                productName\n                securityType\n                category\n                subCategory\n                mainFraction\n              }\n              kind {\n                ... on ExchangeMarketKind {\n                  __typename\n                  base {\n                    __typename\n                    id\n                    name\n                    kind\n                    markUsd\n                  }\n                  quote {\n                    __typename\n                    id\n                    name\n                    kind\n                    markUsd\n                  }\n                }\n                ... on PoolMarketKind {\n                  __typename\n                  products {\n                    __typename\n                    id\n                    name\n                    kind\n                    markUsd\n                  }\n                }\n              }\n              name\n              tickSize\n              stepSize\n              minOrderQuantity\n              minOrderQuantityUnit\n              route {\n                id\n                name\n              }\n              isFavorite\n            }\n            dir\n            quantity\n            orderType {\n              __typename\n              ... on LimitOrderType {\n                limitPrice\n              }\n              ... on StopLossLimitOrderType {\n                limitPrice\n                triggerPrice\n              }\n              ... on TakeProfitLimitOrderType {\n                limitPrice\n                triggerPrice\n              }\n            }\n            timeInForce {\n              instruction\n              goodTilDate\n            }\n          }\n          orderState\n          filledQty\n          avgFillPrice\n          rejectReason\n          ${e.join(" ")}\n        }\n      }`),{fromInclusive:n,toExclusive:t}).then((e=>e.outedOrders))}async povOrder(e,n){return this.execute(F(`query PovOrder($orderId: OrderId!) {\n        povOrder(orderId: $orderId) {\n          __typename\n          name\n          orderId\n          marketId\n          dir\n          targetVolumeFrac\n          minOrderQuantity\n          maxQuantity\n          endTime\n          accountId\n          takeThroughFrac\n          ${e.join(" ")}\n        }\n      }`),{orderId:n}).then((e=>e.povOrder))}async povStatus(e,n){return this.execute(F(`query PovStatus($orderId: OrderId) {\n        povStatus(orderId: $orderId) {\n          __typename\n          orderId\n          order {\n            name\n            orderId\n            marketId\n            dir\n            targetVolumeFrac\n            minOrderQuantity\n            maxQuantity\n            endTime\n            accountId\n            takeThroughFrac\n          }\n          creationTime\n          status\n          fractionComplete\n          realizedVolumeFrac\n          marketVolume\n          quantityFilled\n          ${e.join(" ")}\n        }\n      }`),{orderId:n}).then((e=>e.povStatus))}async product(e,n){return this.execute(F(`query Product($id: ProductId!) {\n        product(id: $id) { __typename ${e.join(" ")} }\n      }`),{id:n}).then((e=>e.product))}async products(e,n){return this.execute(F(`query Products($id: [ProductId!]!) {\n        products(id: $id) { __typename ${e.join(" ")} }\n      }`),{id:n}).then((e=>e.products))}async route(e,n){return this.execute(F(`query Route($id: RouteId!) {\n        route(id: $id) { __typename ${e.join(" ")} }\n      }`),{id:n}).then((e=>e.route))}async routes(e){return this.execute(F(`query Routes {\n        routes { __typename ${e.join(" ")} }\n      }`)).then((e=>e.routes))}async smartOrderRouterOrder(e,n){return this.execute(F(`query SmartOrderRouterOrder($orderId: OrderId!) {\n        smartOrderRouterOrder(orderId: $orderId) {\n          __typename\n          orderId\n          markets {\n            id\n          }\n          dir\n          limitPrice\n          targetSize\n          executionTimeLimitMs\n          parentOrderId\n          ${e.join(" ")}\n        }\n      }`),{orderId:n}).then((e=>e.smartOrderRouterOrder))}async smartOrderRouterStatus(e,n){return this.execute(F(`query SmartOrderRouterStatus($orderId: OrderId) {\n        smartOrderRouterStatus(orderId: $orderId) {\n          __typename\n          status {\n            orderId\n            order {\n              orderId\n              trader\n              account\n              algo\n              parentOrderId\n              markets\n            }\n            creationTime\n            status\n            lastStatusChange\n            fractionComplete\n          }\n          order {\n            orderId\n            markets {\n              id\n            }\n            dir\n            limitPrice\n            targetSize\n            executionTimeLimitMs\n            parentOrderId\n          }\n          ${e.join(" ")}\n        }\n      }`),{orderId:n}).then((e=>e.smartOrderRouterStatus))}async spreadAlgoOrder(e,n){return this.execute(F(`query SpreadAlgoOrder($orderId: OrderId!) {\n        spreadAlgoOrder(orderId: $orderId) {\n          __typename\n          name\n          orderId\n          marketId\n          quantityBuy\n          quantitySell\n          minPosition\n          maxPosition\n          maxImproveBbo\n          positionTilt\n          referencePrice\n          refDistFrac\n          toleranceFrac\n          account\n          ${e.join(" ")}\n        }\n      }`),{orderId:n}).then((e=>e.spreadAlgoOrder))}async spreadAlgoStatus(e,n){return this.execute(F(`query SpreadAlgoStatus($orderId: OrderId) {\n        spreadAlgoStatus(orderId: $orderId) {\n          __typename\n          orderId\n          order {\n            name\n            orderId\n            marketId\n            quantityBuy\n            quantitySell\n            minPosition\n            maxPosition\n            maxImproveBbo\n            positionTilt\n            referencePrice\n            refDistFrac\n            toleranceFrac\n            account\n          }\n          creationTime\n          status\n          position\n          hedgePosition\n          missRatio\n          effectiveSpread\n          buyStatus {\n            lastOrderTime\n            lastFillTime\n            lastRejectTime\n            openOrder {\n              orderId\n              price\n              quantity\n              cancelPending\n            }\n            referencePrice\n          }\n          sellStatus {\n            lastOrderTime\n            lastFillTime\n            lastRejectTime\n            openOrder {\n              orderId\n              price\n              quantity\n              cancelPending\n            }\n            referencePrice\n          }\n          kind\n          ${e.join(" ")}\n        }\n      }`),{orderId:n}).then((e=>e.spreadAlgoStatus))}async tcaBalancePnl(e,n,t,r){return this.execute(F(`query TcaBalancePnl($accountId: AccountId!, $usePurchasingPower: Boolean, $venueId: VenueId) {\n        tcaBalancePnl(accountId: $accountId, usePurchasingPower: $usePurchasingPower, venueId: $venueId) { __typename ${e.join(" ")} }\n      }`),{accountId:n,usePurchasingPower:t,venueId:r}).then((e=>e.tcaBalancePnl))}async tcaBalancePnlTimeseries(e,n,t,r,i,a){return this.execute(F(`query TcaBalancePnlTimeseries($venueId: VenueId!, $accountId: AccountId!, $fromInclusive: DateTime, $toExclusive: DateTime, $usePurchasingPower: Boolean) {\n        tcaBalancePnlTimeseries(venueId: $venueId, accountId: $accountId, fromInclusive: $fromInclusive, toExclusive: $toExclusive, usePurchasingPower: $usePurchasingPower) { __typename ${e.join(" ")} }\n      }`),{venueId:n,accountId:t,fromInclusive:r,toExclusive:i,usePurchasingPower:a}).then((e=>e.tcaBalancePnlTimeseries))}async tcaMarks(e,n,t,r){return this.execute(F(`query TcaMarks($toExclusive: DateTime!, $fromInclusive: DateTime!, $id: MarketId) {\n        tcaMarks(toExclusive: $toExclusive, fromInclusive: $fromInclusive, id: $id) { __typename ${e.join(" ")} }\n      }`),{toExclusive:n,fromInclusive:t,id:r}).then((e=>e.tcaMarks))}async tcaSummary(e,n,t,r,i){return this.execute(F(`query TcaSummary($toExclusive: DateTime!, $fromInclusive: DateTime!, $currency: String, $id: MarketId) {\n        tcaSummary(toExclusive: $toExclusive, fromInclusive: $fromInclusive, currency: $currency, id: $id) { __typename ${e.join(" ")} }\n      }`),{toExclusive:n,fromInclusive:t,currency:r,id:i}).then((e=>e.tcaSummary))}async twapOrder(e,n){return this.execute(F(`query TwapOrder($orderId: OrderId!) {\n        twapOrder(orderId: $orderId) {\n          __typename\n          name\n          orderId\n          marketId\n          dir\n          quantity\n          endTime\n          accountId\n          intervalMs\n          rejectLockoutMs\n          takeThroughFrac\n          ${e.join(" ")}\n        }\n      }`),{orderId:n}).then((e=>e.twapOrder))}async twapStatus(e,n){return this.execute(F(`query TwapStatus($orderId: OrderId) {\n        twapStatus(orderId: $orderId) {\n          __typename\n          orderId\n          order {\n            name\n            orderId\n            marketId\n            dir\n            quantity\n            endTime\n            accountId\n            intervalMs\n            rejectLockoutMs\n            takeThroughFrac\n          }\n          creationTime\n          status\n          fractionComplete\n          realizedTwap\n          quantityFilled\n          ${e.join(" ")}\n        }\n      }`),{orderId:n}).then((e=>e.twapStatus))}async venue(e,n){return this.execute(F(`query Venue($id: VenueId!) {\n        venue(id: $id) { __typename ${e.join(" ")} }\n      }`),{id:n}).then((e=>e.venue))}async venues(e){return this.execute(F(`query Venues {\n        venues { __typename ${e.join(" ")} }\n      }`)).then((e=>e.venues))}async version(){return this.execute(F("query Version {\n        version\n      }")).then((e=>e.version))}async cancelAllOrders(e){return this.execute(F("mutation CancelAllOrders($venueId: VenueId) {\n        cancelAllOrders(venueId: $venueId)\n      }"),{venueId:e}).then((e=>e.cancelAllOrders))}async cancelOrder(e){return this.execute(F("mutation CancelOrder($orderId: OrderId!) {\n        cancelOrder(orderId: $orderId)\n      }"),{orderId:e}).then((e=>e.cancelOrder))}async cancelOrders(e){return this.execute(F("mutation CancelOrders($orderIds: [OrderId!]!) {\n        cancelOrders(orderIds: $orderIds)\n      }"),{orderIds:e}).then((e=>e.cancelOrders))}async createApiKey(e){return this.execute(F(`mutation CreateApiKey {\n        createApiKey { __typename ${e.join(" ")} }\n      }`)).then((e=>e.createApiKey))}async createMmAlgo(e){return this.execute(F("mutation CreateMmAlgo($mmAlgo: CreateMMAlgo!) {\n        createMmAlgo(mmAlgo: $mmAlgo)\n      }"),{mmAlgo:e}).then((e=>e.createMmAlgo))}async createOrder(e){return this.execute(F("mutation CreateOrder($order: CreateOrder!) {\n        createOrder(order: $order)\n      }"),{order:e}).then((e=>e.createOrder))}async createOrders(e){return this.execute(F("mutation CreateOrders($orders: [CreateOrder!]!) {\n        createOrders(orders: $orders)\n      }"),{orders:e}).then((e=>e.createOrders))}async createPovAlgo(e){return this.execute(F("mutation CreatePovAlgo($povAlgo: CreatePovAlgo!) {\n        createPovAlgo(povAlgo: $povAlgo)\n      }"),{povAlgo:e}).then((e=>e.createPovAlgo))}async createSmartOrderRouterAlgo(e){return this.execute(F("mutation CreateSmartOrderRouterAlgo($algo: CreateSmartOrderRouterAlgo!) {\n        createSmartOrderRouterAlgo(algo: $algo)\n      }"),{algo:e}).then((e=>e.createSmartOrderRouterAlgo))}async createSpreadAlgo(e){return this.execute(F("mutation CreateSpreadAlgo($spreadAlgo: CreateSpreadAlgo!) {\n        createSpreadAlgo(spreadAlgo: $spreadAlgo)\n      }"),{spreadAlgo:e}).then((e=>e.createSpreadAlgo))}async createTelegramApiKey(e,n){return this.execute(F(`mutation CreateTelegramApiKey($telegramId: String!) {\n        createTelegramApiKey(telegramId: $telegramId) { __typename ${e.join(" ")} }\n      }`),{telegramId:n}).then((e=>e.createTelegramApiKey))}async createTwapAlgo(e){return this.execute(F("mutation CreateTwapAlgo($twapAlgo: CreateTwapAlgo!) {\n        createTwapAlgo(twapAlgo: $twapAlgo)\n      }"),{twapAlgo:e}).then((e=>e.createTwapAlgo))}async previewSmartOrderRouterAlgo(e,n){return this.execute(F(`mutation PreviewSmartOrderRouterAlgo($algo: CreateSmartOrderRouterAlgo!) {\n        previewSmartOrderRouterAlgo(algo: $algo) { __typename ${e.join(" ")} }\n      }`),{algo:n}).then((e=>e.previewSmartOrderRouterAlgo))}async removeApiKey(e){return this.execute(F("mutation RemoveApiKey($apiKey: String!) {\n        removeApiKey(apiKey: $apiKey)\n      }"),{apiKey:e}).then((e=>e.removeApiKey))}async removeTelegramApiKeys(){return this.execute(F("mutation RemoveTelegramApiKeys {\n        removeTelegramApiKeys\n      }")).then((e=>e.removeTelegramApiKeys))}async sendAlgoControlCommand(e,n){return this.execute(F("mutation SendAlgoControlCommand($orderId: OrderId!, $command: AlgoControlCommand!) {\n        sendAlgoControlCommand(orderId: $orderId, command: $command)\n      }"),{orderId:e,command:n}).then((e=>e.sendAlgoControlCommand))}async setCredentials(e,n){return this.execute(F("mutation SetCredentials($credentials: String!, $componentId: ComponentId!) {\n        setCredentials(credentials: $credentials, componentId: $componentId)\n      }"),{credentials:e,componentId:n}).then((e=>e.setCredentials))}async updateMarket(e,n){return this.execute(F(`mutation UpdateMarket($payload: UpdateMarket!) {\n        updateMarket(payload: $payload) { __typename ${e.join(" ")} }\n      }`),{payload:n}).then((e=>e.updateMarket))}}var M,j,R,L,q,V,U,B,K,G,Q,z,Y,H,J,W;!function(e){e.Pause="PAUSE",e.Start="START",e.Stop="STOP"}(M||(M={})),function(e){e.Chaser="CHASER",e.MarketMaker="MARKET_MAKER",e.Pov="POV",e.SmartOrderRouter="SMART_ORDER_ROUTER",e.Spread="SPREAD",e.Twap="TWAP"}(j||(j={})),function(e){e.Done="DONE",e.Paused="PAUSED",e.Running="RUNNING"}(R||(R={})),function(e){e.FifteenMinute="FIFTEEN_MINUTE",e.FiveSecond="FIVE_SECOND",e.OneDay="ONE_DAY",e.OneHour="ONE_HOUR",e.OneMinute="ONE_MINUTE",e.OneSecond="ONE_SECOND"}(L||(L={})),function(e){e.Cash="CASH",e.Combo="COMBO",e.Fra="FRA",e.Fut="FUT",e.Fwd="FWD",e.Idx="IDX",e.Index="INDEX",e.Irs="IRS",e.Ooc="OOC",e.Oof="OOF"}(q||(q={})),function(e){e.Limit="LIMIT",e.StopLossLimit="STOP_LOSS_LIMIT",e.TakeProfitLimit="TAKE_PROFIT_LIMIT"}(V||(V={})),function(e){e.Gtc="GTC",e.Gtd="GTD",e.Ioc="IOC"}(U||(U={})),function(e){e.Brokerage="BROKERAGE",e.Platform="PLATFORM"}(B||(B={})),function(e){e.Correction="CORRECTION",e.Normal="NORMAL",e.Reversal="REVERSAL"}(K||(K={})),function(e){e.Basic="BASIC",e.Professional="PROFESSIONAL"}(G||(G={})),function(e){e.MM="MM",e.Spread="SPREAD"}(Q||(Q={})),function(e){e.Base="BASE",e.Quote="QUOTE"}(z||(z={})),function(e){e.Algo="ALGO",e.Api="API",e.Cli="CLI",e.External="EXTERNAL",e.Gui="GUI",e.Other="OTHER",e.Telegram="TELEGRAM"}(Y||(Y={})),function(e){e.Acked="ACKED",e.Canceled="CANCELED",e.Canceling="CANCELING",e.Filled="FILLED",e.Open="OPEN",e.Out="OUT",e.Rejected="REJECTED",e.Stale="STALE"}(H||(H={})),function(e){e.AlgoPaused="ALGO_PAUSED",e.AlgoStopped="ALGO_STOPPED",e.CancelPending="CANCEL_PENDING",e.MaxPosition="MAX_POSITION",e.MinPosition="MIN_POSITION",e.NoAsk="NO_ASK",e.NoBid="NO_BID",e.NoReferencePrice="NO_REFERENCE_PRICE",e.NoReferenceSize="NO_REFERENCE_SIZE",e.OpenOrderOutsideTolerance="OPEN_ORDER_OUTSIDE_TOLERANCE",e.OpenOrderWithinTolerance="OPEN_ORDER_WITHIN_TOLERANCE",e.WithinFillLockout="WITHIN_FILL_LOCKOUT",e.WithinOrderLockout="WITHIN_ORDER_LOCKOUT",e.WithinRejectLockout="WITHIN_REJECT_LOCKOUT"}(J||(J={})),function(e){e.BidAsk="BID_ASK",e.HedgeMarketBidAsk="HEDGE_MARKET_BID_ASK",e.Mid="MID"}(W||(W={}));var X={host:"https://app.architect.co",apiKey:"",apiSecret:"",tradingMode:"live"};function Z(){var e=Office.context.document.settings.get("apiKey"),n=Office.context.document.settings.get("apiSecret");if(!e||!n)throw new Error("API Key and Secret must be provided.");X.apiKey=e,X.apiSecret=n,function(e){new w(e,a.U)}(X)}Office.onReady((function(e){e.host===Office.HostType.Excel&&console.log("Excel Add-in ready.")}))},581:(e,n,t)=>{function r(e){const{credentials:n="same-origin",referrer:t,referrerPolicy:r,shouldRetry:a=()=>!1}=e,o=e.fetchFn||fetch,d=e.abortControllerImpl||AbortController,s=(()=>{let e=!1;const n=[];return{get disposed(){return e},onDispose:t=>e?(setTimeout((()=>t()),0),()=>{}):(n.push(t),()=>{n.splice(n.indexOf(t),1)}),dispose(){if(!e){e=!0;for(const e of[...n])e()}}}})();return{subscribe(u,c){if(s.disposed)throw new Error("Client has been disposed");const l=new d,m=s.onDispose((()=>{m(),l.abort()}));return(async()=>{var d;let s=null,m=0;for(;;){if(s){const e=await a(s,m);if(l.signal.aborted)return;if(!e)throw s;m++}try{const a="function"==typeof e.url?await e.url(u):e.url;if(l.signal.aborted)return;const s="function"==typeof e.headers?await e.headers():null!==(d=e.headers)&&void 0!==d?d:{};if(l.signal.aborted)return;let m;try{m=await o(a,{signal:l.signal,method:"POST",headers:Object.assign(Object.assign({},s),{"content-type":"application/json; charset=utf-8",accept:"application/graphql-response+json, application/json"}),credentials:n,referrer:t,referrerPolicy:r,body:JSON.stringify(u)})}catch(e){throw new i(e)}if(!m.ok)throw new i(m);if(!m.body)throw new Error("Missing response body");const p=m.headers.get("content-type");if(!p)throw new Error("Missing response content-type");if(!p.includes("application/graphql-response+json")&&!p.includes("application/json"))throw new Error(`Unsupported response content-type ${p}`);const y=await m.json();return c.next(y),l.abort()}catch(e){if(l.signal.aborted)return;if(!(e instanceof i))throw e;s=e}}})().then((()=>c.complete())).catch((e=>c.error(e))),()=>l.abort()},dispose(){s.dispose()}}}t.d(n,{U:()=>r});class i extends Error{constructor(e){let n,t;var r;!function(e){return"object"==typeof e&&null!==e}(r=e)||"boolean"!=typeof r.ok||"number"!=typeof r.status||"string"!=typeof r.statusText?n=e instanceof Error?e.message:String(e):(t=e,n="Server responded with "+e.status+": "+e.statusText),super(n),this.name=this.constructor.name,this.response=t}}},770:(e,n,t)=>{function r(e){return 9===e||32===e}t.d(n,{y:()=>g});const i=/[\x00-\x1f\x22\x5c\x7f-\x9f]/g;function a(e){return o[e.charCodeAt(0)]}const o=["\\u0000","\\u0001","\\u0002","\\u0003","\\u0004","\\u0005","\\u0006","\\u0007","\\b","\\t","\\n","\\u000B","\\f","\\r","\\u000E","\\u000F","\\u0010","\\u0011","\\u0012","\\u0013","\\u0014","\\u0015","\\u0016","\\u0017","\\u0018","\\u0019","\\u001A","\\u001B","\\u001C","\\u001D","\\u001E","\\u001F","","",'\\"',"","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","\\\\","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","\\u007F","\\u0080","\\u0081","\\u0082","\\u0083","\\u0084","\\u0085","\\u0086","\\u0087","\\u0088","\\u0089","\\u008A","\\u008B","\\u008C","\\u008D","\\u008E","\\u008F","\\u0090","\\u0091","\\u0092","\\u0093","\\u0094","\\u0095","\\u0096","\\u0097","\\u0098","\\u0099","\\u009A","\\u009B","\\u009C","\\u009D","\\u009E","\\u009F"];function d(e,n){if(!Boolean(e))throw new Error(n)}const s=10,u=2;function c(e,n){switch(typeof e){case"string":return JSON.stringify(e);case"function":return e.name?`[function ${e.name}]`:"[function]";case"object":return function(e,n){if(null===e)return"null";if(n.includes(e))return"[Circular]";const t=[...n,e];if(function(e){return"function"==typeof e.toJSON}(e)){const n=e.toJSON();if(n!==e)return"string"==typeof n?n:c(n,t)}else if(Array.isArray(e))return function(e,n){if(0===e.length)return"[]";if(n.length>u)return"[Array]";const t=Math.min(s,e.length),r=e.length-t,i=[];for(let r=0;r<t;++r)i.push(c(e[r],n));return 1===r?i.push("... 1 more item"):r>1&&i.push(`... ${r} more items`),"["+i.join(", ")+"]"}(e,t);return function(e,n){const t=Object.entries(e);if(0===t.length)return"{}";if(n.length>u)return"["+function(e){const n=Object.prototype.toString.call(e).replace(/^\[object /,"").replace(/]$/,"");if("Object"===n&&"function"==typeof e.constructor){const n=e.constructor.name;if("string"==typeof n&&""!==n)return n}return n}(e)+"]";const r=t.map((([e,t])=>e+": "+c(t,n)));return"{ "+r.join(", ")+" }"}(e,t)}(e,n);default:return String(e)}}Symbol.toStringTag,Symbol.toStringTag;const l={Name:[],Document:["definitions"],OperationDefinition:["name","variableDefinitions","directives","selectionSet"],VariableDefinition:["variable","type","defaultValue","directives"],Variable:["name"],SelectionSet:["selections"],Field:["alias","name","arguments","directives","selectionSet"],Argument:["name","value"],FragmentSpread:["name","directives"],InlineFragment:["typeCondition","directives","selectionSet"],FragmentDefinition:["name","variableDefinitions","typeCondition","directives","selectionSet"],IntValue:[],FloatValue:[],StringValue:[],BooleanValue:[],NullValue:[],EnumValue:[],ListValue:["values"],ObjectValue:["fields"],ObjectField:["name","value"],Directive:["name","arguments"],NamedType:["name"],ListType:["type"],NonNullType:["type"],SchemaDefinition:["description","directives","operationTypes"],OperationTypeDefinition:["type"],ScalarTypeDefinition:["description","name","directives"],ObjectTypeDefinition:["description","name","interfaces","directives","fields"],FieldDefinition:["description","name","arguments","type","directives"],InputValueDefinition:["description","name","type","defaultValue","directives"],InterfaceTypeDefinition:["description","name","interfaces","directives","fields"],UnionTypeDefinition:["description","name","directives","types"],EnumTypeDefinition:["description","name","directives","values"],EnumValueDefinition:["description","name","directives"],InputObjectTypeDefinition:["description","name","directives","fields"],DirectiveDefinition:["description","name","arguments","locations"],SchemaExtension:["directives","operationTypes"],ScalarTypeExtension:["name","directives"],ObjectTypeExtension:["name","interfaces","directives","fields"],InterfaceTypeExtension:["name","interfaces","directives","fields"],UnionTypeExtension:["name","directives","types"],EnumTypeExtension:["name","directives","values"],InputObjectTypeExtension:["name","directives","fields"]},m=new Set(Object.keys(l));function p(e){const n=null==e?void 0:e.kind;return"string"==typeof n&&m.has(n)}var y,f,v;!function(e){e.QUERY="query",e.MUTATION="mutation",e.SUBSCRIPTION="subscription"}(y||(y={})),(v=f||(f={})).NAME="Name",v.DOCUMENT="Document",v.OPERATION_DEFINITION="OperationDefinition",v.VARIABLE_DEFINITION="VariableDefinition",v.SELECTION_SET="SelectionSet",v.FIELD="Field",v.ARGUMENT="Argument",v.FRAGMENT_SPREAD="FragmentSpread",v.INLINE_FRAGMENT="InlineFragment",v.FRAGMENT_DEFINITION="FragmentDefinition",v.VARIABLE="Variable",v.INT="IntValue",v.FLOAT="FloatValue",v.STRING="StringValue",v.BOOLEAN="BooleanValue",v.NULL="NullValue",v.ENUM="EnumValue",v.LIST="ListValue",v.OBJECT="ObjectValue",v.OBJECT_FIELD="ObjectField",v.DIRECTIVE="Directive",v.NAMED_TYPE="NamedType",v.LIST_TYPE="ListType",v.NON_NULL_TYPE="NonNullType",v.SCHEMA_DEFINITION="SchemaDefinition",v.OPERATION_TYPE_DEFINITION="OperationTypeDefinition",v.SCALAR_TYPE_DEFINITION="ScalarTypeDefinition",v.OBJECT_TYPE_DEFINITION="ObjectTypeDefinition",v.FIELD_DEFINITION="FieldDefinition",v.INPUT_VALUE_DEFINITION="InputValueDefinition",v.INTERFACE_TYPE_DEFINITION="InterfaceTypeDefinition",v.UNION_TYPE_DEFINITION="UnionTypeDefinition",v.ENUM_TYPE_DEFINITION="EnumTypeDefinition",v.ENUM_VALUE_DEFINITION="EnumValueDefinition",v.INPUT_OBJECT_TYPE_DEFINITION="InputObjectTypeDefinition",v.DIRECTIVE_DEFINITION="DirectiveDefinition",v.SCHEMA_EXTENSION="SchemaExtension",v.SCALAR_TYPE_EXTENSION="ScalarTypeExtension",v.OBJECT_TYPE_EXTENSION="ObjectTypeExtension",v.INTERFACE_TYPE_EXTENSION="InterfaceTypeExtension",v.UNION_TYPE_EXTENSION="UnionTypeExtension",v.ENUM_TYPE_EXTENSION="EnumTypeExtension",v.INPUT_OBJECT_TYPE_EXTENSION="InputObjectTypeExtension";const h=Object.freeze({});function I(e,n){const t=e[n];return"object"==typeof t?t:"function"==typeof t?{enter:t,leave:void 0}:{enter:e.enter,leave:e.leave}}function g(e){return function(e,n,t=l){const r=new Map;for(const e of Object.values(f))r.set(e,I(n,e));let i,a,o,s=Array.isArray(e),u=[e],m=-1,y=[],v=e;const g=[],O=[];do{m++;const e=m===u.length,l=e&&0!==y.length;if(e){if(a=0===O.length?void 0:g[g.length-1],v=o,o=O.pop(),l)if(s){v=v.slice();let e=0;for(const[n,t]of y){const r=n-e;null===t?(v.splice(r,1),e++):v[r]=t}}else{v=Object.defineProperties({},Object.getOwnPropertyDescriptors(v));for(const[e,n]of y)v[e]=n}m=i.index,u=i.keys,y=i.edits,s=i.inArray,i=i.prev}else if(o){if(a=s?m:u[m],v=o[a],null==v)continue;g.push(a)}let f;if(!Array.isArray(v)){var _,T;p(v)||d(!1,`Invalid AST Node: ${k=v,c(k,[])}.`);const t=e?null===(_=r.get(v.kind))||void 0===_?void 0:_.leave:null===(T=r.get(v.kind))||void 0===T?void 0:T.enter;if(f=null==t?void 0:t.call(n,v,a,o,g,O),f===h)break;if(!1===f){if(!e){g.pop();continue}}else if(void 0!==f&&(y.push([a,f]),!e)){if(!p(f)){g.pop();continue}v=f}}var S;void 0===f&&l&&y.push([a,v]),e?g.pop():(i={inArray:s,index:m,keys:u,edits:y,prev:i},s=Array.isArray(v),u=s?v:null!==(S=t[v.kind])&&void 0!==S?S:[],m=-1,y=[],o&&O.push(o),o=v)}while(void 0!==i);var k;return 0!==y.length?y[y.length-1][1]:e}(e,O)}const O={Name:{leave:e=>e.value},Variable:{leave:e=>"$"+e.name},Document:{leave:e=>_(e.definitions,"\n\n")},OperationDefinition:{leave(e){const n=S("(",_(e.variableDefinitions,", "),")"),t=_([e.operation,_([e.name,n]),_(e.directives," ")]," ");return("query"===t?"":t+" ")+e.selectionSet}},VariableDefinition:{leave:({variable:e,type:n,defaultValue:t,directives:r})=>e+": "+n+S(" = ",t)+S(" ",_(r," "))},SelectionSet:{leave:({selections:e})=>T(e)},Field:{leave({alias:e,name:n,arguments:t,directives:r,selectionSet:i}){const a=S("",e,": ")+n;let o=a+S("(",_(t,", "),")");return o.length>80&&(o=a+S("(\n",k(_(t,"\n")),"\n)")),_([o,_(r," "),i]," ")}},Argument:{leave:({name:e,value:n})=>e+": "+n},FragmentSpread:{leave:({name:e,directives:n})=>"..."+e+S(" ",_(n," "))},InlineFragment:{leave:({typeCondition:e,directives:n,selectionSet:t})=>_(["...",S("on ",e),_(n," "),t]," ")},FragmentDefinition:{leave:({name:e,typeCondition:n,variableDefinitions:t,directives:r,selectionSet:i})=>`fragment ${e}${S("(",_(t,", "),")")} on ${n} ${S("",_(r," ")," ")}`+i},IntValue:{leave:({value:e})=>e},FloatValue:{leave:({value:e})=>e},StringValue:{leave:({value:e,block:n})=>n?function(e){const n=e.replace(/"""/g,'\\"""'),t=n.split(/\r\n|[\n\r]/g),i=1===t.length,a=t.length>1&&t.slice(1).every((e=>0===e.length||r(e.charCodeAt(0)))),o=n.endsWith('\\"""'),d=e.endsWith('"')&&!o,s=e.endsWith("\\"),u=d||s,c=!i||e.length>70||u||a||o;let l="";const m=i&&r(e.charCodeAt(0));return(c&&!m||a)&&(l+="\n"),l+=n,(c||u)&&(l+="\n"),'"""'+l+'"""'}(e):`"${e.replace(i,a)}"`},BooleanValue:{leave:({value:e})=>e?"true":"false"},NullValue:{leave:()=>"null"},EnumValue:{leave:({value:e})=>e},ListValue:{leave:({values:e})=>"["+_(e,", ")+"]"},ObjectValue:{leave:({fields:e})=>"{"+_(e,", ")+"}"},ObjectField:{leave:({name:e,value:n})=>e+": "+n},Directive:{leave:({name:e,arguments:n})=>"@"+e+S("(",_(n,", "),")")},NamedType:{leave:({name:e})=>e},ListType:{leave:({type:e})=>"["+e+"]"},NonNullType:{leave:({type:e})=>e+"!"},SchemaDefinition:{leave:({description:e,directives:n,operationTypes:t})=>S("",e,"\n")+_(["schema",_(n," "),T(t)]," ")},OperationTypeDefinition:{leave:({operation:e,type:n})=>e+": "+n},ScalarTypeDefinition:{leave:({description:e,name:n,directives:t})=>S("",e,"\n")+_(["scalar",n,_(t," ")]," ")},ObjectTypeDefinition:{leave:({description:e,name:n,interfaces:t,directives:r,fields:i})=>S("",e,"\n")+_(["type",n,S("implements ",_(t," & ")),_(r," "),T(i)]," ")},FieldDefinition:{leave:({description:e,name:n,arguments:t,type:r,directives:i})=>S("",e,"\n")+n+(E(t)?S("(\n",k(_(t,"\n")),"\n)"):S("(",_(t,", "),")"))+": "+r+S(" ",_(i," "))},InputValueDefinition:{leave:({description:e,name:n,type:t,defaultValue:r,directives:i})=>S("",e,"\n")+_([n+": "+t,S("= ",r),_(i," ")]," ")},InterfaceTypeDefinition:{leave:({description:e,name:n,interfaces:t,directives:r,fields:i})=>S("",e,"\n")+_(["interface",n,S("implements ",_(t," & ")),_(r," "),T(i)]," ")},UnionTypeDefinition:{leave:({description:e,name:n,directives:t,types:r})=>S("",e,"\n")+_(["union",n,_(t," "),S("= ",_(r," | "))]," ")},EnumTypeDefinition:{leave:({description:e,name:n,directives:t,values:r})=>S("",e,"\n")+_(["enum",n,_(t," "),T(r)]," ")},EnumValueDefinition:{leave:({description:e,name:n,directives:t})=>S("",e,"\n")+_([n,_(t," ")]," ")},InputObjectTypeDefinition:{leave:({description:e,name:n,directives:t,fields:r})=>S("",e,"\n")+_(["input",n,_(t," "),T(r)]," ")},DirectiveDefinition:{leave:({description:e,name:n,arguments:t,repeatable:r,locations:i})=>S("",e,"\n")+"directive @"+n+(E(t)?S("(\n",k(_(t,"\n")),"\n)"):S("(",_(t,", "),")"))+(r?" repeatable":"")+" on "+_(i," | ")},SchemaExtension:{leave:({directives:e,operationTypes:n})=>_(["extend schema",_(e," "),T(n)]," ")},ScalarTypeExtension:{leave:({name:e,directives:n})=>_(["extend scalar",e,_(n," ")]," ")},ObjectTypeExtension:{leave:({name:e,interfaces:n,directives:t,fields:r})=>_(["extend type",e,S("implements ",_(n," & ")),_(t," "),T(r)]," ")},InterfaceTypeExtension:{leave:({name:e,interfaces:n,directives:t,fields:r})=>_(["extend interface",e,S("implements ",_(n," & ")),_(t," "),T(r)]," ")},UnionTypeExtension:{leave:({name:e,directives:n,types:t})=>_(["extend union",e,_(n," "),S("= ",_(t," | "))]," ")},EnumTypeExtension:{leave:({name:e,directives:n,values:t})=>_(["extend enum",e,_(n," "),T(t)]," ")},InputObjectTypeExtension:{leave:({name:e,directives:n,fields:t})=>_(["extend input",e,_(n," "),T(t)]," ")}};function _(e,n=""){var t;return null!==(t=null==e?void 0:e.filter((e=>e)).join(n))&&void 0!==t?t:""}function T(e){return S("{\n",k(_(e,"\n")),"\n}")}function S(e,n,t=""){return null!=n&&""!==n?e+n+t:""}function k(e){return S("  ",e.replace(/\n/g,"\n  "))}function E(e){var n;return null!==(n=null==e?void 0:e.some((e=>e.includes("\n"))))&&void 0!==n&&n}}},n={};function t(r){var i=n[r];if(void 0!==i)return i.exports;var a=n[r]={exports:{}};return e[r](a,a.exports,t),a.exports}t.d=(e,n)=>{for(var r in n)t.o(n,r)&&!t.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:n[r]})},t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n);var r=t(854);document.addEventListener("DOMContentLoaded",(function(){var e=document.getElementById("api-form");null==e||e.addEventListener("submit",(function(e){return n=void 0,t=void 0,a=function(){var n,t,i,a,o;return function(e,n){var t,r,i,a={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]},o=Object.create(("function"==typeof Iterator?Iterator:Object).prototype);return o.next=d(0),o.throw=d(1),o.return=d(2),"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function d(d){return function(s){return function(d){if(t)throw new TypeError("Generator is already executing.");for(;o&&(o=0,d[0]&&(a=0)),a;)try{if(t=1,r&&(i=2&d[0]?r.return:d[0]?r.throw||((i=r.return)&&i.call(r),0):r.next)&&!(i=i.call(r,d[1])).done)return i;switch(r=0,i&&(d=[2&d[0],i.value]),d[0]){case 0:case 1:i=d;break;case 4:return a.label++,{value:d[1],done:!1};case 5:a.label++,r=d[1],d=[0];continue;case 7:d=a.ops.pop(),a.trys.pop();continue;default:if(!((i=(i=a.trys).length>0&&i[i.length-1])||6!==d[0]&&2!==d[0])){a=0;continue}if(3===d[0]&&(!i||d[1]>i[0]&&d[1]<i[3])){a.label=d[1];break}if(6===d[0]&&a.label<i[1]){a.label=i[1],i=d;break}if(i&&a.label<i[2]){a.label=i[2],a.ops.push(d);break}i[2]&&a.ops.pop(),a.trys.pop();continue}d=n.call(e,a)}catch(e){d=[6,e],r=0}finally{t=i=0}if(5&d[0])throw d[1];return{value:d[0]?d[1]:void 0,done:!0}}([d,s])}}}(this,(function(d){if(e.preventDefault(),n=null===(a=document.getElementById("apiKey"))||void 0===a?void 0:a.value.trim(),t=null===(o=document.getElementById("apiSecret"))||void 0===o?void 0:o.value.trim(),i=document.getElementById("status"),!n||!t)return i.textContent="API Key and Secret are required.",[2];try{Office.context.document.settings.set("apiKey",n),Office.context.document.settings.set("apiSecret",t),Office.context.document.settings.saveAsync(),i.textContent="Credentials saved!",(0,r.kV)(),console.log("A")}catch(e){i.textContent="Error: ".concat(e.message)}return[2]}))},new((i=void 0)||(i=Promise))((function(e,r){function o(e){try{s(a.next(e))}catch(e){r(e)}}function d(e){try{s(a.throw(e))}catch(e){r(e)}}function s(n){var t;n.done?e(n.value):(t=n.value,t instanceof i?t:new i((function(e){e(t)}))).then(o,d)}s((a=a.apply(n,t||[])).next())}));var n,t,i,a}))}))})();