!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports.taskpane=t():e.taskpane=t()}(this,(()=>(()=>{"use strict";async function e(e,t){if("undefined"!=typeof Office&&Office.context&&"undefined"!=typeof OfficeRuntime&&OfficeRuntime.storage)await OfficeRuntime.storage.setItem(e,t);else{if("undefined"==typeof localStorage)throw new Error("No available storage method to set data.");try{const o=Office?.context?.partitionKey,n=o?`${o}${e}`:e;localStorage.setItem(n,t)}catch(e){throw console.error("Failed to set item in localStorage:",e),e}}}return Office.onReady((async()=>{const t=document.getElementById("api-form");function o(e){return(e||"").trim()}t.addEventListener("submit",(async n=>{n.preventDefault();const i=new FormData(t),r=o(i.get("apiKey")),a=o(i.get("apiSecret")),c=document.getElementById("status");if(r&&a)try{e("ArchitectApiKey",r),e("ArchitectApiSecret",a)}catch(e){c.textContent=`Error: ${e.message}`}else c.textContent="API Key and Secret are required."}))})),{}})()));