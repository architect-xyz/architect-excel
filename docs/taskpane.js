!function(e,n){"object"==typeof exports&&"object"==typeof module?module.exports=n():"function"==typeof define&&define.amd?define([],n):"object"==typeof exports?exports.taskpane=n():e.taskpane=n()}(this,(()=>(()=>{"use strict";var e={880:(e,n,t)=>{function r(e){const{credentials:n="same-origin",referrer:t,referrerPolicy:r,shouldRetry:a=()=>!1}=e,o=e.fetchFn||fetch,d=e.abortControllerImpl||AbortController,s=(()=>{let e=!1;const n=[];return{get disposed(){return e},onDispose:t=>e?(setTimeout((()=>t()),0),()=>{}):(n.push(t),()=>{n.splice(n.indexOf(t),1)}),dispose(){if(!e){e=!0;for(const e of[...n])e()}}}})();return{subscribe(u,c){if(s.disposed)throw new Error("Client has been disposed");const l=new d,m=s.onDispose((()=>{m(),l.abort()}));return(async()=>{var d;let s=null,m=0;for(;;){if(s){const e=await a(s,m);if(l.signal.aborted)return;if(!e)throw s;m++}try{const a="function"==typeof e.url?await e.url(u):e.url;if(l.signal.aborted)return;const s="function"==typeof e.headers?await e.headers():null!==(d=e.headers)&&void 0!==d?d:{};if(l.signal.aborted)return;let m;try{m=await o(a,{signal:l.signal,method:"POST",headers:Object.assign(Object.assign({},s),{"content-type":"application/json; charset=utf-8",accept:"application/graphql-response+json, application/json"}),credentials:n,referrer:t,referrerPolicy:r,body:JSON.stringify(u)})}catch(e){throw new i(e)}if(!m.ok)throw new i(m);if(!m.body)throw new Error("Missing response body");const p=m.headers.get("content-type");if(!p)throw new Error("Missing response content-type");if(!p.includes("application/graphql-response+json")&&!p.includes("application/json"))throw new Error(`Unsupported response content-type ${p}`);const y=await m.json();return c.next(y),l.abort()}catch(e){if(l.signal.aborted)return;if(!(e instanceof i))throw e;s=e}}})().then((()=>c.complete())).catch((e=>c.error(e))),()=>l.abort()},dispose(){s.dispose()}}}t.d(n,{initializeClient:()=>Se,setStorageItem:()=>_e});class i extends Error{constructor(e){let n,t;var r;!function(e){return"object"==typeof e&&null!==e}(r=e)||"boolean"!=typeof r.ok||"number"!=typeof r.status||"string"!=typeof r.statusText?n=e instanceof Error?e.message:String(e):(t=e,n="Server responded with "+e.status+": "+e.statusText),super(n),this.name=this.constructor.name,this.response=t}}var a,o,d="Document",s="FragmentDefinition";class u extends Error{constructor(e,n,t,r,i,a,o){super(e),this.name="GraphQLError",this.message=e,i&&(this.path=i),n&&(this.nodes=Array.isArray(n)?n:[n]),t&&(this.source=t),r&&(this.positions=r),a&&(this.originalError=a);var d=o;if(!d&&a){var s=a.extensions;s&&"object"==typeof s&&(d=s)}this.extensions=d||{}}toJSON(){return{...this,message:this.message}}toString(){return this.message}get[Symbol.toStringTag](){return"GraphQLError"}}function c(e){return new u(`Syntax Error: Unexpected token at ${o} in ${e}`)}function l(e){if(e.lastIndex=o,e.test(a))return a.slice(o,o=e.lastIndex)}var m=/ +(?=[^\s])/y;function p(e){for(var n=e.split("\n"),t="",r=0,i=0,a=n.length-1,o=0;o<n.length;o++)m.lastIndex=0,m.test(n[o])&&(o&&(!r||m.lastIndex<r)&&(r=m.lastIndex),i=i||o,a=o);for(var d=i;d<=a;d++)d!==i&&(t+="\n"),t+=n[d].slice(r).replace(/\\"""/g,'"""');return t}function y(){for(var e=0|a.charCodeAt(o++);9===e||10===e||13===e||32===e||35===e||44===e||65279===e;e=0|a.charCodeAt(o++))if(35===e)for(;10!==(e=a.charCodeAt(o++))&&13!==e;);o--}var f,I=/[_A-Za-z]\w*/y,h=new RegExp("(?:(null|true|false)|\\$("+I.source+')|(-?\\d+)((?:\\.\\d+)?[eE][+-]?\\d+|\\.\\d+)?|("""(?:"""|(?:[\\s\\S]*?[^\\\\])"""))|("(?:"|[^\\r\\n]*?[^\\\\]"))|('+I.source+"))","y"),v=((f=v||{})[f.Const=1]="Const",f[f.Var=2]="Var",f[f.Int=3]="Int",f[f.Float=4]="Float",f[f.BlockString=5]="BlockString",f[f.String=6]="String",f[f.Enum=7]="Enum",f),g=/\\/;function O(e){var n,t;if(h.lastIndex=o,91===a.charCodeAt(o)){o++,y();for(var r=[];93!==a.charCodeAt(o);)r.push(O(e));return o++,y(),{kind:"ListValue",values:r}}if(123===a.charCodeAt(o)){o++,y();for(var i=[];125!==a.charCodeAt(o);){if(null==(n=l(I)))throw c("ObjectField");if(y(),58!==a.charCodeAt(o++))throw c("ObjectField");y(),i.push({kind:"ObjectField",name:{kind:"Name",value:n},value:O(e)})}return o++,y(),{kind:"ObjectValue",fields:i}}if(null!=(t=h.exec(a))){if(o=h.lastIndex,y(),null!=(n=t[v.Const]))return"null"===n?{kind:"NullValue"}:{kind:"BooleanValue",value:"true"===n};if(null!=(n=t[v.Var])){if(e)throw c("Variable");return{kind:"Variable",name:{kind:"Name",value:n}}}var d;if(null!=(n=t[v.Int]))return null!=(d=t[v.Float])?{kind:"FloatValue",value:n+d}:{kind:"IntValue",value:n};if(null!=(n=t[v.BlockString]))return{kind:"StringValue",value:p(n.slice(3,-3)),block:!0};if(null!=(n=t[v.String]))return{kind:"StringValue",value:g.test(n)?JSON.parse(n):n.slice(1,-1),block:!1};if(null!=(n=t[v.Enum]))return{kind:"EnumValue",value:n}}throw c("Value")}function _(e){if(40===a.charCodeAt(o)){var n,t=[];o++,y();do{if(null==(n=l(I)))throw c("Argument");if(y(),58!==a.charCodeAt(o++))throw c("Argument");y(),t.push({kind:"Argument",name:{kind:"Name",value:n},value:O(e)})}while(41!==a.charCodeAt(o));return o++,y(),t}}function T(e){if(64===a.charCodeAt(o)){var n,t=[];do{if(o++,null==(n=l(I)))throw c("Directive");y(),t.push({kind:"Directive",name:{kind:"Name",value:n},arguments:_(e)})}while(64===a.charCodeAt(o));return t}}function S(){for(var e,n=0;91===a.charCodeAt(o);)n++,o++,y();if(null==(e=l(I)))throw c("NamedType");y();var t={kind:"NamedType",name:{kind:"Name",value:e}};do{if(33===a.charCodeAt(o)&&(o++,y(),t={kind:"NonNullType",type:t}),n){if(93!==a.charCodeAt(o++))throw c("NamedType");y(),t={kind:"ListType",type:t}}}while(n--);return t}var k=new RegExp("(?:(\\.{3})|("+I.source+"))","y"),E=function(e){return e[e.Spread=1]="Spread",e[e.Name=2]="Name",e}(E||{});function A(){var e,n,t=[];do{if(k.lastIndex=o,null==(n=k.exec(a)))throw c("SelectionSet");if(o=k.lastIndex,null!=n[E.Spread]){y();var r=l(I);if(null!=r&&"on"!==r)y(),t.push({kind:"FragmentSpread",name:{kind:"Name",value:r},directives:T(!1)});else{if(y(),"on"===r){if(null==(r=l(I)))throw c("NamedType");y()}var i=T(!1);if(123!==a.charCodeAt(o++))throw c("InlineFragment");y(),t.push({kind:"InlineFragment",typeCondition:r?{kind:"NamedType",name:{kind:"Name",value:r}}:void 0,directives:i,selectionSet:A()})}}else if(null!=(e=n[E.Name])){var d=void 0;if(y(),58===a.charCodeAt(o)){if(o++,y(),d=e,null==(e=l(I)))throw c("Field");y()}var s=_(!1);y();var u=T(!1),m=void 0;123===a.charCodeAt(o)&&(o++,y(),m=A()),t.push({kind:"Field",alias:d?{kind:"Name",value:d}:void 0,name:{kind:"Name",value:e},arguments:s,directives:u,selectionSet:m})}}while(125!==a.charCodeAt(o));return o++,y(),{kind:"SelectionSet",selections:t}}function $(){var e,n;if(null==(e=l(I)))throw c("FragmentDefinition");if(y(),"on"!==l(I))throw c("FragmentDefinition");if(y(),null==(n=l(I)))throw c("FragmentDefinition");y();var t=T(!1);if(123!==a.charCodeAt(o++))throw c("FragmentDefinition");return y(),{kind:"FragmentDefinition",name:{kind:"Name",value:e},typeCondition:{kind:"NamedType",name:{kind:"Name",value:n}},directives:t,selectionSet:A()}}var N=/(?:query|mutation|subscription|fragment)/y;function x(e){var n,t,r;if(e&&(y(),n=l(I),t=function(){if(y(),40===a.charCodeAt(o)){var e,n=[];o++,y();do{if(36!==a.charCodeAt(o++))throw c("Variable");if(null==(e=l(I)))throw c("Variable");if(y(),58!==a.charCodeAt(o++))throw c("VariableDefinition");y();var t=S(),r=void 0;61===a.charCodeAt(o)&&(o++,y(),r=O(!0)),y(),n.push({kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:e}},type:t,defaultValue:r,directives:T(!0)})}while(41!==a.charCodeAt(o));return o++,y(),n}}(),r=T(!1)),123===a.charCodeAt(o))return o++,y(),{kind:"OperationDefinition",operation:e||"query",name:n?{kind:"Name",value:n}:void 0,variableDefinitions:t,directives:r,selectionSet:A()}}function P(e,n){return o=0,function(e,n){var t,r;y();var i,a=[];do{if("fragment"===(t=l(N)))y(),a.push($());else{if(null==(r=x(t)))throw c("Document");a.push(r)}}while(o<e.length);return n?{kind:"Document",definitions:a}:{kind:"Document",definitions:a,set loc(e){i=e},get loc(){return i||(i={start:0,end:e.length,startToken:void 0,endToken:void 0,source:{body:e,name:"graphql.web",locationOffset:{line:1,column:1}}}),i}}}(a="string"==typeof e.body?e.body:e,n&&n.noLocation)}var C=0,b=new Set;function D(){function e(e,n){var t,r,i=P(e).definitions,a=new Set;for(var o of n||[])for(var u of o.definitions)u.kind!==s||a.has(u)||(i.push(u),a.add(u));return(t=i[0].kind===s)&&i[0].directives&&(i[0].directives=i[0].directives.filter((e=>"_unmask"!==e.name.value))),{kind:d,definitions:i,get loc(){if(!r&&t){var i=e+function(e){try{C++;var n="";for(var t of e)if(!b.has(t)){b.add(t);var{loc:r}=t;r&&(n+=r.source.body)}return n}finally{0==--C&&b.clear()}}(n||[]);return{start:0,end:i.length,source:{body:i,name:"GraphQLTada",locationOffset:{line:1,column:1}}}}return r},set loc(e){r=e}}}return e.scalar=function(e,n){return n},e.persisted=function(e,n){return{kind:d,definitions:n?n.definitions:[],documentId:e}},e}function F(e){return 9===e||32===e}D();const w=/[\x00-\x1f\x22\x5c\x7f-\x9f]/g;function M(e){return R[e.charCodeAt(0)]}const R=["\\u0000","\\u0001","\\u0002","\\u0003","\\u0004","\\u0005","\\u0006","\\u0007","\\b","\\t","\\n","\\u000B","\\f","\\r","\\u000E","\\u000F","\\u0010","\\u0011","\\u0012","\\u0013","\\u0014","\\u0015","\\u0016","\\u0017","\\u0018","\\u0019","\\u001A","\\u001B","\\u001C","\\u001D","\\u001E","\\u001F","","",'\\"',"","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","\\\\","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","\\u007F","\\u0080","\\u0081","\\u0082","\\u0083","\\u0084","\\u0085","\\u0086","\\u0087","\\u0088","\\u0089","\\u008A","\\u008B","\\u008C","\\u008D","\\u008E","\\u008F","\\u0090","\\u0091","\\u0092","\\u0093","\\u0094","\\u0095","\\u0096","\\u0097","\\u0098","\\u0099","\\u009A","\\u009B","\\u009C","\\u009D","\\u009E","\\u009F"];function j(e,n){if(!Boolean(e))throw new Error(n)}function L(e){return q(e,[])}function q(e,n){switch(typeof e){case"string":return JSON.stringify(e);case"function":return e.name?`[function ${e.name}]`:"[function]";case"object":return function(e,n){if(null===e)return"null";if(n.includes(e))return"[Circular]";const t=[...n,e];if(function(e){return"function"==typeof e.toJSON}(e)){const n=e.toJSON();if(n!==e)return"string"==typeof n?n:q(n,t)}else if(Array.isArray(e))return function(e,n){if(0===e.length)return"[]";if(n.length>2)return"[Array]";const t=Math.min(10,e.length),r=e.length-t,i=[];for(let r=0;r<t;++r)i.push(q(e[r],n));return 1===r?i.push("... 1 more item"):r>1&&i.push(`... ${r} more items`),"["+i.join(", ")+"]"}(e,t);return function(e,n){const t=Object.entries(e);if(0===t.length)return"{}";if(n.length>2)return"["+function(e){const n=Object.prototype.toString.call(e).replace(/^\[object /,"").replace(/]$/,"");if("Object"===n&&"function"==typeof e.constructor){const n=e.constructor.name;if("string"==typeof n&&""!==n)return n}return n}(e)+"]";const r=t.map((([e,t])=>e+": "+q(t,n)));return"{ "+r.join(", ")+" }"}(e,t)}(e,n);default:return String(e)}}Symbol.toStringTag,Symbol.toStringTag;const V={Name:[],Document:["definitions"],OperationDefinition:["name","variableDefinitions","directives","selectionSet"],VariableDefinition:["variable","type","defaultValue","directives"],Variable:["name"],SelectionSet:["selections"],Field:["alias","name","arguments","directives","selectionSet"],Argument:["name","value"],FragmentSpread:["name","directives"],InlineFragment:["typeCondition","directives","selectionSet"],FragmentDefinition:["name","variableDefinitions","typeCondition","directives","selectionSet"],IntValue:[],FloatValue:[],StringValue:[],BooleanValue:[],NullValue:[],EnumValue:[],ListValue:["values"],ObjectValue:["fields"],ObjectField:["name","value"],Directive:["name","arguments"],NamedType:["name"],ListType:["type"],NonNullType:["type"],SchemaDefinition:["description","directives","operationTypes"],OperationTypeDefinition:["type"],ScalarTypeDefinition:["description","name","directives"],ObjectTypeDefinition:["description","name","interfaces","directives","fields"],FieldDefinition:["description","name","arguments","type","directives"],InputValueDefinition:["description","name","type","defaultValue","directives"],InterfaceTypeDefinition:["description","name","interfaces","directives","fields"],UnionTypeDefinition:["description","name","directives","types"],EnumTypeDefinition:["description","name","directives","values"],EnumValueDefinition:["description","name","directives"],InputObjectTypeDefinition:["description","name","directives","fields"],DirectiveDefinition:["description","name","arguments","locations"],SchemaExtension:["directives","operationTypes"],ScalarTypeExtension:["name","directives"],ObjectTypeExtension:["name","interfaces","directives","fields"],InterfaceTypeExtension:["name","interfaces","directives","fields"],UnionTypeExtension:["name","directives","types"],EnumTypeExtension:["name","directives","values"],InputObjectTypeExtension:["name","directives","fields"]},U=new Set(Object.keys(V));function B(e){const n=null==e?void 0:e.kind;return"string"==typeof n&&U.has(n)}var K,G,z;!function(e){e.QUERY="query",e.MUTATION="mutation",e.SUBSCRIPTION="subscription"}(K||(K={})),(z=G||(G={})).NAME="Name",z.DOCUMENT="Document",z.OPERATION_DEFINITION="OperationDefinition",z.VARIABLE_DEFINITION="VariableDefinition",z.SELECTION_SET="SelectionSet",z.FIELD="Field",z.ARGUMENT="Argument",z.FRAGMENT_SPREAD="FragmentSpread",z.INLINE_FRAGMENT="InlineFragment",z.FRAGMENT_DEFINITION="FragmentDefinition",z.VARIABLE="Variable",z.INT="IntValue",z.FLOAT="FloatValue",z.STRING="StringValue",z.BOOLEAN="BooleanValue",z.NULL="NullValue",z.ENUM="EnumValue",z.LIST="ListValue",z.OBJECT="ObjectValue",z.OBJECT_FIELD="ObjectField",z.DIRECTIVE="Directive",z.NAMED_TYPE="NamedType",z.LIST_TYPE="ListType",z.NON_NULL_TYPE="NonNullType",z.SCHEMA_DEFINITION="SchemaDefinition",z.OPERATION_TYPE_DEFINITION="OperationTypeDefinition",z.SCALAR_TYPE_DEFINITION="ScalarTypeDefinition",z.OBJECT_TYPE_DEFINITION="ObjectTypeDefinition",z.FIELD_DEFINITION="FieldDefinition",z.INPUT_VALUE_DEFINITION="InputValueDefinition",z.INTERFACE_TYPE_DEFINITION="InterfaceTypeDefinition",z.UNION_TYPE_DEFINITION="UnionTypeDefinition",z.ENUM_TYPE_DEFINITION="EnumTypeDefinition",z.ENUM_VALUE_DEFINITION="EnumValueDefinition",z.INPUT_OBJECT_TYPE_DEFINITION="InputObjectTypeDefinition",z.DIRECTIVE_DEFINITION="DirectiveDefinition",z.SCHEMA_EXTENSION="SchemaExtension",z.SCALAR_TYPE_EXTENSION="ScalarTypeExtension",z.OBJECT_TYPE_EXTENSION="ObjectTypeExtension",z.INTERFACE_TYPE_EXTENSION="InterfaceTypeExtension",z.UNION_TYPE_EXTENSION="UnionTypeExtension",z.ENUM_TYPE_EXTENSION="EnumTypeExtension",z.INPUT_OBJECT_TYPE_EXTENSION="InputObjectTypeExtension";const Q=Object.freeze({});function Y(e,n){const t=e[n];return"object"==typeof t?t:"function"==typeof t?{enter:t,leave:void 0}:{enter:e.enter,leave:e.leave}}const H={Name:{leave:e=>e.value},Variable:{leave:e=>"$"+e.name},Document:{leave:e=>W(e.definitions,"\n\n")},OperationDefinition:{leave(e){const n=X("(",W(e.variableDefinitions,", "),")"),t=W([e.operation,W([e.name,n]),W(e.directives," ")]," ");return("query"===t?"":t+" ")+e.selectionSet}},VariableDefinition:{leave:({variable:e,type:n,defaultValue:t,directives:r})=>e+": "+n+X(" = ",t)+X(" ",W(r," "))},SelectionSet:{leave:({selections:e})=>J(e)},Field:{leave({alias:e,name:n,arguments:t,directives:r,selectionSet:i}){const a=X("",e,": ")+n;let o=a+X("(",W(t,", "),")");return o.length>80&&(o=a+X("(\n",Z(W(t,"\n")),"\n)")),W([o,W(r," "),i]," ")}},Argument:{leave:({name:e,value:n})=>e+": "+n},FragmentSpread:{leave:({name:e,directives:n})=>"..."+e+X(" ",W(n," "))},InlineFragment:{leave:({typeCondition:e,directives:n,selectionSet:t})=>W(["...",X("on ",e),W(n," "),t]," ")},FragmentDefinition:{leave:({name:e,typeCondition:n,variableDefinitions:t,directives:r,selectionSet:i})=>`fragment ${e}${X("(",W(t,", "),")")} on ${n} ${X("",W(r," ")," ")}`+i},IntValue:{leave:({value:e})=>e},FloatValue:{leave:({value:e})=>e},StringValue:{leave:({value:e,block:n})=>n?function(e){const n=e.replace(/"""/g,'\\"""'),t=n.split(/\r\n|[\n\r]/g),r=1===t.length,i=t.length>1&&t.slice(1).every((e=>0===e.length||F(e.charCodeAt(0)))),a=n.endsWith('\\"""'),o=e.endsWith('"')&&!a,d=e.endsWith("\\"),s=o||d,u=!r||e.length>70||s||i||a;let c="";const l=r&&F(e.charCodeAt(0));return(u&&!l||i)&&(c+="\n"),c+=n,(u||s)&&(c+="\n"),'"""'+c+'"""'}(e):`"${e.replace(w,M)}"`},BooleanValue:{leave:({value:e})=>e?"true":"false"},NullValue:{leave:()=>"null"},EnumValue:{leave:({value:e})=>e},ListValue:{leave:({values:e})=>"["+W(e,", ")+"]"},ObjectValue:{leave:({fields:e})=>"{"+W(e,", ")+"}"},ObjectField:{leave:({name:e,value:n})=>e+": "+n},Directive:{leave:({name:e,arguments:n})=>"@"+e+X("(",W(n,", "),")")},NamedType:{leave:({name:e})=>e},ListType:{leave:({type:e})=>"["+e+"]"},NonNullType:{leave:({type:e})=>e+"!"},SchemaDefinition:{leave:({description:e,directives:n,operationTypes:t})=>X("",e,"\n")+W(["schema",W(n," "),J(t)]," ")},OperationTypeDefinition:{leave:({operation:e,type:n})=>e+": "+n},ScalarTypeDefinition:{leave:({description:e,name:n,directives:t})=>X("",e,"\n")+W(["scalar",n,W(t," ")]," ")},ObjectTypeDefinition:{leave:({description:e,name:n,interfaces:t,directives:r,fields:i})=>X("",e,"\n")+W(["type",n,X("implements ",W(t," & ")),W(r," "),J(i)]," ")},FieldDefinition:{leave:({description:e,name:n,arguments:t,type:r,directives:i})=>X("",e,"\n")+n+(ee(t)?X("(\n",Z(W(t,"\n")),"\n)"):X("(",W(t,", "),")"))+": "+r+X(" ",W(i," "))},InputValueDefinition:{leave:({description:e,name:n,type:t,defaultValue:r,directives:i})=>X("",e,"\n")+W([n+": "+t,X("= ",r),W(i," ")]," ")},InterfaceTypeDefinition:{leave:({description:e,name:n,interfaces:t,directives:r,fields:i})=>X("",e,"\n")+W(["interface",n,X("implements ",W(t," & ")),W(r," "),J(i)]," ")},UnionTypeDefinition:{leave:({description:e,name:n,directives:t,types:r})=>X("",e,"\n")+W(["union",n,W(t," "),X("= ",W(r," | "))]," ")},EnumTypeDefinition:{leave:({description:e,name:n,directives:t,values:r})=>X("",e,"\n")+W(["enum",n,W(t," "),J(r)]," ")},EnumValueDefinition:{leave:({description:e,name:n,directives:t})=>X("",e,"\n")+W([n,W(t," ")]," ")},InputObjectTypeDefinition:{leave:({description:e,name:n,directives:t,fields:r})=>X("",e,"\n")+W(["input",n,W(t," "),J(r)]," ")},DirectiveDefinition:{leave:({description:e,name:n,arguments:t,repeatable:r,locations:i})=>X("",e,"\n")+"directive @"+n+(ee(t)?X("(\n",Z(W(t,"\n")),"\n)"):X("(",W(t,", "),")"))+(r?" repeatable":"")+" on "+W(i," | ")},SchemaExtension:{leave:({directives:e,operationTypes:n})=>W(["extend schema",W(e," "),J(n)]," ")},ScalarTypeExtension:{leave:({name:e,directives:n})=>W(["extend scalar",e,W(n," ")]," ")},ObjectTypeExtension:{leave:({name:e,interfaces:n,directives:t,fields:r})=>W(["extend type",e,X("implements ",W(n," & ")),W(t," "),J(r)]," ")},InterfaceTypeExtension:{leave:({name:e,interfaces:n,directives:t,fields:r})=>W(["extend interface",e,X("implements ",W(n," & ")),W(t," "),J(r)]," ")},UnionTypeExtension:{leave:({name:e,directives:n,types:t})=>W(["extend union",e,W(n," "),X("= ",W(t," | "))]," ")},EnumTypeExtension:{leave:({name:e,directives:n,values:t})=>W(["extend enum",e,W(n," "),J(t)]," ")},InputObjectTypeExtension:{leave:({name:e,directives:n,fields:t})=>W(["extend input",e,W(n," "),J(t)]," ")}};function W(e,n=""){var t;return null!==(t=null==e?void 0:e.filter((e=>e)).join(n))&&void 0!==t?t:""}function J(e){return X("{\n",Z(W(e,"\n")),"\n}")}function X(e,n,t=""){return null!=n&&""!==n?e+n+t:""}function Z(e){return X("  ",e.replace(/\n/g,"\n  "))}function ee(e){var n;return null!==(n=null==e?void 0:e.some((e=>e.includes("\n"))))&&void 0!==n&&n}const ne=D();class te{client;constructor(e,n){const t="live"===e.tradingMode?"4567":"6789",r=e.host.includes(t)?e.host:e.host.replace(/\/$/,`:${t}/`),i={Authorization:`Basic ${e.apiKey} ${e.apiSecret}`};"paper"===e.tradingMode&&(i["x-architect-account-mode"]="paper"),this.client=n({url:`${r}graphql`,headers:i})}parse(e){return ne(e)}async execute(e,n){return new Promise(((t,r)=>{let i;var a;this.client.subscribe({query:(a=e,function(e,n,t=V){const r=new Map;for(const e of Object.values(G))r.set(e,Y(n,e));let i,a,o,d=Array.isArray(e),s=[e],u=-1,c=[],l=e;const m=[],p=[];do{u++;const e=u===s.length,h=e&&0!==c.length;if(e){if(a=0===p.length?void 0:m[m.length-1],l=o,o=p.pop(),h)if(d){l=l.slice();let e=0;for(const[n,t]of c){const r=n-e;null===t?(l.splice(r,1),e++):l[r]=t}}else{l=Object.defineProperties({},Object.getOwnPropertyDescriptors(l));for(const[e,n]of c)l[e]=n}u=i.index,s=i.keys,c=i.edits,d=i.inArray,i=i.prev}else if(o){if(a=d?u:s[u],l=o[a],null==l)continue;m.push(a)}let v;if(!Array.isArray(l)){var y,f;B(l)||j(!1,`Invalid AST Node: ${L(l)}.`);const t=e?null===(y=r.get(l.kind))||void 0===y?void 0:y.leave:null===(f=r.get(l.kind))||void 0===f?void 0:f.enter;if(v=null==t?void 0:t.call(n,l,a,o,m,p),v===Q)break;if(!1===v){if(!e){m.pop();continue}}else if(void 0!==v&&(c.push([a,v]),!e)){if(!B(v)){m.pop();continue}l=v}}var I;void 0===v&&h&&c.push([a,l]),e?m.pop():(i={inArray:d,index:u,keys:s,edits:c,prev:i},d=Array.isArray(l),s=d?l:null!==(I=t[l.kind])&&void 0!==I?I:[],u=-1,c=[],o&&p.push(o),o=l)}while(void 0!==i);return 0!==c.length?c[c.length-1][1]:e}(a,H)),variables:n},{next:e=>{i=e.data},error:e=>r(e),complete:()=>t(i)})}))}async accountSummaries(e){return this.execute(ne(`query AccountSummaries {\n        accountSummaries {\n          __typename\n          snapshotTs\n          byAccount {\n            account {\n              id\n              name\n            }\n            balances {\n              product {\n                __typename\n                id\n                name\n                kind\n                markUsd\n              }\n              account {\n                id\n                name\n              }\n              venue {\n                id\n                name\n              }\n              amount\n              totalMargin\n              positionMargin\n              purchasingPower\n              cashExcess\n              yesterdayBalance\n            }\n            positions {\n              account {\n                id\n                name\n              }\n              venue {\n                id\n                name\n              }\n              market {\n                __typename\n                venue {\n                  id\n                  name\n                }\n                exchangeSymbol\n                id\n                cmeProductGroupInfo {\n                  productName\n                  securityType\n                  category\n                  subCategory\n                  mainFraction\n                }\n                kind {\n                  ... on ExchangeMarketKind {\n                    __typename\n                    base {\n                      __typename\n                      id\n                      name\n                      kind\n                      markUsd\n                    }\n                    quote {\n                      __typename\n                      id\n                      name\n                      kind\n                      markUsd\n                    }\n                  }\n                  ... on PoolMarketKind {\n                    __typename\n                    products {\n                      __typename\n                      id\n                      name\n                      kind\n                      markUsd\n                    }\n                  }\n                }\n                name\n                tickSize\n                stepSize\n                minOrderQuantity\n                minOrderQuantityUnit\n                route {\n                  id\n                  name\n                }\n                isFavorite\n              }\n              dir\n              quantity\n              averagePrice\n              tradeDate\n              tradeTime\n            }\n          }\n          ${e.join(" ")}\n        }\n      }`)).then((e=>e.accountSummaries))}async accountSummariesForCpty(e,n,t){return this.execute(ne(`query AccountSummariesForCpty($venue: VenueId!, $route: RouteId!) {\n        accountSummariesForCpty(venue: $venue, route: $route) {\n          __typename\n          snapshotTs\n          byAccount {\n            account {\n              id\n              name\n            }\n            balances {\n              product {\n                __typename\n                id\n                name\n                kind\n                markUsd\n              }\n              account {\n                id\n                name\n              }\n              venue {\n                id\n                name\n              }\n              amount\n              totalMargin\n              positionMargin\n              purchasingPower\n              cashExcess\n              yesterdayBalance\n            }\n            positions {\n              account {\n                id\n                name\n              }\n              venue {\n                id\n                name\n              }\n              market {\n                __typename\n                venue {\n                  id\n                  name\n                }\n                exchangeSymbol\n                id\n                cmeProductGroupInfo {\n                  productName\n                  securityType\n                  category\n                  subCategory\n                  mainFraction\n                }\n                kind {\n                  ... on ExchangeMarketKind {\n                    __typename\n                    base {\n                      __typename\n                      id\n                      name\n                      kind\n                      markUsd\n                    }\n                    quote {\n                      __typename\n                      id\n                      name\n                      kind\n                      markUsd\n                    }\n                  }\n                  ... on PoolMarketKind {\n                    __typename\n                    products {\n                      __typename\n                      id\n                      name\n                      kind\n                      markUsd\n                    }\n                  }\n                }\n                name\n                tickSize\n                stepSize\n                minOrderQuantity\n                minOrderQuantityUnit\n                route {\n                  id\n                  name\n                }\n                isFavorite\n              }\n              dir\n              quantity\n              averagePrice\n              tradeDate\n              tradeTime\n            }\n          }\n          ${e.join(" ")}\n        }\n      }`),{venue:n,route:t}).then((e=>e.accountSummariesForCpty))}async accounts(e){return this.execute(ne(`query Accounts {\n        accounts {\n          __typename\n          id\n          name\n          ${e.join(" ")}\n        }\n      }`)).then((e=>e.accounts))}async algoLog(e,n){return this.execute(ne(`query AlgoLog($orderId: OrderId!) {\n        algoLog(orderId: $orderId) { __typename ${e.join(" ")} }\n      }`),{orderId:n}).then((e=>e.algoLog))}async algoOrder(e,n){return this.execute(ne(`query AlgoOrder($orderId: OrderId!) {\n        algoOrder(orderId: $orderId) {\n          __typename\n          orderId\n          trader\n          account\n          algo\n          parentOrderId\n          markets\n          ${e.join(" ")}\n        }\n      }`),{orderId:n}).then((e=>e.algoOrder))}async algoStatus(e,n){return this.execute(ne(`query AlgoStatus($orderId: OrderId) {\n        algoStatus(orderId: $orderId) {\n          __typename\n          orderId\n          order {\n            orderId\n            trader\n            account\n            algo\n            parentOrderId\n            markets\n          }\n          creationTime\n          status\n          lastStatusChange\n          fractionComplete\n          ${e.join(" ")}\n        }\n      }`),{orderId:n}).then((e=>e.algoStatus))}async bookSnapshot(e,n,t,r,i,a){return this.execute(ne(`query BookSnapshot($numLevels: Int!, $market: MarketId!, $delayed: Boolean, $precision: Decimal, $retainSubscriptionForNSeconds: Int) {\n        bookSnapshot(numLevels: $numLevels, market: $market, delayed: $delayed, precision: $precision, retainSubscriptionForNSeconds: $retainSubscriptionForNSeconds) {\n          __typename\n          timestamp\n          bids {\n            price\n            amount\n            total\n          }\n          asks {\n            price\n            amount\n            total\n          }\n          ${e.join(" ")}\n        }\n      }`),{numLevels:n,market:t,delayed:r,precision:i,retainSubscriptionForNSeconds:a}).then((e=>e.bookSnapshot))}async cmeProductGroupInfos(e){return this.execute(ne(`query CmeProductGroupInfos {\n        cmeProductGroupInfos { __typename ${e.join(" ")} }\n      }`)).then((e=>e.cmeProductGroupInfos))}async coinInfo(e,n){return this.execute(ne(`query CoinInfo($product: ProductId!) {\n        coinInfo(product: $product) { __typename ${e.join(" ")} }\n      }`),{product:n}).then((e=>e.coinInfo))}async coinInfos(e){return this.execute(ne(`query CoinInfos {\n        coinInfos { __typename ${e.join(" ")} }\n      }`)).then((e=>e.coinInfos))}async cptys(e){return this.execute(ne(`query Cptys {\n        cptys { __typename ${e.join(" ")} }\n      }`)).then((e=>e.cptys))}async fills(e,n,t,r,i){return this.execute(ne(`query Fills($base: ProductId, $quote: ProductId, $route: RouteId, $venue: VenueId) {\n        fills(base: $base, quote: $quote, route: $route, venue: $venue) {\n          __typename\n          normal {\n            kind\n            fillId\n            orderId\n            market {\n              __typename\n              venue {\n                id\n                name\n              }\n              exchangeSymbol\n              id\n              cmeProductGroupInfo {\n                productName\n                securityType\n                category\n                subCategory\n                mainFraction\n              }\n              kind {\n                ... on ExchangeMarketKind {\n                  __typename\n                  base {\n                    __typename\n                    id\n                    name\n                    kind\n                    markUsd\n                  }\n                  quote {\n                    __typename\n                    id\n                    name\n                    kind\n                    markUsd\n                  }\n                }\n                ... on PoolMarketKind {\n                  __typename\n                  products {\n                    __typename\n                    id\n                    name\n                    kind\n                    markUsd\n                  }\n                }\n              }\n              name\n              tickSize\n              stepSize\n              minOrderQuantity\n              minOrderQuantityUnit\n              route {\n                id\n                name\n              }\n              isFavorite\n            }\n            dir\n            price\n            quantity\n            recvTime\n            tradeTime\n          }\n          ${e.join(" ")}\n        }\n      }`),{base:n,quote:t,route:r,venue:i}).then((e=>e.fills))}async filterMarkets(e,n){return this.execute(ne(`query FilterMarkets($filter: MarketFilter!) {\n        filterMarkets(filter: $filter) {\n          __typename\n          __typename\n          venue {\n            id\n            name\n          }\n          exchangeSymbol\n          id\n          cmeProductGroupInfo {\n            productName\n            securityType\n            category\n            subCategory\n            mainFraction\n          }\n          kind {\n            ... on ExchangeMarketKind {\n              __typename\n              base {\n                __typename\n                id\n                name\n                kind\n                markUsd\n              }\n              quote {\n                __typename\n                id\n                name\n                kind\n                markUsd\n              }\n            }\n            ... on PoolMarketKind {\n              __typename\n              products {\n                __typename\n                id\n                name\n                kind\n                markUsd\n              }\n            }\n          }\n          name\n          tickSize\n          stepSize\n          minOrderQuantity\n          minOrderQuantityUnit\n          route {\n            id\n            name\n          }\n          isFavorite\n          ${e.join(" ")}\n        }\n      }`),{filter:n}).then((e=>e.filterMarkets))}async historicalCandles(e,n,t,r,i){return this.execute(ne(`query HistoricalCandles($width: CandleWidth!, $start: DateTime!, $id: MarketId!, $end: DateTime!) {\n        historicalCandles(width: $width, start: $start, id: $id, end: $end) { __typename ${e.join(" ")} }\n      }`),{width:n,start:t,id:r,end:i}).then((e=>e.historicalCandles))}async listApiKeys(e){return this.execute(ne(`query ListApiKeys {\n        listApiKeys { __typename ${e.join(" ")} }\n      }`)).then((e=>e.listApiKeys))}async market(e,n){return this.execute(ne(`query Market($id: MarketId!) {\n        market(id: $id) {\n          __typename\n          __typename\n          venue {\n            id\n            name\n          }\n          exchangeSymbol\n          id\n          cmeProductGroupInfo {\n            productName\n            securityType\n            category\n            subCategory\n            mainFraction\n          }\n          kind {\n            ... on ExchangeMarketKind {\n              __typename\n              base {\n                __typename\n                id\n                name\n                kind\n                markUsd\n              }\n              quote {\n                __typename\n                id\n                name\n                kind\n                markUsd\n              }\n            }\n            ... on PoolMarketKind {\n              __typename\n              products {\n                __typename\n                id\n                name\n                kind\n                markUsd\n              }\n            }\n          }\n          name\n          tickSize\n          stepSize\n          minOrderQuantity\n          minOrderQuantityUnit\n          route {\n            id\n            name\n          }\n          isFavorite\n          ${e.join(" ")}\n        }\n      }`),{id:n}).then((e=>e.market))}async marketSnapshot(e,n,t){return this.execute(ne(`query MarketSnapshot($market: MarketId!, $latestAtOrBefore: DateTime) {\n        marketSnapshot(market: $market, latestAtOrBefore: $latestAtOrBefore) {\n          __typename\n          __typename\n          marketId\n          market {\n            name\n          }\n          high24h\n          lastPrice\n          low24h\n          volume24h\n          open24h\n          bidPrice\n          askPrice\n          ${e.join(" ")}\n        }\n      }`),{market:n,latestAtOrBefore:t}).then((e=>e.marketSnapshot))}async markets(e,n){return this.execute(ne(`query Markets($id: [MarketId!]!) {\n        markets(id: $id) {\n          __typename\n          __typename\n          venue {\n            id\n            name\n          }\n          exchangeSymbol\n          id\n          cmeProductGroupInfo {\n            productName\n            securityType\n            category\n            subCategory\n            mainFraction\n          }\n          kind {\n            ... on ExchangeMarketKind {\n              __typename\n              base {\n                __typename\n                id\n                name\n                kind\n                markUsd\n              }\n              quote {\n                __typename\n                id\n                name\n                kind\n                markUsd\n              }\n            }\n            ... on PoolMarketKind {\n              __typename\n              products {\n                __typename\n                id\n                name\n                kind\n                markUsd\n              }\n            }\n          }\n          name\n          tickSize\n          stepSize\n          minOrderQuantity\n          minOrderQuantityUnit\n          route {\n            id\n            name\n          }\n          isFavorite\n          ${e.join(" ")}\n        }\n      }`),{id:n}).then((e=>e.markets))}async marketsSnapshots(e,n){return this.execute(ne(`query MarketsSnapshots($latestAtOrBefore: DateTime) {\n        marketsSnapshots(latestAtOrBefore: $latestAtOrBefore) {\n          __typename\n          __typename\n          marketId\n          market {\n            name\n          }\n          high24h\n          lastPrice\n          low24h\n          volume24h\n          open24h\n          bidPrice\n          askPrice\n          ${e.join(" ")}\n        }\n      }`),{latestAtOrBefore:n}).then((e=>e.marketsSnapshots))}async me(e){return this.execute(ne(`query Me {\n        me { __typename ${e.join(" ")} }\n      }`)).then((e=>e.me))}async mmAlgoOrder(e,n){return this.execute(ne(`query MmAlgoOrder($orderId: OrderId!) {\n        mmAlgoOrder(orderId: $orderId) {\n          __typename\n          name\n          orderId\n          marketId\n          quantityBuy\n          quantitySell\n          minPosition\n          maxPosition\n          maxImproveBbo\n          positionTilt\n          referencePrice\n          refDistFrac\n          toleranceFrac\n          account\n          ${e.join(" ")}\n        }\n      }`),{orderId:n}).then((e=>e.mmAlgoOrder))}async mmAlgoStatus(e,n){return this.execute(ne(`query MmAlgoStatus($orderId: OrderId) {\n        mmAlgoStatus(orderId: $orderId) {\n          __typename\n          orderId\n          order {\n            name\n            orderId\n            marketId\n            quantityBuy\n            quantitySell\n            minPosition\n            maxPosition\n            maxImproveBbo\n            positionTilt\n            referencePrice\n            refDistFrac\n            toleranceFrac\n            account\n          }\n          creationTime\n          status\n          position\n          hedgePosition\n          missRatio\n          effectiveSpread\n          buyStatus {\n            lastOrderTime\n            lastFillTime\n            lastRejectTime\n            openOrder {\n              orderId\n              price\n              quantity\n              cancelPending\n            }\n            referencePrice\n          }\n          sellStatus {\n            lastOrderTime\n            lastFillTime\n            lastRejectTime\n            openOrder {\n              orderId\n              price\n              quantity\n              cancelPending\n            }\n            referencePrice\n          }\n          kind\n          ${e.join(" ")}\n        }\n      }`),{orderId:n}).then((e=>e.mmAlgoStatus))}async openOrders(e){return this.execute(ne(`query OpenOrders {\n        openOrders {\n          __typename\n          __typename\n          timestamp\n          order {\n            id\n            market {\n              __typename\n              venue {\n                id\n                name\n              }\n              exchangeSymbol\n              id\n              cmeProductGroupInfo {\n                productName\n                securityType\n                category\n                subCategory\n                mainFraction\n              }\n              kind {\n                ... on ExchangeMarketKind {\n                  __typename\n                  base {\n                    __typename\n                    id\n                    name\n                    kind\n                    markUsd\n                  }\n                  quote {\n                    __typename\n                    id\n                    name\n                    kind\n                    markUsd\n                  }\n                }\n                ... on PoolMarketKind {\n                  __typename\n                  products {\n                    __typename\n                    id\n                    name\n                    kind\n                    markUsd\n                  }\n                }\n              }\n              name\n              tickSize\n              stepSize\n              minOrderQuantity\n              minOrderQuantityUnit\n              route {\n                id\n                name\n              }\n              isFavorite\n            }\n            dir\n            quantity\n            orderType {\n              __typename\n              ... on LimitOrderType {\n                limitPrice\n              }\n              ... on StopLossLimitOrderType {\n                limitPrice\n                triggerPrice\n              }\n              ... on TakeProfitLimitOrderType {\n                limitPrice\n                triggerPrice\n              }\n            }\n            timeInForce {\n              instruction\n              goodTilDate\n            }\n          }\n          orderState\n          filledQty\n          avgFillPrice\n          rejectReason\n          ${e.join(" ")}\n        }\n      }`)).then((e=>e.openOrders))}async optionsMarketSnapshots(e,n,t){return this.execute(ne(`query OptionsMarketSnapshots($underlying: ProductId!, $latestAtOrBefore: DateTime) {\n        optionsMarketSnapshots(underlying: $underlying, latestAtOrBefore: $latestAtOrBefore) { __typename ${e.join(" ")} }\n      }`),{underlying:n,latestAtOrBefore:t}).then((e=>e.optionsMarketSnapshots))}async order(e,n){return this.execute(ne(`query Order($orderId: OrderId!) {\n        order(orderId: $orderId) {\n          __typename\n          __typename\n          timestamp\n          order {\n            id\n            market {\n              __typename\n              venue {\n                id\n                name\n              }\n              exchangeSymbol\n              id\n              cmeProductGroupInfo {\n                productName\n                securityType\n                category\n                subCategory\n                mainFraction\n              }\n              kind {\n                ... on ExchangeMarketKind {\n                  __typename\n                  base {\n                    __typename\n                    id\n                    name\n                    kind\n                    markUsd\n                  }\n                  quote {\n                    __typename\n                    id\n                    name\n                    kind\n                    markUsd\n                  }\n                }\n                ... on PoolMarketKind {\n                  __typename\n                  products {\n                    __typename\n                    id\n                    name\n                    kind\n                    markUsd\n                  }\n                }\n              }\n              name\n              tickSize\n              stepSize\n              minOrderQuantity\n              minOrderQuantityUnit\n              route {\n                id\n                name\n              }\n              isFavorite\n            }\n            dir\n            quantity\n            orderType {\n              __typename\n              ... on LimitOrderType {\n                limitPrice\n              }\n              ... on StopLossLimitOrderType {\n                limitPrice\n                triggerPrice\n              }\n              ... on TakeProfitLimitOrderType {\n                limitPrice\n                triggerPrice\n              }\n            }\n            timeInForce {\n              instruction\n              goodTilDate\n            }\n          }\n          orderState\n          filledQty\n          avgFillPrice\n          rejectReason\n          ${e.join(" ")}\n        }\n      }`),{orderId:n}).then((e=>e.order))}async outedOrders(e,n,t){return this.execute(ne(`query OutedOrders($fromInclusive: DateTime, $toExclusive: DateTime) {\n        outedOrders(fromInclusive: $fromInclusive, toExclusive: $toExclusive) {\n          __typename\n          __typename\n          timestamp\n          order {\n            id\n            market {\n              __typename\n              venue {\n                id\n                name\n              }\n              exchangeSymbol\n              id\n              cmeProductGroupInfo {\n                productName\n                securityType\n                category\n                subCategory\n                mainFraction\n              }\n              kind {\n                ... on ExchangeMarketKind {\n                  __typename\n                  base {\n                    __typename\n                    id\n                    name\n                    kind\n                    markUsd\n                  }\n                  quote {\n                    __typename\n                    id\n                    name\n                    kind\n                    markUsd\n                  }\n                }\n                ... on PoolMarketKind {\n                  __typename\n                  products {\n                    __typename\n                    id\n                    name\n                    kind\n                    markUsd\n                  }\n                }\n              }\n              name\n              tickSize\n              stepSize\n              minOrderQuantity\n              minOrderQuantityUnit\n              route {\n                id\n                name\n              }\n              isFavorite\n            }\n            dir\n            quantity\n            orderType {\n              __typename\n              ... on LimitOrderType {\n                limitPrice\n              }\n              ... on StopLossLimitOrderType {\n                limitPrice\n                triggerPrice\n              }\n              ... on TakeProfitLimitOrderType {\n                limitPrice\n                triggerPrice\n              }\n            }\n            timeInForce {\n              instruction\n              goodTilDate\n            }\n          }\n          orderState\n          filledQty\n          avgFillPrice\n          rejectReason\n          ${e.join(" ")}\n        }\n      }`),{fromInclusive:n,toExclusive:t}).then((e=>e.outedOrders))}async povOrder(e,n){return this.execute(ne(`query PovOrder($orderId: OrderId!) {\n        povOrder(orderId: $orderId) {\n          __typename\n          name\n          orderId\n          marketId\n          dir\n          targetVolumeFrac\n          minOrderQuantity\n          maxQuantity\n          endTime\n          accountId\n          takeThroughFrac\n          ${e.join(" ")}\n        }\n      }`),{orderId:n}).then((e=>e.povOrder))}async povStatus(e,n){return this.execute(ne(`query PovStatus($orderId: OrderId) {\n        povStatus(orderId: $orderId) {\n          __typename\n          orderId\n          order {\n            name\n            orderId\n            marketId\n            dir\n            targetVolumeFrac\n            minOrderQuantity\n            maxQuantity\n            endTime\n            accountId\n            takeThroughFrac\n          }\n          creationTime\n          status\n          fractionComplete\n          realizedVolumeFrac\n          marketVolume\n          quantityFilled\n          ${e.join(" ")}\n        }\n      }`),{orderId:n}).then((e=>e.povStatus))}async product(e,n){return this.execute(ne(`query Product($id: ProductId!) {\n        product(id: $id) { __typename ${e.join(" ")} }\n      }`),{id:n}).then((e=>e.product))}async products(e,n){return this.execute(ne(`query Products($id: [ProductId!]!) {\n        products(id: $id) { __typename ${e.join(" ")} }\n      }`),{id:n}).then((e=>e.products))}async route(e,n){return this.execute(ne(`query Route($id: RouteId!) {\n        route(id: $id) { __typename ${e.join(" ")} }\n      }`),{id:n}).then((e=>e.route))}async routes(e){return this.execute(ne(`query Routes {\n        routes { __typename ${e.join(" ")} }\n      }`)).then((e=>e.routes))}async smartOrderRouterOrder(e,n){return this.execute(ne(`query SmartOrderRouterOrder($orderId: OrderId!) {\n        smartOrderRouterOrder(orderId: $orderId) {\n          __typename\n          orderId\n          markets {\n            id\n          }\n          dir\n          limitPrice\n          targetSize\n          executionTimeLimitMs\n          parentOrderId\n          ${e.join(" ")}\n        }\n      }`),{orderId:n}).then((e=>e.smartOrderRouterOrder))}async smartOrderRouterStatus(e,n){return this.execute(ne(`query SmartOrderRouterStatus($orderId: OrderId) {\n        smartOrderRouterStatus(orderId: $orderId) {\n          __typename\n          status {\n            orderId\n            order {\n              orderId\n              trader\n              account\n              algo\n              parentOrderId\n              markets\n            }\n            creationTime\n            status\n            lastStatusChange\n            fractionComplete\n          }\n          order {\n            orderId\n            markets {\n              id\n            }\n            dir\n            limitPrice\n            targetSize\n            executionTimeLimitMs\n            parentOrderId\n          }\n          ${e.join(" ")}\n        }\n      }`),{orderId:n}).then((e=>e.smartOrderRouterStatus))}async spreadAlgoOrder(e,n){return this.execute(ne(`query SpreadAlgoOrder($orderId: OrderId!) {\n        spreadAlgoOrder(orderId: $orderId) {\n          __typename\n          name\n          orderId\n          marketId\n          quantityBuy\n          quantitySell\n          minPosition\n          maxPosition\n          maxImproveBbo\n          positionTilt\n          referencePrice\n          refDistFrac\n          toleranceFrac\n          account\n          ${e.join(" ")}\n        }\n      }`),{orderId:n}).then((e=>e.spreadAlgoOrder))}async spreadAlgoStatus(e,n){return this.execute(ne(`query SpreadAlgoStatus($orderId: OrderId) {\n        spreadAlgoStatus(orderId: $orderId) {\n          __typename\n          orderId\n          order {\n            name\n            orderId\n            marketId\n            quantityBuy\n            quantitySell\n            minPosition\n            maxPosition\n            maxImproveBbo\n            positionTilt\n            referencePrice\n            refDistFrac\n            toleranceFrac\n            account\n          }\n          creationTime\n          status\n          position\n          hedgePosition\n          missRatio\n          effectiveSpread\n          buyStatus {\n            lastOrderTime\n            lastFillTime\n            lastRejectTime\n            openOrder {\n              orderId\n              price\n              quantity\n              cancelPending\n            }\n            referencePrice\n          }\n          sellStatus {\n            lastOrderTime\n            lastFillTime\n            lastRejectTime\n            openOrder {\n              orderId\n              price\n              quantity\n              cancelPending\n            }\n            referencePrice\n          }\n          kind\n          ${e.join(" ")}\n        }\n      }`),{orderId:n}).then((e=>e.spreadAlgoStatus))}async tcaBalancePnl(e,n,t,r){return this.execute(ne(`query TcaBalancePnl($accountId: AccountId!, $usePurchasingPower: Boolean, $venueId: VenueId) {\n        tcaBalancePnl(accountId: $accountId, usePurchasingPower: $usePurchasingPower, venueId: $venueId) { __typename ${e.join(" ")} }\n      }`),{accountId:n,usePurchasingPower:t,venueId:r}).then((e=>e.tcaBalancePnl))}async tcaBalancePnlTimeseries(e,n,t,r,i,a){return this.execute(ne(`query TcaBalancePnlTimeseries($venueId: VenueId!, $accountId: AccountId!, $fromInclusive: DateTime, $toExclusive: DateTime, $usePurchasingPower: Boolean) {\n        tcaBalancePnlTimeseries(venueId: $venueId, accountId: $accountId, fromInclusive: $fromInclusive, toExclusive: $toExclusive, usePurchasingPower: $usePurchasingPower) { __typename ${e.join(" ")} }\n      }`),{venueId:n,accountId:t,fromInclusive:r,toExclusive:i,usePurchasingPower:a}).then((e=>e.tcaBalancePnlTimeseries))}async tcaMarks(e,n,t,r){return this.execute(ne(`query TcaMarks($toExclusive: DateTime!, $fromInclusive: DateTime!, $id: MarketId) {\n        tcaMarks(toExclusive: $toExclusive, fromInclusive: $fromInclusive, id: $id) { __typename ${e.join(" ")} }\n      }`),{toExclusive:n,fromInclusive:t,id:r}).then((e=>e.tcaMarks))}async tcaSummary(e,n,t,r,i){return this.execute(ne(`query TcaSummary($toExclusive: DateTime!, $fromInclusive: DateTime!, $currency: String, $id: MarketId) {\n        tcaSummary(toExclusive: $toExclusive, fromInclusive: $fromInclusive, currency: $currency, id: $id) { __typename ${e.join(" ")} }\n      }`),{toExclusive:n,fromInclusive:t,currency:r,id:i}).then((e=>e.tcaSummary))}async twapOrder(e,n){return this.execute(ne(`query TwapOrder($orderId: OrderId!) {\n        twapOrder(orderId: $orderId) {\n          __typename\n          name\n          orderId\n          marketId\n          dir\n          quantity\n          endTime\n          accountId\n          intervalMs\n          rejectLockoutMs\n          takeThroughFrac\n          ${e.join(" ")}\n        }\n      }`),{orderId:n}).then((e=>e.twapOrder))}async twapStatus(e,n){return this.execute(ne(`query TwapStatus($orderId: OrderId) {\n        twapStatus(orderId: $orderId) {\n          __typename\n          orderId\n          order {\n            name\n            orderId\n            marketId\n            dir\n            quantity\n            endTime\n            accountId\n            intervalMs\n            rejectLockoutMs\n            takeThroughFrac\n          }\n          creationTime\n          status\n          fractionComplete\n          realizedTwap\n          quantityFilled\n          ${e.join(" ")}\n        }\n      }`),{orderId:n}).then((e=>e.twapStatus))}async venue(e,n){return this.execute(ne(`query Venue($id: VenueId!) {\n        venue(id: $id) { __typename ${e.join(" ")} }\n      }`),{id:n}).then((e=>e.venue))}async venues(e){return this.execute(ne(`query Venues {\n        venues { __typename ${e.join(" ")} }\n      }`)).then((e=>e.venues))}async version(){return this.execute(ne("query Version {\n        version\n      }")).then((e=>e.version))}async cancelAllOrders(e){return this.execute(ne("mutation CancelAllOrders($venueId: VenueId) {\n        cancelAllOrders(venueId: $venueId)\n      }"),{venueId:e}).then((e=>e.cancelAllOrders))}async cancelOrder(e){return this.execute(ne("mutation CancelOrder($orderId: OrderId!) {\n        cancelOrder(orderId: $orderId)\n      }"),{orderId:e}).then((e=>e.cancelOrder))}async cancelOrders(e){return this.execute(ne("mutation CancelOrders($orderIds: [OrderId!]!) {\n        cancelOrders(orderIds: $orderIds)\n      }"),{orderIds:e}).then((e=>e.cancelOrders))}async createApiKey(e){return this.execute(ne(`mutation CreateApiKey {\n        createApiKey { __typename ${e.join(" ")} }\n      }`)).then((e=>e.createApiKey))}async createMmAlgo(e){return this.execute(ne("mutation CreateMmAlgo($mmAlgo: CreateMMAlgo!) {\n        createMmAlgo(mmAlgo: $mmAlgo)\n      }"),{mmAlgo:e}).then((e=>e.createMmAlgo))}async createOrder(e){return this.execute(ne("mutation CreateOrder($order: CreateOrder!) {\n        createOrder(order: $order)\n      }"),{order:e}).then((e=>e.createOrder))}async createOrders(e){return this.execute(ne("mutation CreateOrders($orders: [CreateOrder!]!) {\n        createOrders(orders: $orders)\n      }"),{orders:e}).then((e=>e.createOrders))}async createPovAlgo(e){return this.execute(ne("mutation CreatePovAlgo($povAlgo: CreatePovAlgo!) {\n        createPovAlgo(povAlgo: $povAlgo)\n      }"),{povAlgo:e}).then((e=>e.createPovAlgo))}async createSmartOrderRouterAlgo(e){return this.execute(ne("mutation CreateSmartOrderRouterAlgo($algo: CreateSmartOrderRouterAlgo!) {\n        createSmartOrderRouterAlgo(algo: $algo)\n      }"),{algo:e}).then((e=>e.createSmartOrderRouterAlgo))}async createSpreadAlgo(e){return this.execute(ne("mutation CreateSpreadAlgo($spreadAlgo: CreateSpreadAlgo!) {\n        createSpreadAlgo(spreadAlgo: $spreadAlgo)\n      }"),{spreadAlgo:e}).then((e=>e.createSpreadAlgo))}async createTelegramApiKey(e,n){return this.execute(ne(`mutation CreateTelegramApiKey($telegramId: String!) {\n        createTelegramApiKey(telegramId: $telegramId) { __typename ${e.join(" ")} }\n      }`),{telegramId:n}).then((e=>e.createTelegramApiKey))}async createTwapAlgo(e){return this.execute(ne("mutation CreateTwapAlgo($twapAlgo: CreateTwapAlgo!) {\n        createTwapAlgo(twapAlgo: $twapAlgo)\n      }"),{twapAlgo:e}).then((e=>e.createTwapAlgo))}async previewSmartOrderRouterAlgo(e,n){return this.execute(ne(`mutation PreviewSmartOrderRouterAlgo($algo: CreateSmartOrderRouterAlgo!) {\n        previewSmartOrderRouterAlgo(algo: $algo) { __typename ${e.join(" ")} }\n      }`),{algo:n}).then((e=>e.previewSmartOrderRouterAlgo))}async removeApiKey(e){return this.execute(ne("mutation RemoveApiKey($apiKey: String!) {\n        removeApiKey(apiKey: $apiKey)\n      }"),{apiKey:e}).then((e=>e.removeApiKey))}async removeTelegramApiKeys(){return this.execute(ne("mutation RemoveTelegramApiKeys {\n        removeTelegramApiKeys\n      }")).then((e=>e.removeTelegramApiKeys))}async sendAlgoControlCommand(e,n){return this.execute(ne("mutation SendAlgoControlCommand($orderId: OrderId!, $command: AlgoControlCommand!) {\n        sendAlgoControlCommand(orderId: $orderId, command: $command)\n      }"),{orderId:e,command:n}).then((e=>e.sendAlgoControlCommand))}async setCredentials(e,n){return this.execute(ne("mutation SetCredentials($credentials: String!, $componentId: ComponentId!) {\n        setCredentials(credentials: $credentials, componentId: $componentId)\n      }"),{credentials:e,componentId:n}).then((e=>e.setCredentials))}async updateMarket(e,n){return this.execute(ne(`mutation UpdateMarket($payload: UpdateMarket!) {\n        updateMarket(payload: $payload) { __typename ${e.join(" ")} }\n      }`),{payload:n}).then((e=>e.updateMarket))}}var re,ie,ae,oe,de,se,ue,ce,le,me,pe,ye,fe,Ie,he,ve;!function(e){e.Pause="PAUSE",e.Start="START",e.Stop="STOP"}(re||(re={})),function(e){e.Chaser="CHASER",e.MarketMaker="MARKET_MAKER",e.Pov="POV",e.SmartOrderRouter="SMART_ORDER_ROUTER",e.Spread="SPREAD",e.Twap="TWAP"}(ie||(ie={})),function(e){e.Done="DONE",e.Paused="PAUSED",e.Running="RUNNING"}(ae||(ae={})),function(e){e.FifteenMinute="FIFTEEN_MINUTE",e.FiveSecond="FIVE_SECOND",e.OneDay="ONE_DAY",e.OneHour="ONE_HOUR",e.OneMinute="ONE_MINUTE",e.OneSecond="ONE_SECOND"}(oe||(oe={})),function(e){e.Cash="CASH",e.Combo="COMBO",e.Fra="FRA",e.Fut="FUT",e.Fwd="FWD",e.Idx="IDX",e.Index="INDEX",e.Irs="IRS",e.Ooc="OOC",e.Oof="OOF"}(de||(de={})),function(e){e.Limit="LIMIT",e.StopLossLimit="STOP_LOSS_LIMIT",e.TakeProfitLimit="TAKE_PROFIT_LIMIT"}(se||(se={})),function(e){e.Gtc="GTC",e.Gtd="GTD",e.Ioc="IOC"}(ue||(ue={})),function(e){e.Brokerage="BROKERAGE",e.Platform="PLATFORM"}(ce||(ce={})),function(e){e.Correction="CORRECTION",e.Normal="NORMAL",e.Reversal="REVERSAL"}(le||(le={})),function(e){e.Basic="BASIC",e.Professional="PROFESSIONAL"}(me||(me={})),function(e){e.MM="MM",e.Spread="SPREAD"}(pe||(pe={})),function(e){e.Base="BASE",e.Quote="QUOTE"}(ye||(ye={})),function(e){e.Algo="ALGO",e.Api="API",e.Cli="CLI",e.External="EXTERNAL",e.Gui="GUI",e.Other="OTHER",e.Telegram="TELEGRAM"}(fe||(fe={})),function(e){e.Acked="ACKED",e.Canceled="CANCELED",e.Canceling="CANCELING",e.Filled="FILLED",e.Open="OPEN",e.Out="OUT",e.Rejected="REJECTED",e.Stale="STALE"}(Ie||(Ie={})),function(e){e.AlgoPaused="ALGO_PAUSED",e.AlgoStopped="ALGO_STOPPED",e.CancelPending="CANCEL_PENDING",e.MaxPosition="MAX_POSITION",e.MinPosition="MIN_POSITION",e.NoAsk="NO_ASK",e.NoBid="NO_BID",e.NoReferencePrice="NO_REFERENCE_PRICE",e.NoReferenceSize="NO_REFERENCE_SIZE",e.OpenOrderOutsideTolerance="OPEN_ORDER_OUTSIDE_TOLERANCE",e.OpenOrderWithinTolerance="OPEN_ORDER_WITHIN_TOLERANCE",e.WithinFillLockout="WITHIN_FILL_LOCKOUT",e.WithinOrderLockout="WITHIN_ORDER_LOCKOUT",e.WithinRejectLockout="WITHIN_REJECT_LOCKOUT"}(he||(he={})),function(e){e.BidAsk="BID_ASK",e.HedgeMarketBidAsk="HEDGE_MARKET_BID_ASK",e.Mid="MID"}(ve||(ve={}));let ge={host:"https://app.architect.co",apiKey:"",apiSecret:"",tradingMode:"live"},Oe=new Proxy({},{get(e,n){throw new Error("Client is not initialized")},set(e,n,t){throw new Error("Client is not initialized")}});async function _e(e,n){if("undefined"!=typeof Office&&Office.context&&"undefined"!=typeof OfficeRuntime)await OfficeRuntime.storage.setItem(e,n);else{if("undefined"==typeof localStorage)throw new Error("No available storage method to set to.");localStorage.setItem(e,n)}}async function Te(e){if("undefined"!=typeof Office&&Office.context&&"undefined"!=typeof OfficeRuntime)return await OfficeRuntime.storage.getItem(e);if("undefined"!=typeof localStorage)return localStorage.getItem(e);throw new Error("No available storage method to get from.")}async function Se(){const e=await Te("ArchitectApiKey"),n=await Te("ArchitectApiSecret");if(!e||!n)throw new Error("API Key and Secret must be provided.");ge.apiKey=e,ge.apiSecret=n,Oe=function(e){return new te(e,r)}(ge)}CustomFunctions.associate("INITIALIZECLIENT",Se),CustomFunctions.associate("GETMARKETMID",(async function(e){try{const n=await Oe.marketSnapshot([],e);if(!n||!n.bidPrice||!n.askPrice)return console.error("Invalid or missing snapshot data"),NaN;const t=parseFloat(n.bidPrice),r=parseFloat(n.askPrice);return isNaN(t)||isNaN(r)?NaN:(t+r)/2}catch(e){return void console.error("Error fetching market snapshot:",e)}})),CustomFunctions.associate("TESTFUNCTION",(function(){return"Hello World!"})),CustomFunctions.associate("VALIDATEAPIKEY",(function(){const e=Te("ArchitectApiKey"),n=Te("ArchitectApiSecret");return!(!e||!n)})),CustomFunctions.associate("TESTCLIENT",(async function(){return(await Oe.filterMarkets([],{venue:"CME",base:"MES",quote:"",underlying:"",maxResults:1,resultsOffset:0,searchString:"",onlyFavorites:!1,sortByVolumeDesc:!0}))[0].exchangeSymbol}))}},n={};function t(r){var i=n[r];if(void 0!==i)return i.exports;var a=n[r]={exports:{}};return e[r](a,a.exports,t),a.exports}t.d=(e,n)=>{for(var r in n)t.o(n,r)&&!t.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:n[r]})},t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),t.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var r={};t.r(r);var i=t(880);return Office.onReady((()=>{const e=document.getElementById("api-form");function n(e){return(e||"").trim()}e.addEventListener("submit",(async t=>{t.preventDefault();const r=new FormData(e),a=n(r.get("apiKey")),o=n(r.get("apiSecret")),d=document.getElementById("status");if(a&&o)try{(0,i.setStorageItem)("ArchitectApiKey",a),(0,i.setStorageItem)("ArchitectApiSecret",o),d.textContent="Credentials saved!",(0,i.initializeClient)(),d.textContent="Credentials saved! Client initialized!"}catch(e){d.textContent=`Error: ${e.message}`}else d.textContent="API Key and Secret are required."}))})),r})()));